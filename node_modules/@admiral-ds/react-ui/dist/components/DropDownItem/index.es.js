import{jsx}from"react/jsx-runtime";import*as e from"react";import styled,{css}from"styled-components";import{paddings,styleTextMixin,colorTextMixin,backgroundColor}from"./mixins.es.js";const hoverStyle=css`
  background-color: var(--admiral-color-Opacity_Hover, ${p=>p.theme.color["Opacity/Hover"]});
  cursor: pointer;
`,Item=styled.li`
  display: flex;
  align-items: center;
  user-select: none;
  flex-flow: wrap;
  position: relative;
  justify-content: space-between;
  outline: none;
  white-space: pre;
  margin: 0;
  ${paddings}
  ${styleTextMixin}
  ${colorTextMixin}
  ${backgroundColor}
  ${p=>p.$hovered&&hoverStyle};

  &:hover {
    ${hoverStyle}
  }

  &&[data-disabled='true'] {
    cursor: not-allowed;
    background-color: var(--admiral-color-Special_ElevatedBG, ${p=>p.theme.color["Special/Elevated BG"]});
    color: var(--admiral-color-Neutral_Neutral30, ${p=>p.theme.color["Neutral/Neutral 30"]});
    && *[fill^='#'] {
      fill: var(--admiral-color-Neutral_Neutral30, ${p=>p.theme.color["Neutral/Neutral 30"]});
    }
  }
`,DropDownItem=e.forwardRef(({children,disabled,hovered,dimension="l",selected=!1,id,...props},ref)=>jsx(Item,{ref,$dimension:dimension,tabIndex:disabled?void 0:props.tabIndex||0,selected,$hovered:hovered,id,"data-disabled":disabled,...props,children}));DropDownItem.displayName="DropDownItem";export{DropDownItem};
//# sourceMappingURL=index.es.js.map
