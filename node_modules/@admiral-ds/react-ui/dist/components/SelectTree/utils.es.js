const updateNodeStatus=root=>(childrenStatus=>{if(0!==childrenStatus.length)return childrenStatus.every(status=>"unchecked"===status)?"unchecked":childrenStatus.every(status=>"checked"===status)?"checked":"indeterminate"})(root.map(branch=>{let branchStatus;return branch.children?(branchStatus=updateNodeStatus(branch.children),"status"in branch&&branchStatus&&(branch.status=branchStatus,branch.checked="checked"===branchStatus||"indeterminate"===branchStatus)):"status"in branch&&(branchStatus=branch.status,branch.checked="checked"===branchStatus||"indeterminate"===branchStatus),branchStatus}).filter(item=>item)),checkParent=(root,node)=>{for(const branch of root)if(branch.children){if(branch.children.find(child=>child.id===node.id))return"status"in branch&&(branch.status="checked",branch.checked=!0),!0;if(checkParent(branch.children,node))return"status"in branch&&(branch.status="checked",branch.checked=!0),!0}return!1},setNodeStatus=list=>{list.forEach(node=>{"checked"in node&&(node.status=node.checked?"checked":"unchecked"),node.children&&setNodeStatus(node.children)})};export{checkParent,setNodeStatus,updateNodeStatus};
//# sourceMappingURL=utils.es.js.map
