import type { ButtonHTMLAttributes } from 'react';
import { css } from 'styled-components';
import type { Adaptive } from './ContentSwitcherComponent';
export interface ContentSwitcherItemProps extends ButtonHTMLAttributes<HTMLButtonElement> {
    /** Активная кнопка */
    active?: boolean;
    /** Позволяет добавлять  миксин созданный с помощью styled css  */
    cssMixin?: ReturnType<typeof css>;
    adaptive?: Adaptive;
}
export declare const ContentSwitcherItemButton: import("styled-components/dist/types").IStyledComponentBase<"web", import("styled-components/dist/types").Substitute<import("react").DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>, {
    $active?: boolean | undefined;
    $adaptive?: "fill" | undefined;
    $cssMixin?: import("styled-components").RuleSet<object> | undefined;
}>> & string;
export declare const ContentSwitcherItem: import("react").ForwardRefExoticComponent<ContentSwitcherItemProps & import("react").RefAttributes<HTMLButtonElement>>;
//# sourceMappingURL=ContentSwitcherItem.d.ts.map