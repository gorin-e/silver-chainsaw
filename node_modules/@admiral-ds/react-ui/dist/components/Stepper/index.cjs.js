"use strict";var jsxRuntime=require("react/jsx-runtime"),e=require("react"),StepperContext=require("./StepperContext.cjs.js"),style=require("./style.cjs.js"),Step=require("./Step.cjs.js"),StepContent=require("./StepContent.cjs.js");const Stepper=({orientation="horizontal",activeStep=-1,lineClamp=3,stepWidth,hideLastStepLine=!1,mobile,children,...props})=>{const listRef=e.useRef(null),steps=e.Children.toArray(children).map((step,index)=>e.isValidElement(step)?activeStep===index?e.cloneElement(step,{index,role:"listitem","aria-current":"step",hideLine:index===e.Children.toArray(children).length-1&&hideLastStepLine,...step.props}):e.cloneElement(step,{index,role:"listitem",hideLine:index===e.Children.toArray(children).length-1&&hideLastStepLine,...step.props}):null),stepsAmount=steps.length,contextValue=e.useMemo(()=>({activeStep,orientation,lineClamp,stepsAmount,stepWidth,mobile}),[activeStep,orientation,lineClamp,stepWidth,stepsAmount,mobile]);return e.useEffect(()=>{if(listRef.current&&mobile&&"horizontal"===orientation){const activeNode=listRef.current.childNodes[activeStep]||listRef.current.firstChild;listRef.current.scrollLeft=0===activeStep?activeNode.offsetLeft:activeNode.offsetLeft-16}},[activeStep,steps]),jsxRuntime.jsx(StepperContext.StepperContext.Provider,{value:contextValue,children:jsxRuntime.jsx(style.List,{ref:listRef,role:"list",$orientation:orientation,...props,children:steps})})};Stepper.displayName="Stepper",exports.StepperContext=StepperContext.StepperContext,exports.Step=Step.Step,exports.StepContent=StepContent.StepContent,exports.Stepper=Stepper;
//# sourceMappingURL=index.cjs.js.map
