import type { FC, HTMLAttributes } from 'react';
import type { Orientation } from './type';
export interface StepperProps extends HTMLAttributes<HTMLUListElement> {
    /** Ориентация компонента */
    orientation?: Orientation;
    /** Индекс активного шага, нумерация шагов начинается с 0.
     * Этот параметр будет перезаписан, если какому-то шагу задан параметр active равный true
     */
    activeStep: number;
    /** Количество строк в шаге, все шаги по высоте вмещают одинаковое количество строк */
    lineClamp?: 1 | 2 | 3;
    /** Ширина шага
     * Если данный параметр не задан, то ширина шага будет адаптивной:
     * - при горизонтальной ориентации все шаги будут в равной степени делить между собой свободное пространство (ширину степпера);
     * - при вертикальной ориентации каждый шаг займет 100% ширины степпера.
     * То есть шаги будут пропорционально увеличиваться/уменьшаться при изменении ширины степпера.
     */
    stepWidth?: number | string;
    /** В последнем шаге опционально можно выключать статусную полосу */
    hideLastStepLine?: boolean;
    /** Мобильное отображение компонента
     * В мобильной версии компонента применяется только горизонтальный вариант компонента, ширина шагов фиксирована,
     * по мере прохождения шагов происходит автоматический скролл по горизонтали
     */
    mobile?: boolean;
}
export * from './type';
export * from './Step';
export * from './StepContent';
export * from './StepperContext';
export declare const Stepper: FC<StepperProps>;
//# sourceMappingURL=index.d.ts.map