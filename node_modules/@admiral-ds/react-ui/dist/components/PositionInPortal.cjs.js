"use strict";var jsxRuntime=require("react/jsx-runtime"),styled=require("styled-components"),observeRect=require("./common/observeRect.cjs.js"),reactDom=require("react-dom"),e=require("react");function _interopDefault(e){return e&&e.__esModule?e:{default:e}}const PositionedPortalContainer=_interopDefault(styled).default.div`
  pointer-events: none;
  position: fixed;
  overflow: visible;
  z-index: var(--admiral-z-index-dropdown, ${({theme})=>theme.zIndex.dropdown});
`;exports.PositionInPortal=({targetElement,rootRef,fullContainerWidth,...props})=>{const positionedPortalContainerRef=e.useRef(null);return e.useEffect(()=>{const node=positionedPortalContainerRef.current;if(node&&targetElement){const observer=observeRect(targetElement,rect=>{if(rect){const{x,y,height,width}=rect,{style}=node;style.top=`${y}px`,style.left=fullContainerWidth?"0px":`${x}px`,style.height=`${height}px`,style.width=fullContainerWidth?"100%":`${width}px`}});return observer.observe(),()=>{observer.unobserve()}}},[targetElement,fullContainerWidth]),reactDom.createPortal(jsxRuntime.jsx(PositionedPortalContainer,{ref:positionedPortalContainerRef,...props}),rootRef?.current||document.body)},exports.PositionedPortalContainer=PositionedPortalContainer;
//# sourceMappingURL=PositionInPortal.cjs.js.map
