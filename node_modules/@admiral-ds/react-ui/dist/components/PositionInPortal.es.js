import{jsx}from"react/jsx-runtime";import styled from"styled-components";import observeRect from"./common/observeRect.es.js";import{createPortal}from"react-dom";import{useRef,useEffect}from"react";const PositionedPortalContainer=styled.div`
  pointer-events: none;
  position: fixed;
  overflow: visible;
  z-index: var(--admiral-z-index-dropdown, ${({theme})=>theme.zIndex.dropdown});
`,PositionInPortal=({targetElement,rootRef,fullContainerWidth,...props})=>{const positionedPortalContainerRef=useRef(null);return useEffect(()=>{const node=positionedPortalContainerRef.current;if(node&&targetElement){const observer=observeRect(targetElement,rect=>{if(rect){const{x,y,height,width}=rect,{style}=node;style.top=`${y}px`,style.left=fullContainerWidth?"0px":`${x}px`,style.height=`${height}px`,style.width=fullContainerWidth?"100%":`${width}px`}});return observer.observe(),()=>{observer.unobserve()}}},[targetElement,fullContainerWidth]),createPortal(jsx(PositionedPortalContainer,{ref:positionedPortalContainerRef,...props}),rootRef?.current||document.body)};export{PositionInPortal,PositionedPortalContainer};
//# sourceMappingURL=PositionInPortal.es.js.map
