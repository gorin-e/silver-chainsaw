"use strict";var jsxRuntime=require("react/jsx-runtime"),e=require("react"),styled=require("styled-components"),constants=require("./constants.cjs.js"),index=require("../OverflowMenu/index.cjs.js"),ActionBarItems=require("./ActionBarItems.cjs.js");require("../themes/common/locales.cjs.js"),require("../Typography/typography.cjs.js"),require("../Typography/defaultTypographyMixin.cjs.js");var borderRadius=require("../themes/borderRadius.cjs.js");function _interopDefault(e){return e&&e.__esModule?e:{default:e}}var styled__default=_interopDefault(styled);const getActionBarHeight=dimension=>{switch(dimension){case"s":return constants.ACTION_BAR_ITEM_HEIGHT_S;case"m":return constants.ACTION_BAR_ITEM_HEIGHT_M;case"l":return constants.ACTION_BAR_ITEM_HEIGHT_L;default:return constants.ACTION_BAR_ITEM_HEIGHT_XL}},Wrapper=styled__default.default.div`
  box-sizing: border-box;
  height: ${({$dimension})=>getActionBarHeight($dimension)}px;

  display: flex;
  align-items: center;
`,ActionBarOverflowMenuItem=styled__default.default.div`
  flex-shrink: 0;
  display: flex;
  align-items: center;
  justify-content: center;
  width: ${({$dimension})=>getActionBarHeight($dimension)}px;
  height: ${({$dimension})=>getActionBarHeight($dimension)}px;
`,getFocusBorderOffset=$dimension=>{switch($dimension){case"s":return constants.FOCUS_ACTION_BAR_OVERFLOW_MENU_BORDER_OFFSET_S;case"m":return constants.FOCUS_ACTION_BAR_OVERFLOW_MENU_BORDER_OFFSET_M;case"l":return constants.FOCUS_ACTION_BAR_OVERFLOW_MENU_BORDER_OFFSET_L;default:return constants.FOCUS_ACTION_BAR_OVERFLOW_MENU_BORDER_OFFSET_XL}};const StyledOverflowMenu=styled__default.default(index.OverflowMenu)`
  &:focus-visible:not(:disabled) {
    outline: none;

    &:before {
      border: 2px solid var(--admiral-color-Primary_Primary60Main, ${p=>p.theme.color["Primary/Primary 60 Main"]});
      border-radius: ${p=>function(componentBorderRadius){switch(componentBorderRadius){case"0":return"0";case"2px":return"6px";case"6px":return"10px";case"8px":return"12px";case"10px":return"14px";default:return"8px"}}(borderRadius.mediumGroupBorderRadius(p.theme.shape))};
      content: '';
      display: block;
      position: absolute;
      width: ${({$dimension})=>getActionBarHeight($dimension)+4}px;
      height: ${({$dimension})=>getActionBarHeight($dimension)+4}px;
      top: -${p=>getFocusBorderOffset(p.$dimension)}px;
      left: -${p=>getFocusBorderOffset(p.$dimension)}px;
      right: -${p=>getFocusBorderOffset(p.$dimension)}px;
      bottom: -${p=>getFocusBorderOffset(p.$dimension)}px;
      pointer-events: none;
    }
  }
`;exports.ActionBarDivider=ActionBarItems.ActionBarDivider,exports.ActionBarDropMenuItem=ActionBarItems.ActionBarDropMenuItem,exports.ActionBarDropMenuItemWrapper=ActionBarItems.ActionBarDropMenuItemWrapper,exports.ActionBarItem=ActionBarItems.ActionBarItem,exports.ActionBarItemWithTooltip=ActionBarItems.ActionBarItemWithTooltip,exports.ActionBar=({dimension="xl",renderActionBarItem,renderDropMenuItem,items,itemIsDisabled,...props})=>{const[containerWidth,setContainerWidth]=e.useState(0),containerRef=e.useRef(null);e.useLayoutEffect(()=>{if(containerRef.current){const resizeObserver=new ResizeObserver(entries=>{entries.forEach(entry=>setContainerWidth(entry.contentRect.width||0))});return resizeObserver.observe(containerRef.current),()=>{resizeObserver.disconnect()}}},[]);const[visibleItems,setVisibleItems]=e.useState([]),[hiddenItems,setHiddenItems]=e.useState([]);e.useLayoutEffect(()=>{if(containerRef.current){const buttonWidth=getActionBarHeight(dimension),dividerWidth="s"===dimension?constants.DIVIDER_SIZE_S:constants.DIVIDER_SIZE_M,totalItemsWidth=items.reduce((acc,item)=>acc+buttonWidth+(item.withDivider?dividerWidth:0),0);let availableWidth=containerWidth-(totalItemsWidth>containerWidth?buttonWidth:0);const newVisibleItems=[],newHiddenItems=[],addToVisible=item=>newVisibleItems.push(item),addToHidden=item=>newHiddenItems.push(item);items.forEach(item=>{const itemWidth=buttonWidth+(item.withDivider?dividerWidth:0);availableWidth>=itemWidth?(addToVisible(item),availableWidth-=itemWidth):(addToHidden(item),availableWidth=0)}),setVisibleItems(newVisibleItems),setHiddenItems(newHiddenItems)}},[items,containerWidth,dimension]);const overflowMenuItems=e.useMemo(()=>0===hiddenItems.length?[]:hiddenItems.map(({itemId})=>({id:itemId,render:renderDropMenuItem(itemId),disabled:itemIsDisabled(itemId)})),[hiddenItems,dimension]);return jsxRuntime.jsxs(Wrapper,{...props,ref:containerRef,$dimension:dimension,children:[visibleItems.map(item=>(({itemId,withDivider})=>jsxRuntime.jsxs(e.Fragment,{children:[renderActionBarItem(itemId),withDivider&&jsxRuntime.jsx(ActionBarItems.ActionBarDivider,{dimension},`divider${itemId}`)]},itemId))(item)),hiddenItems.length>0&&jsxRuntime.jsx(ActionBarOverflowMenuItem,{$dimension:dimension,children:jsxRuntime.jsx(StyledOverflowMenu,{$dimension:dimension,items:overflowMenuItems,dimension:"xl"===dimension?"l":dimension})})]})};
//# sourceMappingURL=index.cjs.js.map
