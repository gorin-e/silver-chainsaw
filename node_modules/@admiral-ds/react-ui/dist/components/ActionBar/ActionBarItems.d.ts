/// <reference types="react" />
import type { ActionBarDimension, ActionBarDividerProps, ActionBarDropMenuItemProps } from '../../components/ActionBar/types';
import type { IconButtonProps } from '../../components/IconButton';
export declare const ActionBarDivider: ({ dimension, ...props }: ActionBarDividerProps) => import("react/jsx-runtime").JSX.Element;
export declare const ActionBarItem: import("react").ForwardRefExoticComponent<IconButtonProps & import("react").RefAttributes<HTMLButtonElement>>;
export declare const ActionBarItemWithTooltip: (props: IconButtonProps & import("react").RefAttributes<HTMLButtonElement> & import("../../components/TooltipHOC").TooltipHocProps & import("react").RefAttributes<HTMLElement>) => import("react").ReactElement<any, string | import("react").JSXElementConstructor<any>>;
export declare const ActionBarDropMenuItemWrapper: import("styled-components/dist/types").IStyledComponentBase<"web", import("styled-components/dist/types").Substitute<import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLDivElement>, HTMLDivElement>, {
    $dimension: ActionBarDimension;
}>> & string;
export declare const ActionBarDropMenuItem: import("react").ForwardRefExoticComponent<ActionBarDropMenuItemProps & import("react").RefAttributes<HTMLDivElement>>;
//# sourceMappingURL=ActionBarItems.d.ts.map