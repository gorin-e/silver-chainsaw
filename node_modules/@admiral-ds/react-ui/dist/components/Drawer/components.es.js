import{jsx}from"react/jsx-runtime";import{createContext,useContext,useRef,useLayoutEffect}from"react";import styled from"styled-components";import{typography}from"../Typography/typography.es.js";import"../Typography/defaultTypographyMixin.es.js";import{debounce}from"../common/utils/debounce.es.js";import{resizePaddings}from"../common/dom/resizePaddings.es.js";const Title=styled.h5`
  ${({$mobile})=>$mobile?typography["Header/H6"]:typography["Header/H5"]};
  color: var(--admiral-color-Neutral_Neutral90, ${p=>p.theme.color["Neutral/Neutral 90"]});
  margin: 0;
  padding: ${({$mobile,$displayCloseIcon})=>$mobile?$displayCloseIcon?"0 48px 8px 16px":"0 16px 8px":$displayCloseIcon?"0 56px 8px 24px":"0 24px 8px"};
`,Content=styled.div`
  overflow-y: auto;
  outline: none;
  scrollbar-gutter: stable;
  padding-block: 8px;
  padding-inline: ${({$mobile})=>($mobile?16:24)+"px"};
  height: 100%;
`,ButtonPanel=styled.div`
  display: flex;
  flex-direction: ${({$mobile})=>$mobile?"column-reverse":"row-reverse"};
  padding: ${({$mobile})=>$mobile?"16px 16px 0":"16px 24px 0"};

  & > button {
    margin: ${({$mobile})=>$mobile?"0 0 16px 0":"0 16px 0 0"};
    ${({$mobile})=>$mobile&&"width: 100%;"}
  }

  & > button:first-child {
    margin: 0;
  }
`,DrawerContext=createContext({mobile:!1,displayCloseIcon:!0}),DrawerTitle=({children,...props})=>{const{mobile,displayCloseIcon}=useContext(DrawerContext);return jsx(Title,{$mobile:mobile,$displayCloseIcon:displayCloseIcon,as:mobile?"h6":"h5",...props,children})},DrawerContent=({children,...props})=>{const contentRef=useRef(null),mobile=useContext(DrawerContext).mobile;return useLayoutEffect(()=>{const node=contentRef.current;if(node){resizePaddings(node);const resizeObserver=new ResizeObserver(debounce(()=>resizePaddings(node),250));return resizeObserver.observe(node),()=>{resizeObserver.unobserve(node)}}},[]),jsx(Content,{tabIndex:-1,ref:contentRef,$mobile:mobile,...props,children})},DrawerButtonPanel=({children,...props})=>{const mobile=useContext(DrawerContext).mobile;return jsx(ButtonPanel,{$mobile:mobile,...props,children})};export{DrawerButtonPanel,DrawerContent,DrawerContext,DrawerTitle};
//# sourceMappingURL=components.es.js.map
