/// <reference types="react" />
import type { css } from 'styled-components';
import type { FloatingButtonProps } from '../../components/FloatingButton';
type Dimension = 'm' | 'xl';
export interface FloatingButtonMenuProps extends FloatingButtonProps {
    /** Иконка для размещения в основной кнопке */
    icon: React.ReactNode;
    /** Состояние видимости меню */
    isOpen?: boolean;
    /** Обработчик события на изменение видимости меню */
    onOpenChange?: (isOpen: boolean) => void;
    /** Размер компонента */
    dimension?: Dimension;
    /** Мобильная версия компонента */
    mobile?: boolean;
    /** Отключение компонента */
    disabled?: boolean;
    /** Позволяет добавлять миксин для контейнера компонента, созданный с помощью styled css  */
    containerCssMixin?: ReturnType<typeof css>;
    /** Позволяет добавлять класс на контейнер компонента  */
    containerClassName?: string;
    /** Позволяет добавлять стили на контейнер компонента  */
    containerStyle?: React.CSSProperties;
}
export declare const FloatingButtonMenu: {
    ({ icon, isOpen: propIsOpen, onOpenChange, appearance, dimension, mobile, disabled, type, containerClassName, containerStyle, containerCssMixin, children, ...props }: FloatingButtonMenuProps): import("react/jsx-runtime").JSX.Element;
    displayName: string;
};
export {};
//# sourceMappingURL=FloatingButtonMenu.d.ts.map