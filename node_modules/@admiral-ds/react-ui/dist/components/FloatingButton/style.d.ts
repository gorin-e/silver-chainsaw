/// <reference types="react" />
import type { FloatingButtonProps } from '../FloatingButton';
import type { FloatingButtonMenuProps } from './FloatingButtonMenu';
export declare const FloatingButtonWrapper: import("styled-components/dist/types").IStyledComponentBase<"web", import("styled-components/dist/types").Substitute<import("react").DetailedHTMLProps<import("react").ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>, {
    $dimension: FloatingButtonProps['dimension'];
    $mobile: boolean;
    disabled: boolean;
}>> & string;
export declare const FloatingButtonWrapperWithTooltip: (props: import("styled-components").FastOmit<import("react").DetailedHTMLProps<import("react").ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>, "disabled" | "$dimension" | "$mobile"> & {
    $dimension: FloatingButtonProps['dimension'];
    $mobile: boolean;
    disabled: boolean;
} & import("../../components/TooltipHOC").TooltipHocProps & import("react").RefAttributes<HTMLElement>) => import("react").ReactElement<any, string | import("react").JSXElementConstructor<any>>;
export declare const FloatingButtonContent: import("styled-components/dist/types").IStyledComponentBase<"web", import("styled-components/dist/types").Substitute<import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLDivElement>, HTMLDivElement>, {
    $dimension: FloatingButtonProps['dimension'];
    $appearance: FloatingButtonProps['appearance'];
    $disabled: boolean;
}>> & string;
export declare const Badge: import("styled-components/dist/types").IStyledComponentBase<"web", import("styled-components").FastOmit<Omit<import("../../components/Badge").BadgeProps & import("react").RefAttributes<HTMLDivElement>, "ref"> & {
    ref?: import("react").RefObject<HTMLDivElement> | ((instance: HTMLDivElement | null) => void) | null | undefined;
}, never>> & string & Omit<import("react").ForwardRefExoticComponent<import("../../components/Badge").BadgeProps & import("react").RefAttributes<HTMLDivElement>>, keyof import("react").Component<any, {}, any>>;
export declare const BadgeDot: import("styled-components/dist/types").IStyledComponentBase<"web", import("styled-components").FastOmit<Omit<import("../../components/BadgeDot").BadgeDotProps & import("react").RefAttributes<HTMLDivElement>, "ref"> & {
    ref?: import("react").RefObject<HTMLDivElement> | ((instance: HTMLDivElement | null) => void) | null | undefined;
}, never>> & string & Omit<import("react").ForwardRefExoticComponent<import("../../components/BadgeDot").BadgeDotProps & import("react").RefAttributes<HTMLDivElement>>, keyof import("react").Component<any, {}, any>>;
export declare const TRANSITION_DURATION = 200;
export declare const GroupWrapper: import("styled-components/dist/types").IStyledComponentBase<"web", import("styled-components/dist/types").Substitute<import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLDivElement>, HTMLDivElement>, {
    $dimension: FloatingButtonMenuProps['dimension'];
    $mobile: boolean;
    $dropContainerCssMixin?: FloatingButtonMenuProps['containerCssMixin'];
}>> & string;
export declare const MenuWrapper: import("styled-components/dist/types").IStyledComponentBase<"web", import("styled-components").FastOmit<import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLDivElement>, HTMLDivElement>, never>> & string;
//# sourceMappingURL=style.d.ts.map