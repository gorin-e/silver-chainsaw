"use strict";var jsxRuntime=require("react/jsx-runtime"),e=require("react"),index=require("./index.cjs.js"),CloseOutline=require("../../node_modules/@admiral-ds/icons/build/service/CloseOutline.svg.cjs.js"),style=require("./style.cjs.js"),useMountTransition=require("./useMountTransition.cjs.js");const FloatingButtonMenu=({icon,isOpen:propIsOpen,onOpenChange,appearance="primary",dimension="m",mobile=!1,disabled=!1,type="button",containerClassName,containerStyle,containerCssMixin,children,...props})=>{const[open,setOpen]=e.useState(!1),isOpen=propIsOpen??open,hasTransitionedIn=useMountTransition.useMountTransition(isOpen,style.TRANSITION_DURATION),floatButtonGroupRef=e.useRef(null),floatButtonRef=e.useRef(null),onClick=e=>{floatButtonGroupRef.current?.contains(e.target)?floatButtonRef.current?.contains(e.target)&&setOpen(prevState=>(onOpenChange?.(!prevState),!prevState)):null!=floatButtonGroupRef.current?.querySelector(".floating_button_menu")&&(setOpen(!1),onOpenChange?.(!1))};return e.useEffect(()=>(document.addEventListener("click",onClick),()=>{document.removeEventListener("click",onClick)}),[]),jsxRuntime.jsxs(style.GroupWrapper,{ref:floatButtonGroupRef,$dimension:dimension,$mobile:mobile,$dropContainerCssMixin:containerCssMixin,className:containerClassName,style:containerStyle,children:[(isOpen||hasTransitionedIn)&&!disabled&&jsxRuntime.jsx(style.MenuWrapper,{className:"floating_button_menu","data-dimension":dimension,"data-visible":isOpen&&hasTransitionedIn,children}),jsxRuntime.jsx(index.FloatingButton,{ref:floatButtonRef,appearance,dimension,type,disabled,...props,children:isOpen?jsxRuntime.jsx(CloseOutline.ReactComponent,{}):icon})]})};FloatingButtonMenu.displayName="FloatingButtonMenu",exports.FloatingButtonMenu=FloatingButtonMenu;
//# sourceMappingURL=FloatingButtonMenu.cjs.js.map
