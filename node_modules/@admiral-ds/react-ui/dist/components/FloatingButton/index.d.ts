import type { ButtonHTMLAttributes } from 'react';
import type { ITooltipProps } from '../../components/Tooltip';
type Appearance = 'primary' | 'secondary';
type Dimension = 'm' | 'xl';
type BadgeProps = {
    /** Число, которое будет прописано в компоненте Badge */
    count?: number;
    /** Отображение компонента в виде BadgeDot */
    dot?: boolean;
    /** Внешний вид компонента Badge. По умолчанию info */
    appearance?: 'info' | 'error' | 'success' | 'warning';
};
export interface FloatingButtonProps extends ButtonHTMLAttributes<HTMLButtonElement> {
    /** Внешний вид компонента */
    appearance?: Appearance;
    /** Размер компонента */
    dimension?: Dimension;
    /** Использование компонента вместе с Badge, где параметр badge - это объект с настройками для отображения бейджа */
    badge?: BadgeProps;
    /** Мобильная версия компонента */
    mobile?: boolean;
    /** Отключение компонента */
    disabled?: boolean;
    /** Текст тултипа. Если параметр tooltip не задан, то тултип не отображается */
    tooltip?: string;
    /** Расположение тултипа */
    tooltipPosition?: ITooltipProps['tooltipPosition'];
}
export declare const FloatingButton: import("react").ForwardRefExoticComponent<FloatingButtonProps & import("react").RefAttributes<HTMLButtonElement>>;
export {};
//# sourceMappingURL=index.d.ts.map