import{jsx,jsxs}from"react/jsx-runtime";import{useState,useRef,useLayoutEffect,useEffect}from"react";import{keyboardKey}from"../common/keyboardKey.es.js";import{throttle}from"../common/utils/throttle.es.js";import{calcValue}from"./utils.es.js";import{Wrapper,TrackWrapper,Track,FilledTrack,DefaultTrack,Thumb,ThumbCircle}from"./style.es.js";import{TickMarks}from"./TickMarks.es.js";import{ThumbTooltip}from"./ThumbTooltip.es.js";const Slider=({minValue=0,maxValue=20,decimal,thousand,precision=2,value=0,onChange,renderTickMark,tickMarks:points,disabled=!1,step:userStep=1,dimension="xl",skeleton=!1,showTooltip=!1,...props})=>{const tickMarks=Array.isArray(points)?points:void 0,step="number"==typeof userStep&&userStep>0||"any"===userStep?userStep:1,[isDraging,setDrag]=useState(!1),[animation,setAnimation]=useState(!0),[rangeWidth,setRangeWidth]=useState(0),trackRef=useRef(null),[filledTrack,setFilledTrack]=useState(null),[thumb,setThumb]=useState(null);useLayoutEffect(()=>{let newValue=value;if(step&&"any"!==step&&(newValue=Math.round(newValue/step)*step,step.toString().includes("."))){const decimal=step.toString().match(/\.(\d+)/)?.[1].length;newValue=+newValue.toFixed(decimal)}newValue<minValue&&(newValue=minValue),newValue>maxValue&&(newValue=maxValue),function(value){let calcPercents=(rangeWidth?rangeWidth/(maxValue-minValue):0)*(value>=0?value-minValue:-minValue+value)/rangeWidth*100;calcPercents=calcPercents>100?100:calcPercents,calcPercents=calcPercents<0?0:calcPercents;const sliderCoords=String(value)?calcPercents:0;thumb&&filledTrack&&(thumb.style.left=`${sliderCoords}%`,filledTrack.style.width=`${sliderCoords}%`)}(newValue)},[value,minValue,maxValue,step,rangeWidth,thumb,filledTrack]),useLayoutEffect(()=>{if(trackRef.current){const resizeObserver=new ResizeObserver(entries=>{entries.forEach(entry=>setRangeWidth(entry.contentRect.width||0))});return resizeObserver.observe(trackRef.current),()=>{resizeObserver.disconnect()}}},[setRangeWidth]);const[handleMouseMove,freeResources]=throttle(e=>{const newValue=calcValue(e,trackRef,minValue,maxValue,step,void 0);newValue!==value&&(onChange(e,newValue),setAnimation(!1))},50);useEffect(()=>(isDraging&&!disabled&&(document.addEventListener("mousemove",handleMouseMove),document.addEventListener("mouseup",handleMouseUp),document.addEventListener("touchmove",handleMouseMove),document.addEventListener("touchend",handleMouseUp),document.addEventListener("touchcancel",handleMouseUp)),()=>{freeResources(),document.removeEventListener("mousemove",handleMouseMove),document.removeEventListener("mouseup",handleMouseUp),document.removeEventListener("touchmove",handleMouseMove),document.removeEventListener("touchend",handleMouseUp),document.removeEventListener("touchcancel",handleMouseUp)}));const onSliderClick=e=>{e.stopPropagation(),"mousedown"===e.type?props.onMouseDown?.(e):props.onTouchStart?.(e),setDrag(!0),setAnimation(!0)},onTrackClick=e=>{setAnimation(!0),tickMarks||setDrag(!0);const newValue=calcValue(e,trackRef,minValue,maxValue,step,tickMarks);newValue!==value&&onChange(e,newValue)},handleMouseUp=e=>{setDrag(!1),setAnimation(!0);const newValue=calcValue(e,trackRef,minValue,maxValue,step,tickMarks);newValue!==value&&onChange(e,newValue)};return jsx(Wrapper,{"data-disabled":disabled,$disabled:disabled,$skeleton:skeleton,...props,children:jsx(TrackWrapper,{$dimension:dimension,$skeleton:skeleton,onTouchStart:onTrackClick,onMouseDown:onTrackClick,children:jsxs(Track,{children:[jsx(FilledTrack,{ref:node=>setFilledTrack(node),$animation:animation}),jsxs(DefaultTrack,{ref:trackRef,children:[jsx(TickMarks,{tickMarks:tickMarks?[minValue,...tickMarks,maxValue]:[minValue,maxValue],minValue,maxValue,decimal,precision,thousand,onPointClick:(e,newValue)=>{e.stopPropagation(),props.onMouseDown?.(e),setAnimation(!0),newValue!==value&&onChange(e,newValue)},renderTickMark}),jsx(Thumb,{ref:node=>setThumb(node),$animation:animation,$dimension:dimension,role:"slider",tabIndex:disabled?-1:0,"aria-valuenow":value,"aria-valuemin":minValue,"aria-valuemax":maxValue,onKeyDown:e=>{switch(keyboardKey.getCode(e)){case keyboardKey.ArrowLeft:setAnimation(!0),"any"!==step&&value-step>=minValue&&value-step!==value&&onChange(e,value-step),e.preventDefault();break;case keyboardKey.ArrowRight:setAnimation(!0),"any"!==step&&value+step<=maxValue&&value+step!==value&&onChange(e,value+step),e.preventDefault()}},children:jsx(ThumbCircle,{$dimension:dimension,onTouchStart:onSliderClick,onMouseDown:onSliderClick})}),showTooltip&&jsx(ThumbTooltip,{targetElement:thumb,value,isDraging})]})]})})})};Slider.displayName="Slider";export{Slider};
//# sourceMappingURL=index.es.js.map
