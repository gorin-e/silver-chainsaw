"use strict";exports.calcValue=(e,trackRef,minValue,maxValue,step,tickMarks)=>{const trackLeft=trackRef.current?.getBoundingClientRect().left||0,trackWidth=trackRef.current?.getBoundingClientRect().width||0;let cursorPosition=e.changedTouches?e.changedTouches[0].pageX:e.pageX;cursorPosition<=trackLeft&&(cursorPosition=trackLeft),cursorPosition>=trackLeft+trackWidth&&(cursorPosition=trackLeft+trackWidth);let newValue=((trackWidth,sliderPosition,minValue,maxValue,step)=>{let sliderValue=sliderPosition*(trackWidth?(maxValue-minValue)/trackWidth:0);"number"==typeof step&&(!step||step>=1)&&(sliderValue=Math.round(sliderValue));let calcValue=minValue+sliderValue;if(step&&"number"==typeof step&&(calcValue=Math.round(calcValue/step)*step,step.toString().includes("."))){const decimal=step.toString().match(/\.(\d+)/)?.[1].length;calcValue=+calcValue.toFixed(decimal)}return minValue>calcValue?minValue:calcValue>maxValue?maxValue:calcValue})(trackWidth,Math.round(cursorPosition-trackLeft),minValue,maxValue,step);return tickMarks&&(newValue=((ranges,value,minValue,maxValue)=>{const fullRangePoints=[...ranges.map(elem=>elem),minValue,maxValue].sort((a,b)=>a-b),closestRight=Math.min(...fullRangePoints.filter(v=>v>=value)),closestLeft=Math.max(...fullRangePoints.filter(v=>v<=value));return closestRight-value<=value-closestLeft?closestRight:closestLeft})(tickMarks,newValue,minValue,maxValue)),newValue};
//# sourceMappingURL=utils.cjs.js.map
