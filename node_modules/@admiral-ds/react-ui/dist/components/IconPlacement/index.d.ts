import * as React from 'react';
import type { ButtonHTMLAttributes } from 'react';
export type IconPlacementDimension = 'lBig' | 'lSmall' | 'mBig' | 'mSmall' | 's';
export type IconPlacementAppearance = 'primary' | 'secondary';
export interface IconPlacementProps extends ButtonHTMLAttributes<HTMLButtonElement> {
    /** Размер кнопки */
    dimension?: IconPlacementDimension;
    /** Отключение кнопки */
    disabled?: boolean;
    /** Позволяет управлять подсветкой в состоянии фокуса, по умолчанию состояние фокуса подсвечивается */
    highlightFocus?: boolean;
    /** Внешний вид кнопки */
    appearance?: IconPlacementAppearance | {
        iconColor: string;
    };
}
export declare const IconPlacement: React.ForwardRefExoticComponent<IconPlacementProps & React.RefAttributes<HTMLButtonElement>>;
export declare const CloseIconPlacementButton: React.ForwardRefExoticComponent<IconPlacementProps & React.RefAttributes<HTMLButtonElement>>;
//# sourceMappingURL=index.d.ts.map