"use strict";var jsxRuntime=require("react/jsx-runtime"),e=require("react"),styled=require("styled-components"),borderRadius=require("../themes/borderRadius.cjs.js"),CloseOutline=require("../../node_modules/@admiral-ds/icons/build/service/CloseOutline.svg.cjs.js");function _interopDefault(e){return e&&e.__esModule?e:{default:e}}function _interopNamespace(e){if(e&&e.__esModule)return e;var n=Object.create(null);return e&&Object.keys(e).forEach(function(k){if("default"!==k){var d=Object.getOwnPropertyDescriptor(e,k);Object.defineProperty(n,k,d.get?d:{enumerable:!0,get:function(){return e[k]}})}}),n.default=e,Object.freeze(n)}var e__namespace=_interopNamespace(e),styled__default=_interopDefault(styled);function getIconSize(dimension){switch(dimension){case"lSmall":case"lBig":default:return 24;case"mSmall":case"mBig":return 20;case"s":return 16}}function getHighlighterOffset(dimension){switch(dimension){case"lBig":case"mBig":default:return 6;case"lSmall":case"mSmall":case"s":return 4}}function getHighlighterSize(dimension){return getIconSize(dimension)+2*getHighlighterOffset(dimension)}const IconColor=styled.css`
  & *[fill^='#'] {
    fill: ${p=>{switch(p.$iconColor){case"primary":return`var(--admiral-color-Primary_Primary60Main, ${p.theme.color["Primary/Primary 60 Main"]})`;case"secondary":return`var(--admiral-color-Neutral_Neutral50, ${p.theme.color["Neutral/Neutral 50"]})`;default:return p.$iconColor}}};
  }
`,IconPlacementContent=styled__default.default.div`
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;

  ${IconColor}

  & > svg {
    height: ${p=>getIconSize(p.$dimension)}px;
    width: ${p=>getIconSize(p.$dimension)}px;
  }
`,ActivityHighlighter=styled__default.default.div`
  width: ${p=>getHighlighterSize(p.$dimension)}px;
  height: ${p=>getHighlighterSize(p.$dimension)}px;
  border-radius: 50%;
  background-color: transparent;
  pointer-events: none;
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
`,eventsMixin=styled.css`
  &:focus-visible {
    outline-offset: 2px;
    outline: var(--admiral-color-Primary_Primary60Main, ${p=>p.theme.color["Primary/Primary 60 Main"]}) solid 2px;
  }

  &:focus {
    > ${ActivityHighlighter} {
      background-color: ${p=>p.$highlightFocus?`var(--admiral-color-Opacity_Focus, ${p.theme.color["Opacity/Focus"]})`:"transparent"};
    }
  }
  &:hover {
    > ${ActivityHighlighter} {
      background-color: var(--admiral-color-Opacity_Hover, ${p=>p.theme.color["Opacity/Hover"]});
    }
  }
  &:active {
    > ${ActivityHighlighter} {
      background-color: var(--admiral-color-Opacity_Press, ${p=>p.theme.color["Opacity/Press"]});
    }
  }
  &:focus-visible {
    > ${ActivityHighlighter} {
      background-color: transparent;
    }
  }
`,IconPlacementButton=styled__default.default.button`
  position: relative;
  padding: 0;
  margin: ${p=>getHighlighterOffset(p.$dimension)}px;
  box-sizing: border-box;
  border: none;
  background-color: transparent;
  appearance: none;
  flex: 0 0 auto;
  height: ${p=>getIconSize(p.$dimension)}px;
  width: ${p=>getIconSize(p.$dimension)}px;
  border-radius: var(--admiral-border-radius-Small, ${p=>borderRadius.smallGroupBorderRadius(p.theme.shape)});
  overflow: visible;

  cursor: pointer;
  > * {
    pointer-events: none;
  }

  &:disabled {
    cursor: not-allowed;
    & *[fill^='#'] {
      fill: var(--admiral-color-Neutral_Neutral30, ${p=>p.theme.color["Neutral/Neutral 30"]});
    }
  }
  &:not(:disabled) {
    ${eventsMixin}
  }
`,IconPlacement=e__namespace.forwardRef(({type="button",dimension="lBig",disabled=!1,highlightFocus=!0,appearance,children,...props},ref)=>{const iconColor="object"==typeof appearance?appearance.iconColor?appearance.iconColor:"secondary":appearance;return jsxRuntime.jsxs(IconPlacementButton,{ref,type,$dimension:dimension,disabled,$highlightFocus:highlightFocus,...props,children:[jsxRuntime.jsx(ActivityHighlighter,{$dimension:dimension,"aria-hidden":!0}),jsxRuntime.jsx(IconPlacementContent,{$dimension:dimension,$iconColor:iconColor,"aria-hidden":!0,children})]})}),CloseIconPlacementButton=e__namespace.forwardRef(({className,...props},ref)=>jsxRuntime.jsx(IconPlacement,{ref,className:`close-button ${className||""}`,...props,children:jsxRuntime.jsx(CloseOutline.ReactComponent,{"aria-hidden":!0})}));exports.CloseIconPlacementButton=CloseIconPlacementButton,exports.IconPlacement=IconPlacement;
//# sourceMappingURL=index.cjs.js.map
