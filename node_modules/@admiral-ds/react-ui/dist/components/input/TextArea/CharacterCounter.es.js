import{jsxs}from"react/jsx-runtime";import{typography}from"../../Typography/typography.es.js";import"../../Typography/defaultTypographyMixin.es.js";import{useState,useEffect}from"react";import styled from"styled-components";const Container=styled.div`
  white-space: nowrap;
  ${typography["Body/Body 2 Long"]}
  color: ${p=>p.$error?`var(--admiral-color-Error_Error60Main, ${p.theme.color["Error/Error 60 Main"]})`:`var(--admiral-color-Neutral_Neutral50, ${p.theme.color["Neutral/Neutral 50"]})`};
  transition:
    all 0.5s,
    color 0.5s;
  opacity: ${p=>p.$transparent&&!p.$error?0:1};
  max-width: ${p=>p.$transparent&&!p.$error?0:"none"};
  overflow: hidden;
`,CharacterCounter=({maxLength,visibilityThreshold=.8,inputRef,...props})=>{const[currentCount,setCurrentCount]=useState(0);return useEffect(()=>{const timer=setInterval(()=>{const node=inputRef.current;node&&setCurrentCount(node.value.length)},250);return()=>clearInterval(timer)},[inputRef]),currentCount>=maxLength*visibilityThreshold?jsxs(Container,{...props,$error:currentCount>=maxLength,$transparent:currentCount<maxLength*visibilityThreshold,children:[currentCount," / ",maxLength]}):null};export{CharacterCounter};
//# sourceMappingURL=CharacterCounter.es.js.map
