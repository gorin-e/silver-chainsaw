"use strict";var jsxRuntime=require("react/jsx-runtime"),typography=require("../../Typography/typography.cjs.js");require("../../Typography/defaultTypographyMixin.cjs.js");var e=require("react");function _interopDefault(e){return e&&e.__esModule?e:{default:e}}const Container=_interopDefault(require("styled-components")).default.div`
  white-space: nowrap;
  ${typography.typography["Body/Body 2 Long"]}
  color: ${p=>p.$error?`var(--admiral-color-Error_Error60Main, ${p.theme.color["Error/Error 60 Main"]})`:`var(--admiral-color-Neutral_Neutral50, ${p.theme.color["Neutral/Neutral 50"]})`};
  transition:
    all 0.5s,
    color 0.5s;
  opacity: ${p=>p.$transparent&&!p.$error?0:1};
  max-width: ${p=>p.$transparent&&!p.$error?0:"none"};
  overflow: hidden;
`;exports.CharacterCounter=({maxLength,visibilityThreshold=.8,inputRef,...props})=>{const[currentCount,setCurrentCount]=e.useState(0);return e.useEffect(()=>{const timer=setInterval(()=>{const node=inputRef.current;node&&setCurrentCount(node.value.length)},250);return()=>clearInterval(timer)},[inputRef]),currentCount>=maxLength*visibilityThreshold?jsxRuntime.jsxs(Container,{...props,$error:currentCount>=maxLength,$transparent:currentCount<maxLength*visibilityThreshold,children:[currentCount," / ",maxLength]}):null};
//# sourceMappingURL=CharacterCounter.cjs.js.map
