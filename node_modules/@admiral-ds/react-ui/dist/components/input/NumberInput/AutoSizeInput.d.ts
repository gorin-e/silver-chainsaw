/// <reference types="react" />
import type { ComponentDimension } from '../../../components/input/types';
import type { TextInputProps } from '../../../components/input/TextInput';
export declare const BorderedDiv: import("styled-components/dist/types").IStyledComponentBase<"web", import("styled-components/dist/types").Substitute<import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLDivElement>, HTMLDivElement>, {
    $status?: TextInputProps['status'];
}>> & string;
export declare const horizontalPaddingValue: (props: {
    $dimension?: ComponentDimension;
}) => 12 | 16;
export declare const iconSizeValue: (props: {
    $dimension?: ComponentDimension;
}) => 20 | 24;
export interface InputProps extends TextInputProps {
    /** префикс (строка, которая выводится перед числовым значением) */
    prefix?: string;
    /** суффикс (строка, которая выводится после числового значения) */
    suffix?: string;
    /** Количество иконок */
    iconCount?: number;
    /** Выравнивание контента. По умолчанию выравнивание происходит по левому краю */
    align?: 'left' | 'right';
    /** Внутреннее значение инпута */
    innerValue: TextInputProps['value'];
    /** Скрыть пробел после префикса */
    hideSpaceAfterPrefix?: boolean;
    /** Скрыть пробел перед суффиксом */
    hideSpaceBeforeSuffix?: boolean;
}
export declare const AutoSizeInput: import("react").ForwardRefExoticComponent<InputProps & import("react").RefAttributes<HTMLInputElement>>;
//# sourceMappingURL=AutoSizeInput.d.ts.mapd.ts.map