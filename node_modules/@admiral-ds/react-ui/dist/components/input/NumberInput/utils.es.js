const repeatStringNumTimes=(str,n)=>{let repeatedString="";for(;n>0;)repeatedString+=str,n--;return repeatedString},clearValue=(str,precision,decimal=",",minValue)=>{let validChars=precision>0?[decimal,"-","0","1","2","3","4","5","6","7","8","9"]:["-","0","1","2","3","4","5","6","7","8","9"];"number"==typeof minValue&&minValue>=0&&(validChars=validChars.filter(char=>"-"!==char));let newStr=str.split("").filter(char=>validChars.indexOf(char)>-1).join("");if(newStr.indexOf("-")>-1&&(newStr=newStr[0]+newStr.slice(1,newStr.length).split("").filter(char=>"-"!==char).join("")),"-"===newStr[0]&&newStr[1]===decimal&&(newStr=newStr[0]+"0"+newStr.slice(1,newStr.length)),newStr.indexOf(decimal)>-1){const firstDecimalIndex=newStr.indexOf(decimal);newStr=newStr.split("").filter((char,index)=>char!==decimal||char===decimal&&index===firstDecimalIndex).join("")}return"0"===newStr[0]&&newStr[1]!==decimal&&newStr.length>=2&&(newStr=newStr.slice(1,newStr.length)),"-0"===newStr.slice(0,2)&&newStr[2]!==decimal&&newStr.length>=3&&(newStr="-"+newStr.slice(2,newStr.length)),newStr},reverseString=str=>str.split("").reverse().join(""),validateThousand=thousand=>/[^a-zA-Z]*/.test(thousand);function fitToCurrency(value,precision,decimal,thousand,fillEmptyDecimals,minValue){if(""===value)return value;let strDecimal=((str,decimal,thousand)=>{const validChars=[decimal,thousand],replaceableChars=[",","."];return str.split("").map(char=>replaceableChars.includes(char)&&!validChars.includes(char)?decimal:char).join("")})(String(value),decimal,thousand);if(strDecimal=clearValue(strDecimal,precision,decimal,minValue),""===strDecimal)return"";const decimalIndex=strDecimal.indexOf(decimal),isDecimal=decimalIndex>-1;isDecimal&&strDecimal.length-decimalIndex-1>precision&&(strDecimal=strDecimal.slice(0,decimalIndex+precision+1));const isNegative="-"===strDecimal[0],left_side=isDecimal?strDecimal.slice(0,decimalIndex):strDecimal,right_side=isDecimal?strDecimal.slice(decimalIndex,strDecimal.length):"";let newValue="";if(newValue=reverseString(isNegative?left_side.slice(1,left_side.length):left_side).match(/.{1,3}/g)?.reduceRight((previousValue,currentValue,index)=>previousValue+=0===index?reverseString(currentValue):reverseString(currentValue)+thousand,"")||"",isNegative&&(newValue="-"+newValue),right_side&&(newValue+=right_side),fillEmptyDecimals)if(isDecimal){const dot=newValue.indexOf(decimal),diff=newValue.length-dot-1;diff<precision&&(newValue+=repeatStringNumTimes("0",precision-diff)),0===dot&&(newValue="0"+newValue)}else"-"===newValue&&(newValue+="0"),precision>0&&(newValue+=decimal+repeatStringNumTimes("0",precision));return newValue}const getDecimalSeparator=locale=>{const testText=1.9.toLocaleString(locale),one=1..toLocaleString(locale),nine=9..toLocaleString(locale),result=new RegExp(`${one}(.+)${nine}`).exec(testText);return result&&result[1]||","},getThousandSeparator=locale=>{const testText=1900..toLocaleString(locale),one=1..toLocaleString(locale),nine=900..toLocaleString(locale),result=new RegExp(`${one}(.+)${nine}`).exec(testText);return result&&result[1]||" "};export{clearValue,fitToCurrency,getDecimalSeparator,getThousandSeparator,repeatStringNumTimes,validateThousand};
//# sourceMappingURL=utils.es.js.map
