"use strict";var jsxRuntime=require("react/jsx-runtime"),e=require("react"),styled=require("./styled.cjs.js"),index=require("../TextInput/index.cjs.js"),InputIconButton=require("../../InputIconButton.cjs.js"),CloseOutline=require("../../../node_modules/@admiral-ds/icons/build/service/CloseOutline.svg.cjs.js"),refSetter=require("../../common/utils/refSetter.cjs.js");const nothing=()=>{},preventDefault=e=>e.preventDefault();function pressDeleteButtonOnLastChip(input,optionsWrapper,lastChipCloseButtonSelector){if(input&&optionsWrapper&&0===input.selectionStart&&0===input.selectionEnd){const closeButton=optionsWrapper.querySelector(lastChipCloseButtonSelector);closeButton?.dispatchEvent(new MouseEvent("mousedown",{bubbles:!0}))}}const MultiInput=e.forwardRef(({style,status,children,className,skeleton=!1,displayClearIcon,containerRef,disableCopying,dimension="m",createActivateButtonList=["Enter"],onInputComplete,containerPropsConfig=nothing,clearButtonPropsConfig=nothing,onClearOptions,iconsBefore,iconsAfter,lastChipCloseButtonSelector=".wrapper-options > :has(.close-button):last-of-type .close-button",onBackspaceKeyDown:onLastChipDelete=pressDeleteButtonOnLastChip,...props},ref)=>{const inputRef=e.useRef(null),[refWrapperOptions,setRefWrapperOptions]=e.useState(null),iconAfterArray=e.Children.toArray(iconsAfter),iconBeforeArray=e.Children.toArray(iconsBefore);if(displayClearIcon&&!props.readOnly&&!disableCopying){const clearButtonProps={icon:CloseOutline.ReactComponent,id:"searchSelectClearIcon",onClick:onClearOptions,"aria-hidden":!0,key:"close"};iconAfterArray.unshift(jsxRuntime.jsx(InputIconButton.InputIconButton,{...clearButtonProps,...clearButtonPropsConfig(clearButtonProps)}))}const containerProps={ref:containerRef,className,style,$skeleton:skeleton,$status:status,disabled:props.disabled,readOnly:props.readOnly,$dimension:dimension,tabIndex:-1,"data-disabled":!!props.disabled||void 0,"data-read-only":!!props.readOnly||void 0,"data-status":status,"data-disable-copying":!!disableCopying||void 0,onMouseDown:disableCopying?preventDefault:void 0,onFocus:e=>{"input"!==e.target.tagName.toLowerCase()&&inputRef.current&&inputRef.current.focus()}};e.useLayoutEffect(()=>{function handleKeyDown(e){createActivateButtonList.includes(e.code)&&onInputComplete&&onInputComplete(),"Backspace"===e.code&&onLastChipDelete(this,refWrapperOptions,lastChipCloseButtonSelector)}if(!props.disabled&&!props.readOnly&&!disableCopying){const inputElem=inputRef.current;if(inputElem)return inputElem.addEventListener("keydown",handleKeyDown),()=>{inputElem.removeEventListener("keydown",handleKeyDown)}}},[props.disabled,props.readOnly,disableCopying,refWrapperOptions,onInputComplete,inputRef]);const iconsBeforeCount=iconBeforeArray.length,iconsAfterCount=iconAfterArray.length;return jsxRuntime.jsxs(styled.Container,{...containerProps,...containerPropsConfig(containerProps),children:[iconsBeforeCount>0&&jsxRuntime.jsx(styled.IconPanelBefore,{"data-role":"icon-pane-before",$dimension:dimension,children:iconBeforeArray}),jsxRuntime.jsxs(styled.WrapperOptions,{className:"wrapper-options",ref:elem=>setRefWrapperOptions(elem),children:[children," ",jsxRuntime.jsx(styled.Input,{$dimension:dimension,...props,ref:refSetter.refSetter(ref,inputRef)})]}),jsxRuntime.jsx(index.InputBorderedDiv,{$status:status,disabled:props.disabled||props.readOnly}),iconsAfterCount>0&&jsxRuntime.jsx(styled.IconPanelAfter,{"data-role":"icon-pane-after",$dimension:dimension,children:iconAfterArray})]})});MultiInput.displayName="MultiInput",exports.MultiInput=MultiInput;
//# sourceMappingURL=index.cjs.js.map
