import{jsx,jsxs,Fragment}from"react/jsx-runtime";import{forwardRef,useState,useRef}from"react";import{refSetter}from"../../common/utils/refSetter.es.js";import{changeInputData}from"../../common/dom/changeInputData.es.js";import{ConfirmIcon,CancelIcon,Wrapper,EditArea,EditButton,Text,EditIcon}from"../EditMode/style.es.js";const stopEvent=e=>e.preventDefault(),nothing=()=>{},EditModeArea=forwardRef(({dimension="m",bold=!1,containerCssMixin,disabled=!1,onEdit,onConfirm,onCancel,value,rows=1,autoHeight=!0,confirmButtonPropsConfig=nothing,cancelButtonPropsConfig=nothing,...props},ref)=>{const[edit,setEdit]=useState(!1),[valueBeforeEdit,setValueBeforeEdit]=useState(value),iconSize="s"===dimension?20:24,inputRef=useRef(null),wrapperRef=useRef(null),enableEdit=()=>{setEdit(!0),setValueBeforeEdit(value),onEdit?.(value)},editDimension="xxl"===dimension?"xl":dimension,confirmButtonProps={appearance:"secondary",dimension:editDimension,displayAsSquare:!0,disabled:"error"===props.status,onClick:()=>{if(setEdit(!1),inputRef.current){const inputValue=inputRef.current.value;onConfirm?.(inputValue)}},iconStart:jsx(ConfirmIcon,{height:iconSize,width:iconSize}),$multiline:!0},cancelButtonProps={appearance:"secondary",dimension:editDimension,displayAsSquare:!0,disabled:"error"===props.status,onClick:()=>{setEdit(!1),inputRef.current&&(changeInputData(inputRef.current,{value:valueBeforeEdit.toString()}),onCancel?.(valueBeforeEdit))},iconStart:jsx(CancelIcon,{height:iconSize,width:iconSize}),$multiline:!0};return jsx(Wrapper,{"data-dimension":`${dimension}${bold&&"xl"!==editDimension?"-bold":""}`,"data-disabled":disabled,$cssMixin:containerCssMixin,ref:wrapperRef,"data-disable-copying":!!props.disableCopying||void 0,...props.disableCopying&&{onMouseDown:stopEvent},children:edit?!disabled&&!props.readOnly&&jsxs(Fragment,{children:[jsx(EditArea,{ref:refSetter(ref,inputRef),autoFocus:!0,disabled,dimension:editDimension,value,containerRef:wrapperRef,rows,autoHeight,...props}),jsx(EditButton,{...confirmButtonProps,...confirmButtonPropsConfig(confirmButtonProps)}),jsx(EditButton,{...cancelButtonProps,...cancelButtonPropsConfig(cancelButtonProps)})]}):jsxs(Fragment,{children:[jsx(Text,{$multiline:!0,onClick:props.readOnly?void 0:enableEdit,children:value}),!props.readOnly&&jsx(EditIcon,{$multiline:!0,height:iconSize,width:iconSize,onClick:enableEdit})]})})});EditModeArea.displayName="EditMode";export{EditModeArea};
//# sourceMappingURL=index.es.js.map
