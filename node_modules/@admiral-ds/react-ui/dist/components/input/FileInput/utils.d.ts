/// <reference types="react" />
export declare const formatBytes: (bytes: number, decimals?: number) => number;
export declare const formatFileSize: (bytes: number) => string;
/**
 * https://github.com/react-dropzone/attr-accept/blob/master/src/index.js
 *
 * Check if the provided file type should be accepted by the input with accept attribute.
 * https://developer.mozilla.org/en-US/docs/Web/HTML/Element/Input#attr-accept
 *
 * Inspired by https://github.com/enyo/dropzone
 *
 * @param file {File} https://developer.mozilla.org/en-US/docs/Web/API/File
 * @param acceptedFiles {string}
 * @returns {boolean}
 */
export declare function acceptFile(file: File, acceptedFiles?: string): boolean;
/**
 * https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types#important_mime_types_for_web_developers
 * https://www.iana.org/assignments/media-types/media-types.xhtml
 * @param type {string}
 */
export declare const formatFileType: (type: string) => "JPEG" | "PNG" | "TIFF" | "PDF" | "PPT" | "XLS" | "Word" | "Docs" | "SVG" | "GIF" | "WEBP" | "ZIP" | "CSV";
/**
 * https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types#important_mime_types_for_web_developers
 * https://www.iana.org/assignments/media-types/media-types.xhtml
 * @param type {string}
 */
export declare const getFileTypeIcon: (type: string) => import("react").FunctionComponent<import("react").SVGProps<SVGSVGElement>>;
//# sourceMappingURL=utils.d.ts.map