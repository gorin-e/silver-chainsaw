import{jsxs,jsx,Fragment}from"react/jsx-runtime";import{forwardRef,useRef,useEffect,useState}from"react";import styled from"styled-components";import{ReactComponent as SvgAttachFileOutline}from"../../../node_modules/@admiral-ds/icons/build/system/AttachFileOutline.svg.es.js";import{mediumGroupBorderRadius}from"../../themes/borderRadius.es.js";import{typography}from"../../Typography/typography.es.js";import"../../Typography/defaultTypographyMixin.es.js";import{refSetter}from"../../common/utils/refSetter.es.js";import{FILE_INPUT_ICON_SIZE_XL,FILE_INPUT_ICON_SIZE_M,FILE_INPUT_ICON_MARGIN,titleXL,disabledStyles,hoverStyles,dimensionMStyles,dimensionXLStyles,FILE_INPUT_MIN_WIDTH_M,FILE_INPUT_MIN_WIDTH_XL}from"./style.es.js";export{fullWidthPositionMixin,halfWidthPositionMixin}from"./style.es.js";import{ExtraTextContainer}from"../../Field/index.es.js";import{Label}from"../../Label/index.es.js";import{acceptFile}from"./utils.es.js";const ExtraText=styled(ExtraTextContainer)`
  padding-top: 20px;
`,Icon=styled(SvgAttachFileOutline)`
  height: ${p=>"xl"===p.$dimension?FILE_INPUT_ICON_SIZE_XL:FILE_INPUT_ICON_SIZE_M};
  width: ${p=>"xl"===p.$dimension?FILE_INPUT_ICON_SIZE_XL:FILE_INPUT_ICON_SIZE_M};
  margin-right: ${p=>"m"===p.$dimension?FILE_INPUT_ICON_MARGIN:""};
  margin-bottom: ${p=>"xl"===p.$dimension?FILE_INPUT_ICON_MARGIN:""};
  flex-shrink: 0;

  > * {
    fill: var(--admiral-color-Primary_Primary60Main, ${p=>p.theme.color["Primary/Primary 60 Main"]});
  }
`,LabelM=styled(Label)`
  display: flex;
`,Description=styled.div`
  color: ${p=>p.disabled?`var(--admiral-color-Neutral_Neutral30, ${p.theme.color["Neutral/Neutral 30"]})`:`var(--admiral-color-Neutral_Neutral90, ${p.theme.color["Neutral/Neutral 90"]})`};
  ${typography["Body/Body 1 Long"]};
`,TitleText=styled.div`
  color: ${p=>p.disabled?`var(--admiral-color-Neutral_Neutral30, ${p.theme.color["Neutral/Neutral 30"]})`:`var(--admiral-color-Neutral_Neutral90, ${p.theme.color["Neutral/Neutral 90"]})`};
  ${p=>"xl"===p.$dimension?typography["Body/Body 2 Long"]:typography["Body/Body 1 Long"]}
  ${p=>"xl"===p.$dimension&&titleXL}
`,FocusBorder=styled.div`
  position: absolute;
  top: -3px;
  bottom: -3px;
  left: -3px;
  right: -3px;
  pointer-events: none;
  overflow: visible;
  border-radius: var(--admiral-border-radius-Medium, ${p=>mediumGroupBorderRadius(p.theme.shape)});
`,StyledInput=styled.input`
  display: block;
  width: 100%;
  height: 100%;
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  opacity: 0;
  cursor: pointer;
  &:disabled {
    cursor: not-allowed;
  }
  &:focus:focus-visible ~ ${FocusBorder} {
    outline: 2px solid var(--admiral-color-Primary_Primary60Main, ${p=>p.theme.color["Primary/Primary 60 Main"]});
  }
`,CustomInput=styled.input`
  display: block;
  width: 0;
  height: 0;
  opacity: 0;
`,InputWrapper=styled.div`
  position: relative;
  display: flex;
  align-items: center;
  border: 1px dashed var(--admiral-color-Neutral_Neutral40, ${p=>p.theme.color["Neutral/Neutral 40"]});
  border-radius: var(--admiral-border-radius-Medium, ${p=>mediumGroupBorderRadius(p.theme.shape)});
  pointer-events: all;
  ${p=>p.disabled?disabledStyles:hoverStyles};
  ${p=>"m"===p.$dimension?dimensionMStyles:dimensionXLStyles};
  box-sizing: border-box;
  overflow: visible;
`,Wrapper=styled.div`
  min-width: ${p=>"m"===p.$dimension?FILE_INPUT_MIN_WIDTH_M:FILE_INPUT_MIN_WIDTH_XL};
  ${p=>p.$width?`width: ${"number"==typeof p.$width?p.$width+"px":p.$width};`:""}
  box-sizing: border-box;
  ${typography["Body/Body 2 Long"]};
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  gap: 16px;
`,FileInputWrapper=styled.div`
  position: relative;
  width: 100%;
  overflow: visible;
`,FileInput=forwardRef(({dimension="xl",width,title,description,renderCustomFileInput,disabled,multiple=!0,children,files,extraText,status,...props},ref)=>{const inputRef=useRef(null),titleWithDescription="m"===dimension&&title&&description,titleWithoutDescription=title&&!description||title&&description&&"xl"===dimension;useEffect(()=>{const inputNode=inputRef.current;if(inputNode&&files){const dt=new DataTransfer;files.forEach(file=>dt.items.add(file)),inputNode.files=dt.files}},[files]);const[isDragOver,setDragOver]=useState(!1),handleDragLeave=()=>{setDragOver(!1)};return useEffect(()=>{const inputNode=inputRef.current;inputNode&&inputNode.addEventListener("drop",function(e){const files=Array.from(e.dataTransfer?.files||[]);if(files.length>0){e.preventDefault();const filteredFiles=files.filter(file=>acceptFile(file,props.accept)),dt=new DataTransfer;let event;filteredFiles.forEach(file=>dt.items.add(file)),this.files=dt.files,"function"==typeof Event?event=new Event("input",{bubbles:!0}):(event=document.createEvent("Event"),event.initEvent("input",!0,!0)),this.dispatchEvent(event)}})},[props.accept]),jsxs(Wrapper,{$dimension:dimension,$width:width,"data-status":status,children:[jsx(FileInputWrapper,{children:jsxs(Fragment,renderCustomFileInput?{children:[renderCustomFileInput({onQueryUpload:()=>{inputRef.current?.click()}}),jsx(CustomInput,{...props,ref:refSetter(ref,inputRef),type:"file",multiple,disabled,tabIndex:-1}),jsx(FocusBorder,{className:"focus-block"})]}:{children:[titleWithDescription&&jsx(LabelM,{disabled,children:title}),jsxs(InputWrapper,{$dimension:dimension,disabled,"data-isdragover":isDragOver,onDragEnter:disabled?void 0:()=>{setDragOver(!0)},onDragLeave:disabled?void 0:handleDragLeave,onDrop:disabled?void 0:handleDragLeave,children:[jsx(Icon,{$dimension:dimension}),titleWithoutDescription&&jsx(TitleText,{$dimension:dimension,disabled,children:title}),"m"===dimension&&description&&jsx(Description,{disabled,children:description}),jsx(StyledInput,{...props,ref:refSetter(ref,inputRef),type:"file",disabled,multiple}),jsx(FocusBorder,{className:"focus-block"})]})]})}),children,extraText&&"error"===status&&jsx(ExtraText,{children:extraText})]})});FileInput.displayName="FileInput";export{FileInput};
//# sourceMappingURL=index.es.js.map
