"use strict";var jsxRuntime=require("react/jsx-runtime"),e=require("react"),styled$1=require("styled-components"),index$1=require("../../themes/light/index.cjs.js");require("../../themes/common/locales.cjs.js"),require("../../Typography/typography.cjs.js"),require("../../Typography/defaultTypographyMixin.cjs.js");var OpenStatusButton=require("../../OpenStatusButton.cjs.js"),keyboardKey=require("../../common/keyboardKey.cjs.js"),refSetter=require("../../common/utils/refSetter.cjs.js"),InputIconButton=require("../../InputIconButton.cjs.js"),CloseOutline=require("../../../node_modules/@admiral-ds/icons/build/service/CloseOutline.svg.cjs.js"),useSelectContext=require("./useSelectContext.cjs.js"),index$2=require("./MultipleSelectChips/index.cjs.js"),styled=require("./styled.cjs.js"),changeInputData=require("../../common/dom/changeInputData.cjs.js"),useClickOutside=require("../../common/hooks/useClickOutside.cjs.js"),index$4=require("../../Spinner/index.cjs.js"),DisplayValue=require("./DisplayValue.cjs.js"),index$3=require("../../DropdownContainer/index.cjs.js"),NativeControl=require("./NativeControl.cjs.js"),DropDownContext=require("./DropDownContext.cjs.js"),utils=require("./utils.cjs.js"),splitDataAttributes=require("../../common/utils/splitDataAttributes.cjs.js"),uid=require("../../common/uid.cjs.js"),usePrevious=require("../../common/hooks/usePrevious.cjs.js");require("./Option/styled.cjs.js");var OptionGroup=require("./OptionGroup.cjs.js");function _interopDefault(e){return e&&e.__esModule?e:{default:e}}const DropDownText=_interopDefault(styled$1).default(styled.OptionWrapper)`
  color: var(--admiral-color-Neutral_Neutral50, ${p=>p.theme.color["Neutral/Neutral 50"]});
`,stopPropagation=evt=>evt.stopPropagation(),nothing=()=>{},Select=e.forwardRef(({value,isLoading,className,style,status,icons,portalTargetRef,targetElement,inputTargetRef,disabled,readOnly,placeholder,defaultValue,dimension="m",idleHeight="fixed",minRowCount="none",maxRowCount="none",mode="select",multiple=!1,showCheckbox=!0,displayClearIcon=!1,onClearIconClick,onInputChange,inputValue,defaultInputValue,renderSelectValue,onFocus:onFocusFromProps,onBlur:onBlurFromProps,children,alignDropdown="stretch",alignSelf="stretch",skeleton=!1,locale,dropContainerCssMixin,dropContainerClassName,dropContainerStyle,renderDropDownTopPanel,renderDropDownBottomPanel,renderTopPanel,renderBottomPanel,forcedOpen=!1,onChangeDropDownState,onInputKeyDown,onInputKeyUp,onInputKeyUpCapture,onInputKeyDownCapture,searchFormat="wholly",onFilterItem=utils.defaultFilterItem,virtualScroll,title,forceHideOverflowTooltip=!1,onSelectedChange,moveSelectedOnTop,clearInputValueAfterSelect=!0,openButtonPropsConfig=nothing,clearButtonPropsConfig=nothing,...props},ref)=>{const theme=styled$1.useTheme()||index$1.LIGHT_THEME,emptyMessage=locale?.emptyMessage||jsxRuntime.jsx(DropDownText,{$dimension:dimension,children:theme.locales[theme.currentLocale].select.emptyMessage}),[selectedValue,setSelectedValue]=e.useState(value??defaultValue),[internalSearchValue,setSearchValue]=e.useState(""),searchValue=void 0===inputValue?internalSearchValue:inputValue,[shouldRenderSelectValue,setShouldRenderSelectValue]=e.useState(!1),[activeItem,setActiveItem]=e.useState(),[constantOptions,setConstantOptions]=e.useState([]),[dropDownItems,setDropItems]=e.useState([]),[isSearchPanelOpen,setIsSearchPanelOpen]=e.useState(forcedOpen),[isFocused,setIsFocused]=e.useState(!1),[preselected,setPreseleceted]=e.useState(void 0),selectIsUncontrolled=void 0===value,modeIsSelect="select"===mode,fixedHeight="none"!==e.useMemo(()=>"none"!==maxRowCount&&maxRowCount>0?maxRowCount:"fixed"===idleHeight?1:"none",[maxRowCount,idleHeight]),externalValue=value??defaultValue,selectedArray=e.useRef(Array.isArray(externalValue)?externalValue:[]),isKeyboardEvent=e.useRef(!1),unmountedSelectedOptions=e.useRef([]);e.useEffect(()=>{Array.isArray(value)&&(selectedArray.current=value)},[value]);const selectedOption=e.useMemo(()=>multiple?null:constantOptions.find(option=>option.value===selectedValue),[multiple,constantOptions,selectedValue]),selectedOptions=e.useMemo(()=>multiple&&Array.isArray(selectedValue)?selectedValue.reduce((acc,item)=>{const option=constantOptions.find(option=>option.value===item);return option&&acc.push(option),acc},[]):[],[constantOptions,selectedValue,multiple]),prevIsSearchPanelOpen=usePrevious.usePrevious(isSearchPanelOpen),[itemsOnTop,setItemsOnTop]=e.useState([]);e.useEffect(()=>{if(multiple&&moveSelectedOnTop||!(itemsOnTop.length>0)||setItemsOnTop([]),multiple&&moveSelectedOnTop&&prevIsSearchPanelOpen!==isSearchPanelOpen&&isSearchPanelOpen){const selected=selectedOptions.map(item=>item.value),items=selected.length>0?selected.reduce((acc,value)=>{const modelItem=dropDownItems.find(item=>item.value===value);return modelItem&&acc.push(modelItem),acc},[]):[];setItemsOnTop(items)}},[dropDownItems,isSearchPanelOpen,selectedOptions,multiple,moveSelectedOnTop]);const dropDownModel=e.useMemo(()=>{const selected=itemsOnTop.map(item=>item.value),resultItems=dropDownItems.filter(item=>onFilterItem(item.value,searchValue,searchFormat)).reduce((acc,item)=>(selected.includes(item.value)||acc.push(item),acc),[...itemsOnTop]);return resultItems.length?resultItems:[{id:"emptyMessage",render:()=>jsxRuntime.jsx(styled.EmptyMessageWrapper,{children:emptyMessage},"empty"),disabled:!0}]},[isLoading,dropDownItems,dimension,searchValue,itemsOnTop]);e.useEffect(()=>{if(activeItem){dropDownModel.find(item=>item.id===activeItem)||setActiveItem(void 0)}},[dropDownModel,activeItem]);const inputRef=inputTargetRef??e.useRef(null),selectRef=e.useRef(null),containerRef=e.useRef(null),targetNode=targetElement||portalTargetRef?.current||containerRef.current,valueWrapperRef=e.useRef(null),dropDownRef=e.useRef(null),mutableState=e.useRef({shouldExtendInputValue:!1}),onConstantOptionMount=option=>{setConstantOptions(prev=>[...prev,option]),unmountedSelectedOptions.current.includes(option.value)&&(unmountedSelectedOptions.current=unmountedSelectedOptions.current.filter(unmountedOption=>unmountedOption!==option.value))},onConstantOptionUnMount=option=>{selectedArray.current.includes(option.value)&&(unmountedSelectedOptions.current=[...unmountedSelectedOptions.current,option.value]),setConstantOptions(prev=>prev.filter(prevOption=>prevOption.value!==option.value))},handleDropDownOptionMount=e.useCallback(option=>{setDropItems(prev=>[...prev,option])},[]),handleDropDownOptionUnMount=e.useCallback(option=>{setDropItems(prev=>prev.filter(prevOption=>prevOption.id!==option.id))},[]),onCloseSelect=e.useCallback(()=>{setIsSearchPanelOpen(!1),inputRef.current&&changeInputData.changeInputData(inputRef.current,{value:""}),setShouldRenderSelectValue(!0)},[selectedValue]),handleOptionSelect=e.useCallback(optionValue=>{const selectElem=selectRef.current;if(!selectElem)return;const optionElems=Array.from(selectElem.options),targetOptionElem=optionElems.find(option=>option.value===optionValue);if(targetOptionElem&&(multiple||optionElems.forEach(option=>option.selected=!1),targetOptionElem.selected=!multiple||!targetOptionElem.selected,selectElem.dispatchEvent(new Event("change",{bubbles:!0})),multiple||onCloseSelect(),searchValue&&inputRef.current&&clearInputValueAfterSelect)){changeInputData.changeInputData(inputRef.current,{value:"",selectionEnd:0,selectionStart:0});const currentActiveItem=activeItem;setActiveItem(""),setTimeout(()=>setActiveItem(currentActiveItem))}},[onCloseSelect,multiple,searchValue,activeItem]),resetOptions=e.useCallback(()=>{const selectElem=selectRef.current;selectElem&&(selectElem.selectedIndex=-1,selectElem.dispatchEvent(new Event("change",{bubbles:!0})))},[]);e.useEffect(()=>{forcedOpen!==isSearchPanelOpen&&setIsSearchPanelOpen(forcedOpen)},[forcedOpen]),e.useEffect(()=>{onChangeDropDownState?.(isSearchPanelOpen),!isSearchPanelOpen&&isFocused&&document.activeElement!==containerRef.current&&selectRef.current?.focus()},[isSearchPanelOpen,isFocused]);const handleOnClear=onClearIconClick||resetOptions,shouldFixMultiSelectHeight=fixedHeight&&!isSearchPanelOpen,renderMultipleSelectValue=e.useCallback(()=>jsxRuntime.jsx(index$2.MultipleSelectChips,{containerRef:valueWrapperRef,options:selectedOptions,shouldShowCount:shouldFixMultiSelectHeight,disabled,readOnly,onChipRemove:handleOptionSelect,onChipClick:stopPropagation,isOptionsListOpen:isSearchPanelOpen,hasMaxHeight:!!maxRowCount&&"none"!==maxRowCount}),[selectedOptions,shouldFixMultiSelectHeight,disabled,readOnly,handleOptionSelect,isSearchPanelOpen,maxRowCount]),isEmpty=(multiple?!selectedValue?.length:!selectedValue)&&!!placeholder&&!searchValue,renderedSelectValue=renderSelectValue?.(selectedValue,searchValue),renderedSelectedOption=selectedOption?.children,renderedDefaultSelectValue=multiple?renderMultipleSelectValue():renderedSelectedOption,visibleValue=renderedSelectValue||renderedDefaultSelectValue||selectedValue||null,visibleValueIsString="string"==typeof visibleValue,wrappedVisibleValue=visibleValueIsString?jsxRuntime.jsx(DisplayValue.DisplayValue,{visibleValue,isSearchPanelOpen,targetRef:containerRef,forceHideOverflowTooltip}):visibleValue,handleSearchPanelToggle=()=>{setIsSearchPanelOpen(prev=>!prev)},deleteOrHideSelectValueOnBackspace=()=>{if(!searchValue&&selectedValue)return multiple?void(()=>{const lastAbledSelectedOptionValue=(options=[...selectedOptions].reverse(),options.find(({disabled})=>!disabled)?.value);var options;lastAbledSelectedOptionValue&&handleOptionSelect(lastAbledSelectedOptionValue)})():setShouldRenderSelectValue(!1)};e.useEffect(()=>{if(!readOnly&&!disabled)return containerRef.current?.addEventListener("keydown",handleKeyDown),()=>{containerRef.current?.removeEventListener("keydown",handleKeyDown)};function handleKeyDown(evt){const code=keyboardKey.keyboardKey.getCode(evt);code===keyboardKey.keyboardKey[" "]&&(!modeIsSelect&&searchValue?evt.stopPropagation():isSearchPanelOpen||(evt.preventDefault(),setIsSearchPanelOpen(!0),evt.stopPropagation())),code!==keyboardKey.keyboardKey.Enter||isSearchPanelOpen||(evt.preventDefault(),setIsSearchPanelOpen(!0),evt.stopPropagation()),code!==keyboardKey.keyboardKey.ArrowDown&&code!==keyboardKey.keyboardKey.ArrowUp||isSearchPanelOpen||(setIsSearchPanelOpen(!0),evt.stopPropagation());const modifyKeyPressed=evt.ctrlKey||evt.metaKey||evt.altKey;1!==evt.key.length||modifyKeyPressed||visibleValueIsString&&!searchValue&&shouldRenderSelectValue&&(mutableState.current.shouldExtendInputValue=!0),code!==keyboardKey.keyboardKey.Backspace||evt.repeat||deleteOrHideSelectValueOnBackspace(),code===keyboardKey.keyboardKey.Backspace&&((evt=>{if(!visibleValueIsString||!inputRef.current||searchValue||!shouldRenderSelectValue||!selectedValue)return;evt.preventDefault();const newInputValue=visibleValue.slice(0,-1);changeInputData.changeInputData(inputRef.current,{value:newInputValue,selectionEnd:newInputValue.length,selectionStart:newInputValue.length})})(evt),setIsSearchPanelOpen(!0)),code===keyboardKey.keyboardKey.Escape&&isSearchPanelOpen&&(setIsSearchPanelOpen(!1),evt.preventDefault(),evt.stopPropagation())}},[readOnly,disabled,modeIsSelect,searchValue,isSearchPanelOpen,selectedOptions]),e.useEffect(()=>{function handleKeyUp(){isKeyboardEvent.current=!1}return containerRef.current?.addEventListener("keyup",handleKeyUp),()=>{containerRef.current?.removeEventListener("keyup",handleKeyUp)}},[]);e.useEffect(()=>{(!isFocused&&!multiple||multiple)&&(inputRef.current&&changeInputData.changeInputData(inputRef.current,{value:""}),setShouldRenderSelectValue(!0))},[multiple,isFocused]),e.useEffect(()=>{isSearchPanelOpen&&(modeIsSelect?selectRef.current?.focus():inputRef.current?.focus(),setPreseleceted(""))},[isSearchPanelOpen,modeIsSelect]),e.useEffect(()=>{preselected&&setActiveItem("")},[preselected]),e.useEffect(()=>{activeItem&&setPreseleceted("")},[activeItem]),e.useEffect(()=>{if(isSearchPanelOpen){const activeValue=selectedValue&&!Array.isArray(selectedValue)?selectedValue:void 0;setActiveItem(activeValue)}},[isSearchPanelOpen]),e.useEffect(()=>{selectIsUncontrolled||setSelectedValue(value)},[value,selectIsUncontrolled]);useClickOutside.useClickOutside([containerRef,dropDownRef],e=>{e.target&&containerRef.current?.contains(e.target)||(setIsFocused(!1),onCloseSelect())});const needShowClearIcon=shouldRenderSelectValue&&(multiple?!!selectedValue?.length:!!selectedValue),memorisedChildren=e.useMemo(()=>e.Children.map(children,child=>e.isValidElement(child)?e.cloneElement(child,{key:uid.uid(),...child.props}):null),[children]),memorisedDropDownOptions=e.useMemo(()=>jsxRuntime.jsx(DropDownContext.DropDownProvider,{onDropDownOptionMount:handleDropDownOptionMount,onDropDownOptionUnMount:handleDropDownOptionUnMount,dimension,multiple,showCheckbox,children:memorisedChildren}),[memorisedChildren,dimension,showCheckbox,multiple]),memorisedConstantOptions=e.useMemo(()=>jsxRuntime.jsx(useSelectContext.ConstantSelectProvider,{onConstantOptionMount,onConstantOptionUnMount,children:memorisedChildren}),[memorisedChildren]),dropContainerProps=splitDataAttributes.passDropdownDataAttributes(props),menuProps=splitDataAttributes.passMenuDataAttributes(props),clearButtonProps={icon:CloseOutline.ReactComponent,id:"searchSelectClearIcon",onClick:handleOnClear,"aria-hidden":!0},openButtonProps={$isOpen:isSearchPanelOpen,onClick:handleSearchPanelToggle,"aria-hidden":!0};return jsxRuntime.jsxs(styled.SelectWrapper,{className,style,$focused:isFocused,$multiple:multiple,disabled,"data-disabled":disabled,$readonly:readOnly,$isLoading:isLoading,$dimension:dimension,ref:containerRef,"data-status":status,onClick:disabled||readOnly||isLoading?void 0:e=>{if(e.target&&dropDownRef.current?.contains(e.target))return;!modeIsSelect&&isSearchPanelOpen||handleSearchPanelToggle()},onFocus:evt=>{isFocused||(setIsFocused(!0),onFocusFromProps?.(evt))},onMouseDown:e=>{isFocused&&e.preventDefault()},$skeleton:skeleton,onBlur:evt=>{evt.currentTarget.contains(evt.relatedTarget)||dropDownRef.current?.contains(evt.relatedTarget)||(setIsFocused(!1),setIsSearchPanelOpen(!1),selectRef.current?.blur(),onBlurFromProps?.(evt),isKeyboardEvent.current=!1)},title,children:[memorisedConstantOptions,memorisedDropDownOptions,jsxRuntime.jsx(NativeControl.NativeControl,{ref:refSetter.refSetter(ref,selectRef),value:selectedValue,multiple,disabled,options:constantOptions,...props,onChange:evt=>{if(isKeyboardEvent.current&&modeIsSelect)return void setPreseleceted(evt.target.value);const value=multiple?Array.from(evt.target.selectedOptions).map(option=>option.value):evt.target.value;let newSelectedArray=[];if(multiple&&Array.isArray(value)){const addedValues=value.filter(item=>!selectedArray.current.includes(item)&&!unmountedSelectedOptions.current.includes(item)),deletedVales=selectedArray.current.filter(item=>!value.includes(item)&&!unmountedSelectedOptions.current.includes(item));newSelectedArray=[...selectedArray.current,...addedValues];const newUnmounted=[...unmountedSelectedOptions.current];deletedVales.forEach(deletedItem=>{const selectedIndex=newSelectedArray.findIndex(item=>deletedItem===item);selectedIndex>-1&&newSelectedArray.splice(selectedIndex,1);const unmountedIndex=newUnmounted.findIndex(item=>deletedItem===item);unmountedIndex>-1&&newUnmounted.splice(unmountedIndex,1)}),selectedArray.current=newSelectedArray,unmountedSelectedOptions.current=newUnmounted}selectIsUncontrolled&&setSelectedValue(multiple?newSelectedArray:value),props.onChange?.(evt),onSelectedChange?.(multiple?newSelectedArray:value)}}),jsxRuntime.jsx(styled.BorderedDiv,{}),jsxRuntime.jsxs(styled.ValueWrapper,{tabIndex:-1,ref:valueWrapperRef,className:"selectValueWrapper",$dimension:dimension,$multiple:multiple,$minRowCount:"none"!==minRowCount?minRowCount:void 0,$maxRowCount:"none"!==maxRowCount?maxRowCount:void 0,$idleHeight:idleHeight,$opened:isSearchPanelOpen,$isEmpty:isEmpty,children:[shouldRenderSelectValue&&wrappedVisibleValue,(placeholder&&isEmpty||!modeIsSelect)&&jsxRuntime.jsx(styled.Input,{"data-id":props.id,placeholder:isEmpty?placeholder:"",tabIndex:-1,ref:inputRef,disabled,readOnly:readOnly||modeIsSelect,value:searchValue,defaultValue:defaultInputValue,$isMultiple:multiple,$dimension:dimension,onChange:evt=>{multiple||setShouldRenderSelectValue(!1),(evt=>{mutableState.current.shouldExtendInputValue&&visibleValueIsString&&(evt.target.value=`${visibleValue}${evt.target.value}`,mutableState.current.shouldExtendInputValue=!1)})(evt),void 0===inputValue&&setSearchValue(evt.target.value),onInputChange?.(evt)},onKeyDown:onInputKeyDown,onKeyUp:onInputKeyUp,onKeyUpCapture:onInputKeyUpCapture,onKeyDownCapture:onInputKeyDownCapture})]}),isSearchPanelOpen&&!skeleton&&jsxRuntime.jsx(index$3.DropdownContainer,{ref:dropDownRef,tabIndex:-1,targetElement:targetNode,"data-dimension":dimension,alignSelf:alignDropdown||alignSelf,dropContainerCssMixin,className:dropContainerClassName,style:dropContainerStyle,...dropContainerProps,children:jsxRuntime.jsx(styled.StyledMenu,{dimension:"xl"===dimension?"l":dimension,active:activeItem,selected:selectedValue,onActivateItem:id=>setActiveItem(id),onSelectItem:handleOptionSelect,onDeselectItem:handleOptionSelect,multiSelection:multiple,model:dropDownModel,renderTopPanel:renderDropDownTopPanel||renderTopPanel,renderBottomPanel:renderDropDownBottomPanel||renderBottomPanel,containerRef:dropDownRef,virtualScroll,preventFocusSteal:!0,preselectedModeActive:modeIsSelect,preselected,onPreselectItem:setPreseleceted,onMenuKeyDown:()=>{isKeyboardEvent.current=!0},...menuProps})}),jsxRuntime.jsxs(styled.IconPanel,{$multiple:multiple,$dimension:dimension,onClick:stopPropagation,onMouseDown:e=>e.preventDefault(),children:[isLoading&&jsxRuntime.jsx(index$4.Spinner,{dimension:"s"===dimension?"ms":"m"}),displayClearIcon&&!readOnly&&needShowClearIcon&&jsxRuntime.jsx(InputIconButton.InputIconButton,{...clearButtonProps,...clearButtonPropsConfig(clearButtonProps)}),icons,!readOnly&&jsxRuntime.jsx(OpenStatusButton.OpenStatusButton,{"data-disabled":!!disabled||void 0,"data-loading":!!isLoading||void 0,...openButtonProps,...openButtonPropsConfig(openButtonProps)})]})]})});Select.displayName="Select",exports.SelectValueWrapper=styled.ValueWrapper,exports.defaultFilterItem=utils.defaultFilterItem,exports.OptionGroup=OptionGroup.OptionGroup,exports.DropDownText=DropDownText,exports.Select=Select;
//# sourceMappingURL=index.cjs.js.map
