"use strict";var jsxRuntime=require("react/jsx-runtime"),e=require("react"),index=require("../../Tooltip/index.cjs.js"),styled=require("./styled.cjs.js"),checkOverflow=require("../../common/utils/checkOverflow.cjs.js");function _interopNamespace(e){if(e&&e.__esModule)return e;var n=Object.create(null);return e&&Object.keys(e).forEach(function(k){if("default"!==k){var d=Object.getOwnPropertyDescriptor(e,k);Object.defineProperty(n,k,d.get?d:{enumerable:!0,get:function(){return e[k]}})}}),n.default=e,Object.freeze(n)}var e__namespace=_interopNamespace(e);exports.DisplayValue=({visibleValue,isSearchPanelOpen,targetRef,forceHideOverflowTooltip})=>{const valueRef=e__namespace.useRef(null),[overflowActive,setOverflowActive]=e__namespace.useState(!1),[tooltipVisible,setTooltipVisible]=e__namespace.useState(!1);e__namespace.useEffect(()=>{valueRef.current&&checkOverflow.checkOverflow(valueRef.current)!==overflowActive&&setOverflowActive(checkOverflow.checkOverflow(valueRef.current))},[tooltipVisible,setOverflowActive]),e__namespace.useEffect(()=>{function show(){setTooltipVisible(!0)}function hide(){setTooltipVisible(!1)}const value=valueRef.current;if(value)return value.addEventListener("mouseenter",show),value.addEventListener("mouseleave",hide),()=>{value.removeEventListener("mouseenter",show),value.removeEventListener("mouseleave",hide)}},[setTooltipVisible]);const showTooltip=!forceHideOverflowTooltip&&!isSearchPanelOpen&&tooltipVisible&&overflowActive;return jsxRuntime.jsxs(jsxRuntime.Fragment,{children:[jsxRuntime.jsx(styled.StringValueWrapper,{ref:valueRef,children:visibleValue}),showTooltip&&jsxRuntime.jsx(index.Tooltip,{renderContent:()=>visibleValue,targetElement:targetRef.current})]})};
//# sourceMappingURL=DisplayValue.cjs.js.map
