"use strict";var e=require("react"),jsxRuntime=require("react/jsx-runtime"),useSelectContext=require("../useSelectContext.cjs.js"),styled$1=require("./styled.cjs.js"),DropDownContext=require("../DropDownContext.cjs.js"),styled=require("../styled.cjs.js");exports.DropDownOption=({id,disabled=!1,readOnly=!1,value,children,renderOption,renderChip:_,...htmlProps})=>{const dropDownContext=DropDownContext.useDropDownContext(),optionGroupContext=useSelectContext.useOptionGroupContext(),optionIsDisabled=optionGroupContext?.disabled||disabled,defaultOptionRender=props=>dropDownContext?.multiple?(({selected=!1,hovered=!1})=>jsxRuntime.jsxs(jsxRuntime.Fragment,{children:[dropDownContext?.showCheckbox&&jsxRuntime.jsx(styled$1.StyledCheckbox,{checked:selected,hovered,dimension:"s"===dropDownContext?.dimension?"s":"m",disabled,onChange:()=>!1}),children]}))(props):children;return e.useEffect(()=>{const itemId=id||value,item={id:value,value,render:options=>{return renderOption?renderOption(options):e.createElement(styled.CustomOptionWrapper,{...options,dimension:(selectDimension=dropDownContext?.dimension,"xl"===selectDimension?"l":selectDimension),key:itemId,...htmlProps,$selected:options.selected,$hovered:options.hovered,$preselected:options.preselected,$multiple:dropDownContext?.multiple},defaultOptionRender({selected:options.selected,hovered:options.hovered}));var selectDimension},disabled:optionIsDisabled,readOnly};return dropDownContext?.onDropDownOptionMount?.(item),()=>dropDownContext?.onDropDownOptionUnMount?.(item)},[dropDownContext?.onDropDownOptionMount,dropDownContext?.onDropDownOptionUnMount,dropDownContext?.dimension,dropDownContext?.multiple]),null};
//# sourceMappingURL=DropDownOption.cjs.js.map
