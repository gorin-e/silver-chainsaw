/// <reference types="react" />
import type { ComponentDimension } from '../../../../components/input';
interface CustomOptionProps {
    disabled?: boolean;
    selected?: boolean;
    active?: boolean;
    dimension?: ComponentDimension;
}
export declare const CustomOption: import("styled-components/dist/types").IStyledComponentBase<"web", import("styled-components/dist/types").Substitute<Omit<import("styled-components").FastOmit<import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLDivElement>, HTMLDivElement>, "$dimension"> & {
    $dimension?: "s" | "m" | "xl" | undefined;
}, "ref"> & {
    ref?: import("react").RefObject<HTMLDivElement> | ((instance: HTMLDivElement | null) => void) | null | undefined;
}, CustomOptionProps>> & string;
export declare const StyledCheckbox: import("styled-components/dist/types").IStyledComponentBase<"web", import("styled-components").FastOmit<Omit<import("../../../../components/form/CheckboxField").CheckboxFieldProps & import("react").RefAttributes<HTMLInputElement>, "ref"> & {
    ref?: ((instance: HTMLInputElement | null) => void) | import("react").RefObject<HTMLInputElement> | null | undefined;
}, never>> & string & Omit<import("react").ForwardRefExoticComponent<import("../../../../components/form/CheckboxField").CheckboxFieldProps & import("react").RefAttributes<HTMLInputElement>>, keyof import("react").Component<any, {}, any>>;
export {};
//# sourceMappingURL=styled.d.ts.mapngURL=styled.d.ts.map