import{jsx,jsxs}from"react/jsx-runtime";import{forwardRef,useState,useMemo,useRef,useEffect,useCallback,Children,cloneElement,isValidElement}from"react";import styled,{useTheme}from"styled-components";import{LIGHT_THEME}from"../../themes/light/index.es.js";import"../../themes/common/locales.es.js";import"../../Typography/typography.es.js";import"../../Typography/defaultTypographyMixin.es.js";import{OpenStatusButton}from"../../OpenStatusButton.es.js";import{keyboardKey}from"../../common/keyboardKey.es.js";import{refSetter}from"../../common/utils/refSetter.es.js";import{InputIconButton}from"../../InputIconButton.es.js";import{ReactComponent as SvgCloseOutline}from"../../../node_modules/@admiral-ds/icons/build/service/CloseOutline.svg.es.js";import{ConstantSelectProvider}from"./useSelectContext.es.js";import{MultipleSelectChips}from"./MultipleSelectChips/index.es.js";import{OptionWrapper,EmptyMessageWrapper,SelectWrapper,BorderedDiv,ValueWrapper,Input,StyledMenu,IconPanel}from"./styled.es.js";import{changeInputData}from"../../common/dom/changeInputData.es.js";import{useClickOutside}from"../../common/hooks/useClickOutside.es.js";import{Spinner}from"../../Spinner/index.es.js";import{DisplayValue}from"./DisplayValue.es.js";import{DropdownContainer}from"../../DropdownContainer/index.es.js";import{NativeControl}from"./NativeControl.es.js";import{DropDownProvider}from"./DropDownContext.es.js";import{defaultFilterItem}from"./utils.es.js";import{passDropdownDataAttributes,passMenuDataAttributes}from"../../common/utils/splitDataAttributes.es.js";import{uid}from"../../common/uid.es.js";import{usePrevious}from"../../common/hooks/usePrevious.es.js";import"./Option/styled.es.js";export{OptionGroup}from"./OptionGroup.es.js";const DropDownText=styled(OptionWrapper)`
  color: var(--admiral-color-Neutral_Neutral50, ${p=>p.theme.color["Neutral/Neutral 50"]});
`,stopPropagation=evt=>evt.stopPropagation(),nothing=()=>{},Select=forwardRef(({value,isLoading,className,style,status,icons,portalTargetRef,targetElement,inputTargetRef,disabled,readOnly,placeholder,defaultValue,dimension="m",idleHeight="fixed",minRowCount="none",maxRowCount="none",mode="select",multiple=!1,showCheckbox=!0,displayClearIcon=!1,onClearIconClick,onInputChange,inputValue,defaultInputValue,renderSelectValue,onFocus:onFocusFromProps,onBlur:onBlurFromProps,children,alignDropdown="stretch",alignSelf="stretch",skeleton=!1,locale,dropContainerCssMixin,dropContainerClassName,dropContainerStyle,renderDropDownTopPanel,renderDropDownBottomPanel,renderTopPanel,renderBottomPanel,forcedOpen=!1,onChangeDropDownState,onInputKeyDown,onInputKeyUp,onInputKeyUpCapture,onInputKeyDownCapture,searchFormat="wholly",onFilterItem=defaultFilterItem,virtualScroll,title,forceHideOverflowTooltip=!1,onSelectedChange,moveSelectedOnTop,clearInputValueAfterSelect=!0,openButtonPropsConfig=nothing,clearButtonPropsConfig=nothing,...props},ref)=>{const theme=useTheme()||LIGHT_THEME,emptyMessage=locale?.emptyMessage||jsx(DropDownText,{$dimension:dimension,children:theme.locales[theme.currentLocale].select.emptyMessage}),[selectedValue,setSelectedValue]=useState(value??defaultValue),[internalSearchValue,setSearchValue]=useState(""),searchValue=void 0===inputValue?internalSearchValue:inputValue,[shouldRenderSelectValue,setShouldRenderSelectValue]=useState(!1),[activeItem,setActiveItem]=useState(),[constantOptions,setConstantOptions]=useState([]),[dropDownItems,setDropItems]=useState([]),[isSearchPanelOpen,setIsSearchPanelOpen]=useState(forcedOpen),[isFocused,setIsFocused]=useState(!1),[preselected,setPreseleceted]=useState(void 0),selectIsUncontrolled=void 0===value,modeIsSelect="select"===mode,fixedHeight="none"!==useMemo(()=>"none"!==maxRowCount&&maxRowCount>0?maxRowCount:"fixed"===idleHeight?1:"none",[maxRowCount,idleHeight]),externalValue=value??defaultValue,selectedArray=useRef(Array.isArray(externalValue)?externalValue:[]),isKeyboardEvent=useRef(!1),unmountedSelectedOptions=useRef([]);useEffect(()=>{Array.isArray(value)&&(selectedArray.current=value)},[value]);const selectedOption=useMemo(()=>multiple?null:constantOptions.find(option=>option.value===selectedValue),[multiple,constantOptions,selectedValue]),selectedOptions=useMemo(()=>multiple&&Array.isArray(selectedValue)?selectedValue.reduce((acc,item)=>{const option=constantOptions.find(option=>option.value===item);return option&&acc.push(option),acc},[]):[],[constantOptions,selectedValue,multiple]),prevIsSearchPanelOpen=usePrevious(isSearchPanelOpen),[itemsOnTop,setItemsOnTop]=useState([]);useEffect(()=>{if(multiple&&moveSelectedOnTop||!(itemsOnTop.length>0)||setItemsOnTop([]),multiple&&moveSelectedOnTop&&prevIsSearchPanelOpen!==isSearchPanelOpen&&isSearchPanelOpen){const selected=selectedOptions.map(item=>item.value),items=selected.length>0?selected.reduce((acc,value)=>{const modelItem=dropDownItems.find(item=>item.value===value);return modelItem&&acc.push(modelItem),acc},[]):[];setItemsOnTop(items)}},[dropDownItems,isSearchPanelOpen,selectedOptions,multiple,moveSelectedOnTop]);const dropDownModel=useMemo(()=>{const selected=itemsOnTop.map(item=>item.value),resultItems=dropDownItems.filter(item=>onFilterItem(item.value,searchValue,searchFormat)).reduce((acc,item)=>(selected.includes(item.value)||acc.push(item),acc),[...itemsOnTop]);return resultItems.length?resultItems:[{id:"emptyMessage",render:()=>jsx(EmptyMessageWrapper,{children:emptyMessage},"empty"),disabled:!0}]},[isLoading,dropDownItems,dimension,searchValue,itemsOnTop]);useEffect(()=>{if(activeItem){dropDownModel.find(item=>item.id===activeItem)||setActiveItem(void 0)}},[dropDownModel,activeItem]);const inputRef=inputTargetRef??useRef(null),selectRef=useRef(null),containerRef=useRef(null),targetNode=targetElement||portalTargetRef?.current||containerRef.current,valueWrapperRef=useRef(null),dropDownRef=useRef(null),mutableState=useRef({shouldExtendInputValue:!1}),onConstantOptionMount=option=>{setConstantOptions(prev=>[...prev,option]),unmountedSelectedOptions.current.includes(option.value)&&(unmountedSelectedOptions.current=unmountedSelectedOptions.current.filter(unmountedOption=>unmountedOption!==option.value))},onConstantOptionUnMount=option=>{selectedArray.current.includes(option.value)&&(unmountedSelectedOptions.current=[...unmountedSelectedOptions.current,option.value]),setConstantOptions(prev=>prev.filter(prevOption=>prevOption.value!==option.value))},handleDropDownOptionMount=useCallback(option=>{setDropItems(prev=>[...prev,option])},[]),handleDropDownOptionUnMount=useCallback(option=>{setDropItems(prev=>prev.filter(prevOption=>prevOption.id!==option.id))},[]),onCloseSelect=useCallback(()=>{setIsSearchPanelOpen(!1),inputRef.current&&changeInputData(inputRef.current,{value:""}),setShouldRenderSelectValue(!0)},[selectedValue]),handleOptionSelect=useCallback(optionValue=>{const selectElem=selectRef.current;if(!selectElem)return;const optionElems=Array.from(selectElem.options),targetOptionElem=optionElems.find(option=>option.value===optionValue);if(targetOptionElem&&(multiple||optionElems.forEach(option=>option.selected=!1),targetOptionElem.selected=!multiple||!targetOptionElem.selected,selectElem.dispatchEvent(new Event("change",{bubbles:!0})),multiple||onCloseSelect(),searchValue&&inputRef.current&&clearInputValueAfterSelect)){changeInputData(inputRef.current,{value:"",selectionEnd:0,selectionStart:0});const currentActiveItem=activeItem;setActiveItem(""),setTimeout(()=>setActiveItem(currentActiveItem))}},[onCloseSelect,multiple,searchValue,activeItem]),resetOptions=useCallback(()=>{const selectElem=selectRef.current;selectElem&&(selectElem.selectedIndex=-1,selectElem.dispatchEvent(new Event("change",{bubbles:!0})))},[]);useEffect(()=>{forcedOpen!==isSearchPanelOpen&&setIsSearchPanelOpen(forcedOpen)},[forcedOpen]),useEffect(()=>{onChangeDropDownState?.(isSearchPanelOpen),!isSearchPanelOpen&&isFocused&&document.activeElement!==containerRef.current&&selectRef.current?.focus()},[isSearchPanelOpen,isFocused]);const handleOnClear=onClearIconClick||resetOptions,shouldFixMultiSelectHeight=fixedHeight&&!isSearchPanelOpen,renderMultipleSelectValue=useCallback(()=>jsx(MultipleSelectChips,{containerRef:valueWrapperRef,options:selectedOptions,shouldShowCount:shouldFixMultiSelectHeight,disabled,readOnly,onChipRemove:handleOptionSelect,onChipClick:stopPropagation,isOptionsListOpen:isSearchPanelOpen,hasMaxHeight:!!maxRowCount&&"none"!==maxRowCount}),[selectedOptions,shouldFixMultiSelectHeight,disabled,readOnly,handleOptionSelect,isSearchPanelOpen,maxRowCount]),isEmpty=(multiple?!selectedValue?.length:!selectedValue)&&!!placeholder&&!searchValue,renderedSelectValue=renderSelectValue?.(selectedValue,searchValue),renderedSelectedOption=selectedOption?.children,renderedDefaultSelectValue=multiple?renderMultipleSelectValue():renderedSelectedOption,visibleValue=renderedSelectValue||renderedDefaultSelectValue||selectedValue||null,visibleValueIsString="string"==typeof visibleValue,wrappedVisibleValue=visibleValueIsString?jsx(DisplayValue,{visibleValue,isSearchPanelOpen,targetRef:containerRef,forceHideOverflowTooltip}):visibleValue,handleSearchPanelToggle=()=>{setIsSearchPanelOpen(prev=>!prev)},deleteOrHideSelectValueOnBackspace=()=>{if(!searchValue&&selectedValue)return multiple?void(()=>{const lastAbledSelectedOptionValue=(options=[...selectedOptions].reverse(),options.find(({disabled})=>!disabled)?.value);var options;lastAbledSelectedOptionValue&&handleOptionSelect(lastAbledSelectedOptionValue)})():setShouldRenderSelectValue(!1)};useEffect(()=>{if(!readOnly&&!disabled)return containerRef.current?.addEventListener("keydown",handleKeyDown),()=>{containerRef.current?.removeEventListener("keydown",handleKeyDown)};function handleKeyDown(evt){const code=keyboardKey.getCode(evt);code===keyboardKey[" "]&&(!modeIsSelect&&searchValue?evt.stopPropagation():isSearchPanelOpen||(evt.preventDefault(),setIsSearchPanelOpen(!0),evt.stopPropagation())),code!==keyboardKey.Enter||isSearchPanelOpen||(evt.preventDefault(),setIsSearchPanelOpen(!0),evt.stopPropagation()),code!==keyboardKey.ArrowDown&&code!==keyboardKey.ArrowUp||isSearchPanelOpen||(setIsSearchPanelOpen(!0),evt.stopPropagation());const modifyKeyPressed=evt.ctrlKey||evt.metaKey||evt.altKey;1!==evt.key.length||modifyKeyPressed||visibleValueIsString&&!searchValue&&shouldRenderSelectValue&&(mutableState.current.shouldExtendInputValue=!0),code!==keyboardKey.Backspace||evt.repeat||deleteOrHideSelectValueOnBackspace(),code===keyboardKey.Backspace&&((evt=>{if(!visibleValueIsString||!inputRef.current||searchValue||!shouldRenderSelectValue||!selectedValue)return;evt.preventDefault();const newInputValue=visibleValue.slice(0,-1);changeInputData(inputRef.current,{value:newInputValue,selectionEnd:newInputValue.length,selectionStart:newInputValue.length})})(evt),setIsSearchPanelOpen(!0)),code===keyboardKey.Escape&&isSearchPanelOpen&&(setIsSearchPanelOpen(!1),evt.preventDefault(),evt.stopPropagation())}},[readOnly,disabled,modeIsSelect,searchValue,isSearchPanelOpen,selectedOptions]),useEffect(()=>{function handleKeyUp(){isKeyboardEvent.current=!1}return containerRef.current?.addEventListener("keyup",handleKeyUp),()=>{containerRef.current?.removeEventListener("keyup",handleKeyUp)}},[]);useEffect(()=>{(!isFocused&&!multiple||multiple)&&(inputRef.current&&changeInputData(inputRef.current,{value:""}),setShouldRenderSelectValue(!0))},[multiple,isFocused]),useEffect(()=>{isSearchPanelOpen&&(modeIsSelect?selectRef.current?.focus():inputRef.current?.focus(),setPreseleceted(""))},[isSearchPanelOpen,modeIsSelect]),useEffect(()=>{preselected&&setActiveItem("")},[preselected]),useEffect(()=>{activeItem&&setPreseleceted("")},[activeItem]),useEffect(()=>{if(isSearchPanelOpen){const activeValue=selectedValue&&!Array.isArray(selectedValue)?selectedValue:void 0;setActiveItem(activeValue)}},[isSearchPanelOpen]),useEffect(()=>{selectIsUncontrolled||setSelectedValue(value)},[value,selectIsUncontrolled]);useClickOutside([containerRef,dropDownRef],e=>{e.target&&containerRef.current?.contains(e.target)||(setIsFocused(!1),onCloseSelect())});const needShowClearIcon=shouldRenderSelectValue&&(multiple?!!selectedValue?.length:!!selectedValue),memorisedChildren=useMemo(()=>Children.map(children,child=>isValidElement(child)?cloneElement(child,{key:uid(),...child.props}):null),[children]),memorisedDropDownOptions=useMemo(()=>jsx(DropDownProvider,{onDropDownOptionMount:handleDropDownOptionMount,onDropDownOptionUnMount:handleDropDownOptionUnMount,dimension,multiple,showCheckbox,children:memorisedChildren}),[memorisedChildren,dimension,showCheckbox,multiple]),memorisedConstantOptions=useMemo(()=>jsx(ConstantSelectProvider,{onConstantOptionMount,onConstantOptionUnMount,children:memorisedChildren}),[memorisedChildren]),dropContainerProps=passDropdownDataAttributes(props),menuProps=passMenuDataAttributes(props),clearButtonProps={icon:SvgCloseOutline,id:"searchSelectClearIcon",onClick:handleOnClear,"aria-hidden":!0},openButtonProps={$isOpen:isSearchPanelOpen,onClick:handleSearchPanelToggle,"aria-hidden":!0};return jsxs(SelectWrapper,{className,style,$focused:isFocused,$multiple:multiple,disabled,"data-disabled":disabled,$readonly:readOnly,$isLoading:isLoading,$dimension:dimension,ref:containerRef,"data-status":status,onClick:disabled||readOnly||isLoading?void 0:e=>{if(e.target&&dropDownRef.current?.contains(e.target))return;!modeIsSelect&&isSearchPanelOpen||handleSearchPanelToggle()},onFocus:evt=>{isFocused||(setIsFocused(!0),onFocusFromProps?.(evt))},onMouseDown:e=>{isFocused&&e.preventDefault()},$skeleton:skeleton,onBlur:evt=>{evt.currentTarget.contains(evt.relatedTarget)||dropDownRef.current?.contains(evt.relatedTarget)||(setIsFocused(!1),setIsSearchPanelOpen(!1),selectRef.current?.blur(),onBlurFromProps?.(evt),isKeyboardEvent.current=!1)},title,children:[memorisedConstantOptions,memorisedDropDownOptions,jsx(NativeControl,{ref:refSetter(ref,selectRef),value:selectedValue,multiple,disabled,options:constantOptions,...props,onChange:evt=>{if(isKeyboardEvent.current&&modeIsSelect)return void setPreseleceted(evt.target.value);const value=multiple?Array.from(evt.target.selectedOptions).map(option=>option.value):evt.target.value;let newSelectedArray=[];if(multiple&&Array.isArray(value)){const addedValues=value.filter(item=>!selectedArray.current.includes(item)&&!unmountedSelectedOptions.current.includes(item)),deletedVales=selectedArray.current.filter(item=>!value.includes(item)&&!unmountedSelectedOptions.current.includes(item));newSelectedArray=[...selectedArray.current,...addedValues];const newUnmounted=[...unmountedSelectedOptions.current];deletedVales.forEach(deletedItem=>{const selectedIndex=newSelectedArray.findIndex(item=>deletedItem===item);selectedIndex>-1&&newSelectedArray.splice(selectedIndex,1);const unmountedIndex=newUnmounted.findIndex(item=>deletedItem===item);unmountedIndex>-1&&newUnmounted.splice(unmountedIndex,1)}),selectedArray.current=newSelectedArray,unmountedSelectedOptions.current=newUnmounted}selectIsUncontrolled&&setSelectedValue(multiple?newSelectedArray:value),props.onChange?.(evt),onSelectedChange?.(multiple?newSelectedArray:value)}}),jsx(BorderedDiv,{}),jsxs(ValueWrapper,{tabIndex:-1,ref:valueWrapperRef,className:"selectValueWrapper",$dimension:dimension,$multiple:multiple,$minRowCount:"none"!==minRowCount?minRowCount:void 0,$maxRowCount:"none"!==maxRowCount?maxRowCount:void 0,$idleHeight:idleHeight,$opened:isSearchPanelOpen,$isEmpty:isEmpty,children:[shouldRenderSelectValue&&wrappedVisibleValue,(placeholder&&isEmpty||!modeIsSelect)&&jsx(Input,{"data-id":props.id,placeholder:isEmpty?placeholder:"",tabIndex:-1,ref:inputRef,disabled,readOnly:readOnly||modeIsSelect,value:searchValue,defaultValue:defaultInputValue,$isMultiple:multiple,$dimension:dimension,onChange:evt=>{multiple||setShouldRenderSelectValue(!1),(evt=>{mutableState.current.shouldExtendInputValue&&visibleValueIsString&&(evt.target.value=`${visibleValue}${evt.target.value}`,mutableState.current.shouldExtendInputValue=!1)})(evt),void 0===inputValue&&setSearchValue(evt.target.value),onInputChange?.(evt)},onKeyDown:onInputKeyDown,onKeyUp:onInputKeyUp,onKeyUpCapture:onInputKeyUpCapture,onKeyDownCapture:onInputKeyDownCapture})]}),isSearchPanelOpen&&!skeleton&&jsx(DropdownContainer,{ref:dropDownRef,tabIndex:-1,targetElement:targetNode,"data-dimension":dimension,alignSelf:alignDropdown||alignSelf,dropContainerCssMixin,className:dropContainerClassName,style:dropContainerStyle,...dropContainerProps,children:jsx(StyledMenu,{dimension:"xl"===dimension?"l":dimension,active:activeItem,selected:selectedValue,onActivateItem:id=>setActiveItem(id),onSelectItem:handleOptionSelect,onDeselectItem:handleOptionSelect,multiSelection:multiple,model:dropDownModel,renderTopPanel:renderDropDownTopPanel||renderTopPanel,renderBottomPanel:renderDropDownBottomPanel||renderBottomPanel,containerRef:dropDownRef,virtualScroll,preventFocusSteal:!0,preselectedModeActive:modeIsSelect,preselected,onPreselectItem:setPreseleceted,onMenuKeyDown:()=>{isKeyboardEvent.current=!0},...menuProps})}),jsxs(IconPanel,{$multiple:multiple,$dimension:dimension,onClick:stopPropagation,onMouseDown:e=>e.preventDefault(),children:[isLoading&&jsx(Spinner,{dimension:"s"===dimension?"ms":"m"}),displayClearIcon&&!readOnly&&needShowClearIcon&&jsx(InputIconButton,{...clearButtonProps,...clearButtonPropsConfig(clearButtonProps)}),icons,!readOnly&&jsx(OpenStatusButton,{"data-disabled":!!disabled||void 0,"data-loading":!!isLoading||void 0,...openButtonProps,...openButtonPropsConfig(openButtonProps)})]})]})});Select.displayName="Select";export{DropDownText,Select,ValueWrapper as SelectValueWrapper,defaultFilterItem};
//# sourceMappingURL=index.es.js.map
