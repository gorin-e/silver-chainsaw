/// <reference types="react" />
import type { IConstantOption } from '../../../../components/input/Select/types';
export interface CommonChipProps {
    containerRef: React.RefObject<HTMLDivElement>;
    shouldShowCount: boolean;
    disabled?: boolean;
    readOnly?: boolean;
    onChipRemove: (value: string) => void;
    onChipClick?: (evt: React.MouseEvent) => void;
}
interface ChipBoxProps extends CommonChipProps, React.HTMLAttributes<HTMLDivElement> {
    option: IConstantOption;
    childrenOptions: Array<IConstantOption>;
}
export declare const Wrapper: import("styled-components/dist/types").IStyledComponentBase<"web", import("styled-components").FastOmit<import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLDivElement>, HTMLDivElement>, never>> & string;
export declare const ChipBox: import("react").ForwardRefExoticComponent<ChipBoxProps & import("react").RefAttributes<HTMLDivElement>>;
export {};
//# sourceMappingURL=ChipBox.d.ts.map.ts.map