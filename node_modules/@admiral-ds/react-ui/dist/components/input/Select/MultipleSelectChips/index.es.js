import{jsx,Fragment}from"react/jsx-runtime";import{ChipBox}from"./ChipBox.es.js";import{useEffect}from"react";import{usePrevious}from"../../../common/hooks/usePrevious.es.js";const MultipleSelectChips=({options,isOptionsListOpen,containerRef,hasMaxHeight,...commonProps})=>{const prevIsOptionsListOpen=usePrevious(isOptionsListOpen);return useEffect(()=>{hasMaxHeight&&0!==options.length&&(prevIsOptionsListOpen&&!isOptionsListOpen&&containerRef.current?.scrollTo({top:0,left:0,behavior:"smooth"}),!prevIsOptionsListOpen&&isOptionsListOpen&&setTimeout(()=>{containerRef.current?.scrollTo({top:0,left:0,behavior:"instant"}),containerRef.current?.scrollTo({top:containerRef.current?.scrollHeight,left:0,behavior:"smooth"})}),isOptionsListOpen&&prevIsOptionsListOpen&&containerRef.current?.scrollTo({top:containerRef.current?.scrollHeight,left:0,behavior:"smooth"}))},[isOptionsListOpen,options,hasMaxHeight]),jsx(Fragment,{children:options.map((option,index)=>jsx(ChipBox,{option,childrenOptions:index<options.length-1?options.slice(index+1):[],containerRef,...commonProps},option.value))})};export{MultipleSelectChips};
//# sourceMappingURL=index.es.js.map
