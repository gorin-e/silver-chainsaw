import{jsxs,jsx}from"react/jsx-runtime";import{InfoChip}from"./InfoChip.es.js";import{CounterChip}from"./CounterChip.es.js";import{ShadowCounterChip}from"./styled.es.js";import styled from"styled-components";import{forwardRef,useRef,useState,useLayoutEffect}from"react";import{refSetter}from"../../../common/utils/refSetter.es.js";const Wrapper=styled.div`
  display: flex;
`,ChipBox=forwardRef(({option,childrenOptions,containerRef,shouldShowCount,disabled,readOnly,onChipClick,onChipRemove},ref)=>{const wrapperRef=useRef(null),[visible,setVisible]=useState(!1);return useLayoutEffect(()=>{const observer=new IntersectionObserver(function(entries){if(entries[0].isIntersecting&&!visible){setVisible(!0),entries[0].target.setAttribute("data-visible","true");const prev=entries[0].target.previousElementSibling,next=entries[0].target.nextElementSibling;return prev&&prev.removeAttribute("data-show-count"),void(next&&!next.getAttribute("data-visible")&&entries[0].target.setAttribute("data-show-count",""))}if(visible&&!entries[0].isIntersecting){setVisible(!1),entries[0].target.removeAttribute("data-visible"),entries[0].target.removeAttribute("data-show-count");const prev=entries[0].target.previousElementSibling;prev&&prev.getAttribute("data-visible")&&prev.setAttribute("data-show-count","true")}},{root:containerRef.current,threshold:[0,1]});return containerRef.current&&wrapperRef.current&&observer.observe(wrapperRef.current),()=>observer.disconnect()},[visible]),jsxs(Wrapper,{ref:refSetter(ref,wrapperRef),onMouseDown:e=>e.preventDefault(),children:[jsx(InfoChip,{className:"chip",option,disabled,readOnly,onClick:onChipClick,onChipRemove}),shouldShowCount&&childrenOptions.length>0&&jsx(CounterChip,{count:childrenOptions.length,disabled,children:childrenOptions.map(innerOption=>jsx(InfoChip,{option:innerOption,disabled,readOnly,onClick:onChipClick,onChipRemove},innerOption.value))}),!shouldShowCount&&jsx(ShadowCounterChip,{})]},option.value)});export{ChipBox,Wrapper};
//# sourceMappingURL=ChipBox.es.js.map
