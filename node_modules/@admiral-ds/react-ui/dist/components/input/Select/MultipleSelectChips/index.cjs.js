"use strict";var jsxRuntime=require("react/jsx-runtime"),ChipBox=require("./ChipBox.cjs.js"),e=require("react"),usePrevious=require("../../../common/hooks/usePrevious.cjs.js");exports.MultipleSelectChips=({options,isOptionsListOpen,containerRef,hasMaxHeight,...commonProps})=>{const prevIsOptionsListOpen=usePrevious.usePrevious(isOptionsListOpen);return e.useEffect(()=>{hasMaxHeight&&0!==options.length&&(prevIsOptionsListOpen&&!isOptionsListOpen&&containerRef.current?.scrollTo({top:0,left:0,behavior:"smooth"}),!prevIsOptionsListOpen&&isOptionsListOpen&&setTimeout(()=>{containerRef.current?.scrollTo({top:0,left:0,behavior:"instant"}),containerRef.current?.scrollTo({top:containerRef.current?.scrollHeight,left:0,behavior:"smooth"})}),isOptionsListOpen&&prevIsOptionsListOpen&&containerRef.current?.scrollTo({top:containerRef.current?.scrollHeight,left:0,behavior:"smooth"}))},[isOptionsListOpen,options,hasMaxHeight]),jsxRuntime.jsx(jsxRuntime.Fragment,{children:options.map((option,index)=>jsxRuntime.jsx(ChipBox.ChipBox,{option,childrenOptions:index<options.length-1?options.slice(index+1):[],containerRef,...commonProps},option.value))})};
//# sourceMappingURL=index.cjs.js.map
