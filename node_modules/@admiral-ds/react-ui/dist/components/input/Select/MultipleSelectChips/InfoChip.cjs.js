"use strict";var jsxRuntime=require("react/jsx-runtime"),styled=require("./styled.cjs.js"),splitDataAttributes=require("../../../common/utils/splitDataAttributes.cjs.js"),e=require("react");const getChipMeta=({value,disabled,renderChip,...restProps},onChipRemove)=>{const chip=renderChip(),dataProps={};return splitDataAttributes.passDataAttributes(restProps,dataProps,"data",!1),(chip=>"object"==typeof chip&&null!==chip&&!e.isValidElement(chip))(chip)?{...chip,onClose:()=>chip.onClose?.({value,disabled,...dataProps})}:{disabled,onClose:()=>onChipRemove(value),children:chip}};exports.InfoChip=({className,option,disabled,readOnly,onClick,onChipRemove})=>{const renderContentTooltip=e.useCallback(children=>()=>jsxRuntime.jsx(styled.ContentTooltip,{children}),[]);return jsxRuntime.jsx(styled.StyledChip,{className,tabIndex:-1,dimension:"s",appearance:"filled",onClick,onClose:readOnly?void 0:getChipMeta(option,onChipRemove).onClose,disabled:getChipMeta(option,onChipRemove).disabled||disabled,renderContentTooltip:renderContentTooltip(getChipMeta(option,onChipRemove).children),children:getChipMeta(option,onChipRemove).children})};
//# sourceMappingURL=InfoChip.cjs.js.map
