import{jsxs,jsx}from"react/jsx-runtime";import styled from"styled-components";import{forwardRef,useRef,useEffect}from"react";import{refSetter}from"../../common/utils/refSetter.es.js";const StyledInputLine=styled.input`
  border: none;
  outline: none;
  appearance: none;
  background-image: none;
  background-color: transparent;
  -webkit-box-shadow: none;
  -moz-box-shadow: none;
  box-shadow: none;
  padding: 0;
  box-sizing: border-box;
  width: 100%;
  color: ${p=>p.$isTmpValue?`var(--admiral-color-Neutral_Neutral30, ${p.theme.color["Neutral/Neutral 30"]})`:`var(--admiral-color-Neutral_Neutral90, ${p.theme.color["Neutral/Neutral 90"]})`};

  ::placeholder {
    color: var(--admiral-color-Neutral_Neutral50, ${p=>p.theme.color["Neutral/Neutral 50"]});
  }
`,PlaceholderValue=styled.span`
  color: var(--admiral-color-Neutral_Neutral30, ${p=>p.theme.color["Neutral/Neutral 30"]});
  transition: color 0.3s ease-in-out;
`,AdditionalText=styled(PlaceholderValue)`
  user-select: none;
  -webkit-user-select: none;
  pointer-events: none;
`,InvisibleInputValue=styled.span`
  visibility: hidden;
`,InputLineContainer=styled.div`
  text-align: start;
  width: 100%;
  display: flex;
  overflow: hidden;
  position: relative;

  &:focus-within ${PlaceholderValue} {
    color: var(--admiral-color-Neutral_Neutral50, ${p=>p.theme.color["Neutral/Neutral 50"]});
  }
`,MaskBox=styled.div`
  cursor: pointer;
  position: absolute;
  pointer-events: none;
  display: flex;
  top: 0;
  bottom: 0;
  right: 0;
  left: 0;
`,InputContainer=styled.div`
  position: relative;
  width: 100%;
`,AdditionalTextWrapper=styled.div`
  white-space: pre;
`,InputLine=forwardRef(({className,dataPlaceholder,tmpValue,prefix,suffix,...inputProps},ref)=>{const inputRef=useRef(null),placeholderRef=useRef(null),placeholder=inputProps.placeholder,isTmpValue="string"==typeof tmpValue;useEffect(()=>{const inputNode=inputRef.current,placeholderNode=placeholderRef.current;function oninput(){const{value}=this,len=value.length;placeholderNode&&("string"==typeof placeholder&&placeholder.length>0&&0==len?placeholderNode.innerHTML="":placeholderNode.innerHTML=dataPlaceholder?.substring(len)||"")}if("string"==typeof dataPlaceholder&&inputNode&&placeholderNode)return inputNode.addEventListener("input",oninput),()=>inputNode.removeEventListener("input",oninput)},[dataPlaceholder,placeholder,inputProps.value,inputProps.defaultValue,tmpValue]);return jsxs(InputLineContainer,{...{className,onFocus:e=>{e.preventDefault(),"input"!==e.target.tagName.toLowerCase()&&inputRef.current&&inputRef.current.focus()},tabIndex:-1},children:[prefix&&(""!==inputProps.value||tmpValue)&&jsxs(AdditionalTextWrapper,{children:[jsx(AdditionalText,{children:prefix}),jsx(AdditionalText,{children:" "})]}),jsxs(InputContainer,{children:[jsxs(MaskBox,{children:[jsx(InvisibleInputValue,{children:isTmpValue?tmpValue:inputProps.value}),jsx(PlaceholderValue,{ref:placeholderRef}),suffix&&(""!==inputProps.value||tmpValue)&&jsxs(AdditionalTextWrapper,{children:[jsx(AdditionalText,{children:" "}),jsx(AdditionalText,{children:suffix})]})]}),jsx(StyledInputLine,{ref:refSetter(ref,inputRef),...inputProps,$isTmpValue:isTmpValue,value:isTmpValue?tmpValue:inputProps.value})]})]})});export{InputLine,StyledInputLine};
//# sourceMappingURL=index.es.js.map
