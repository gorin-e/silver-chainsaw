/// <reference types="react" />
import { OpenStatusButton } from '../../../components/OpenStatusButton';
import type { InputIconButton } from '../../../components/InputIconButton';
import type { DataAttributes } from 'styled-components';
import type { TreeSelectItemProps } from './types';
import type { ComponentDimension } from '../../../components/input/types';
export interface TreeSelectProps extends Omit<React.InputHTMLAttributes<HTMLInputElement>, 'onChange' | 'onSelect'> {
    value?: string[];
    /** Отображать статус загрузки данных */
    isLoading?: boolean;
    /** Значение по умолчанию для некотролируемого селекта */
    defaultValue?: string[];
    /** Отображать иконку очистки поля */
    displayClearIcon?: boolean;
    /** Позволяет определить действия при нажатии на иконку очистки. По умолчанию произойдет очистка выбранных значений */
    onClearIconClick?: () => void;
    /** Состояние skeleton */
    skeleton?: boolean;
    /**
     * Список опций дерева
     */
    items: Array<TreeSelectItemProps>;
    /** Делает высоту компонента больше или меньше обычной */
    dimension?: ComponentDimension;
    /** Конфиг функция пропсов для кнопки выпадающего списка. На вход получает начальный набор пропсов, на
     * выход должна отдавать объект с пропсами, которые будут внедряться после оригинальных пропсов. */
    openButtonPropsConfig?: (props: React.ComponentProps<typeof OpenStatusButton>) => Partial<React.ComponentProps<typeof OpenStatusButton> & DataAttributes>;
    /** Конфиг функция пропсов для кнопки очистки. На вход получает начальный набор пропсов, на
     * выход должна отдавать объект с пропсами, которые будут внедряться после оригинальных пропсов. */
    clearButtonPropsConfig?: (props: React.ComponentProps<typeof InputIconButton>) => Partial<React.ComponentProps<typeof InputIconButton> & DataAttributes>;
    /** Срабатывает при изменении значения */
    onChange?: (value: string[]) => void;
    /** Срабатывает при выборе отдельного item */
    onSelect?: (id: string) => void;
    /** Срабатывает при отмене выбора отдельного item */
    onDeselect?: (id: string) => void;
    /** Срабатывает при открытии/закрытии DropDownMenu */
    onOpenChange?: (open: boolean) => void;
}
export declare const TreeSelect: import("react").ForwardRefExoticComponent<TreeSelectProps & import("react").RefAttributes<HTMLInputElement>>;
export type { TreeSelectItemProps };
//# sourceMappingURL=index.d.ts.mapdex.d.ts.map