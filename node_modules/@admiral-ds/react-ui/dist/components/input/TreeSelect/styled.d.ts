/// <reference types="react" />
export declare const StyledMenu: import("styled-components/dist/types").IStyledComponentBase<"web", import("styled-components").FastOmit<Omit<import("../../../components/Menu").MenuProps & import("react").RefAttributes<HTMLDivElement | null>, "ref"> & {
    ref?: ((instance: HTMLDivElement | null) => void) | import("react").RefObject<HTMLDivElement | null> | null | undefined;
}, never>> & string & Omit<import("react").ForwardRefExoticComponent<import("../../../components/Menu").MenuProps & import("react").RefAttributes<HTMLDivElement | null>>, keyof import("react").Component<any, {}, any>>;
export declare const StyledMultiInput: import("styled-components/dist/types").IStyledComponentBase<"web", import("styled-components").FastOmit<Omit<import("../../../components/input/MultiInput").MultiInputProps & import("react").RefAttributes<HTMLInputElement>, "ref"> & {
    ref?: ((instance: HTMLInputElement | null) => void) | import("react").RefObject<HTMLInputElement> | null | undefined;
}, never>> & string & Omit<import("react").ForwardRefExoticComponent<import("../../../components/input/MultiInput").MultiInputProps & import("react").RefAttributes<HTMLInputElement>>, keyof import("react").Component<any, {}, any>>;
export declare const StyledChip: import("styled-components/dist/types").IStyledComponentBase<"web", import("styled-components/dist/types").Substitute<Omit<import("../../../components/Chips").ChipsProps & import("react").RefAttributes<HTMLDivElement>, "ref"> & {
    ref?: import("react").RefObject<HTMLDivElement> | ((instance: HTMLDivElement | null) => void) | null | undefined;
}, {
    readOnly?: boolean | undefined;
}>> & string & Omit<import("react").ForwardRefExoticComponent<import("../../../components/Chips").ChipsProps & import("react").RefAttributes<HTMLDivElement>>, keyof import("react").Component<any, {}, any>>;
//# sourceMappingURL=styled.d.ts.mapppingURL=styled.d.ts.map