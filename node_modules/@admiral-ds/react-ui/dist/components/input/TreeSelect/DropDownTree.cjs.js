"use strict";var jsxRuntime=require("react/jsx-runtime"),e=require("react"),MenuItemWithCheckbox=require("../../Menu/MenuItemWithCheckbox.cjs.js"),index=require("../../DropdownContainer/index.cjs.js"),styled=require("./styled.cjs.js");exports.DropDownTree=({items,dropdownConfig,onChangeSelected,onSelectImem,onDeselectItem,dimension="l",...props})=>{const[active,setActive]=e.useState(),map=e.useMemo(()=>new Map(items),[items]),setChecked=(id,value)=>{const mapItem=map.get(id);mapItem?.node.disabled||(mapItem&&(mapItem.node.checked=value),mapItem?.dependencies?.length&&mapItem?.dependencies?.forEach(depId=>setChecked(depId,value)))},model=e.useMemo(()=>{const menuModel=[];return map.forEach(item=>{const node=item.node,hasChildren=!!node.children,indeterminate=item.dependencies?.some(depId=>map.get(depId)?.node.checked)&&item.dependencies?.some(depId=>!map.get(depId)?.node.checked),checked=hasChildren?item.dependencies?.every(depId=>map.get(depId)?.node.checked):!!node.checked;menuModel.push({id:node.id,render:options=>jsxRuntime.jsx(MenuItemWithCheckbox.MenuItemWithCheckbox,{id:node.id,dimension,disabled:node.disabled,checked,indeterminate,level:item.level,...options,children:node.label},node.id),disabled:node.disabled})}),menuModel},[dimension,map]),dropdownProps={alignSelf:"stretch",targetElement:null,onClickOutside:()=>null,className:"dropContainerClass"};return jsxRuntime.jsx(index.DropdownContainer,{...dropdownProps,...dropdownConfig?.(dropdownProps),children:jsxRuntime.jsx(styled.StyledMenu,{...props,active:active??null,onActivateItem:setActive,defaultIsActive:!1,preselectedModeActive:!1,model,onSelectItem:id=>{(id=>{const item=map.get(id),hasChildren=!!item?.node.children,indeterminate=item?.dependencies?.some(depId=>map.get(depId)?.node.checked)&&item?.dependencies?.some(depId=>!map.get(depId)?.node.checked),checked=hasChildren?!!indeterminate||item?.dependencies?.every(depId=>map.get(depId)?.node.checked):item?.node.checked;setChecked(id,!checked),onChangeSelected?.([...map.values()].filter(item=>!!item.node.checked).map(item=>item.node.id)),map.get(id)?.node.checked?onSelectImem?.(id):onDeselectItem?.(id)})(id)},disableSelectedOptionHighlight:!0,dimension})})};
//# sourceMappingURL=DropDownTree.cjs.js.map
