import * as React from 'react';
import type { HTMLAttributes } from 'react';
import type { TextInputProps } from '../TextInput';
import type { DropContainerStyles } from '../../../components/DropdownContainer';
import type { RenderOptionProps } from '../../../components/Menu/MenuItem';
export interface SlotProps extends HTMLAttributes<HTMLElement>, RenderOptionProps {
    value: string;
}
export interface TimeInputProps extends Omit<TextInputProps, 'value' | 'iconsBefore'>, DropContainerStyles {
    /** Выбранное значение времени */
    value?: string;
    /** Начало временного диапазона */
    startTime?: string;
    /** Конец временного диапазона */
    endTime?: string;
    /** Задизейбленный инпут */
    disabled?: boolean;
    /** Возможные значения временного диапозона */
    slots?: SlotProps[];
    /** Задизейбленное значение временного диапозона */
    disabledSlots?: string[];
    /** Альтернативная иконка компонента */
    icon?: React.FunctionComponent<React.SVGProps<SVGSVGElement>>;
    /** Позволяет обрабатывать введенные значения */
    parser?: (time?: string) => string;
    /**
     * @deprecated Помечено как deprecated в версии 8.10.0, будет удалено в 10.x.x версии.
     * Взамен используйте alignSelf
     *
     * Позволяет выравнивать позицию дропдаун контейнера относительно селекта.
     * Принимает стандартные значения css свойства align-self (auto | flex-start | flex-end | center | baseline | stretch)
     **/
    alignDropdown?: 'auto' | 'flex-start' | 'flex-end' | 'center' | 'baseline' | 'stretch';
}
export declare const TimeInput: React.ForwardRefExoticComponent<TimeInputProps & React.RefAttributes<HTMLInputElement>>;
//# sourceMappingURL=index.d.ts.mapd.ts.map