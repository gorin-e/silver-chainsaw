import{splice}from"../../common/utils/splice.es.js";function isValidDigit(string,number){const onlyDigitString=string.replace(/\D+/g,"").slice(0,1);switch(number){case 0:return/^([0-2])?$/.test(onlyDigitString);case 1:case 4:return/^([0-9])?$/.test(onlyDigitString);case 2:return/^([0-3])?$/.test(onlyDigitString);case 3:return/^([0-5])?$/.test(onlyDigitString)}}const MASK_VALUE="__:__";function defaultTimeInputHandle(inputData){if(null===inputData)return{value:"__:__",selectionStart:0,selectionEnd:0};const selectionStart=inputData.selectionStart||0;let inputValue=inputData.value||"",moveCursor=0;const lengthDifference=inputValue.length-5;if(inputValue.length>5){const newChar=inputValue.charAt(selectionStart-1);if(/^([0-9])?$/.test(newChar)&&"_"===inputValue.charAt(selectionStart))inputValue=splice(inputValue,selectionStart,1,"").slice(0,5);else if(/^([0-9])?$/.test(newChar)&&":"===inputValue.charAt(selectionStart)&&"_"===inputValue.charAt(selectionStart+1))inputValue=splice(inputValue,selectionStart+1,1,newChar),inputValue=splice(inputValue,selectionStart-1,1,"").slice(0,5),moveCursor+=1;else if(/^([0-9])?$/.test(newChar)&&/^([0-9]|:)?$/.test(inputValue.charAt(selectionStart))){":"===inputValue.charAt(selectionStart)&&(moveCursor+=1);const spliced=splice(inputValue.replace(/:/g,""),selectionStart,1,"");inputValue=`${spliced.substring(0,2).replace(/\D/g,"_")}:${spliced.substring(2,4).replace(/\D/g,"_")}`}else inputValue=splice(inputValue,selectionStart-1,1,"").slice(0,5),moveCursor-=1}lengthDifference<0&&(inputValue=splice(inputValue,selectionStart,0,"__:__".substring(selectionStart,selectionStart+Math.abs(lengthDifference))));const cursorSymbolBeforeFormat=inputValue.charAt(selectionStart),spliced=inputValue.replace(/:/g,"");return inputValue=`${spliced.substring(0,2).replace(/\D/g,"_")}:${spliced.substring(2,4).replace(/\D/g,"_")}`,cursorSymbolBeforeFormat!==inputValue.charAt(selectionStart)&&(moveCursor+=1),inputValue.replace(/\D+/g,"").length>0&&(isValidDigit(inputValue[0],0)||(inputValue=splice(inputValue,0,1,"_"),moveCursor-=1),("2"===inputValue[0]?isValidDigit(inputValue[1],2):isValidDigit(inputValue[1],1))||(inputValue=splice(inputValue,1,1,"_"),moveCursor-=1),isValidDigit(inputValue[3],3)||(inputValue=splice(inputValue,3,1,"_"),moveCursor-=1),isValidDigit(inputValue[4],4)||(inputValue=splice(inputValue,4,1,"_"),moveCursor-=1)),{...inputData,value:inputValue,selectionStart:selectionStart+moveCursor,selectionEnd:selectionStart+moveCursor}}export{MASK_VALUE,defaultTimeInputHandle};
//# sourceMappingURL=defaultTimeInputHandle.es.js.map
