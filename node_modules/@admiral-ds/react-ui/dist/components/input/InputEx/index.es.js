import{jsx,jsxs,Fragment}from"react/jsx-runtime";import{forwardRef,useRef,useState,useEffect,useLayoutEffect,Children}from"react";import styled,{css}from"styled-components";import{ReactComponent as SvgCloseOutline}from"../../../node_modules/@admiral-ds/icons/build/service/CloseOutline.svg.es.js";import{containerHeights,skeletonMixin}from"../Container.es.js";import{typography}from"../../Typography/typography.es.js";import"../../Typography/defaultTypographyMixin.es.js";import{changeInputData}from"../../common/dom/changeInputData.es.js";import{InputIconButton}from"../../InputIconButton.es.js";import{refSetter}from"../../common/utils/refSetter.es.js";import{mediumGroupBorderRadius}from"../../themes/borderRadius.es.js";import{SuffixSelect}from"./SuffixSelect.es.js";import{Tooltip}from"../../Tooltip/index.es.js";import{checkOverflow}from"../../common/utils/checkOverflow.es.js";import{InputBorderedDiv,BorderedDivStyles}from"../TextInput/index.es.js";const ieFixes=css`
  ::-ms-clear,
  ::-ms-reveal {
    display: none;
  }
`,Input=styled.input`
  outline: none;
  appearance: none;
  border-radius: inherit;

  box-sizing: border-box;
  flex: 1 1 auto;
  min-width: 10px;
  border: none;
  background: transparent;
  text-overflow: ellipsis;
  padding: 0;

  color: var(--admiral-color-Neutral_Neutral90, ${p=>p.theme.color["Neutral/Neutral 90"]});

  &&&:disabled {
    color: var(--admiral-color-Neutral_Neutral30, ${p=>p.theme.color["Neutral/Neutral 30"]});
  }

  ${props=>"s"===props.$dimension?typography["Body/Body 2 Long"]:typography["Body/Body 1 Long"]}
  &::placeholder {
    color: var(--admiral-color-Neutral_Neutral50, ${p=>p.theme.color["Neutral/Neutral 50"]});
  }

  &:disabled::placeholder {
    color: var(--admiral-color-Neutral_Neutral30, ${p=>p.theme.color["Neutral/Neutral 30"]});
  }

  [data-disable-copying] & {
    user-select: none;
    pointer-events: none;
  }

  &&&:user-invalid + ${InputBorderedDiv} {
    border: 1px solid var(--admiral-color-Error_Error60Main, ${p=>p.theme.color["Error/Error 60 Main"]});
  }

  &&&:user-invalid:hover:not(:disabled) + ${InputBorderedDiv} {
    border: 1px solid var(--admiral-color-Error_Error70, ${p=>p.theme.color["Error/Error 70"]});
  }

  &&&:user-invalid:focus:not(:disabled) + ${InputBorderedDiv} {
    border: 2px solid var(--admiral-color-Error_Error60Main, ${p=>p.theme.color["Error/Error 60 Main"]});
  }

  ${ieFixes}

  &&&:disabled {
    cursor: not-allowed;
  }
`,prefixsuffixMixin=css`
  ${props=>"s"===props.$dimension?typography["Body/Body 2 Long"]:typography["Body/Body 1 Long"]};
  color: ${({disabled,theme})=>disabled?`var(--admiral-color-Neutral_Neutral30, ${theme.color["Neutral/Neutral 30"]})`:`var(--admiral-color-Neutral_Neutral50, ${theme.color["Neutral/Neutral 50"]})`};
  white-space: nowrap;

  [data-disable-copying] & {
    cursor: default;
  }

  [data-read-only] & {
    pointer-events: none;
    user-select: none;
  }
`,PrefixContainer=styled.div`
  align-self: center;
  border-right: solid 1px var(--admiral-color-Neutral_Neutral20, ${p=>p.theme.color["Neutral/Neutral 20"]});
  padding-right: 8px;
  margin-right: 8px;
  ${prefixsuffixMixin}
`,SuffixContainer=styled.div`
  align-self: center;
  border-left: solid 1px var(--admiral-color-Neutral_Neutral20, ${p=>p.theme.color["Neutral/Neutral 20"]});
  padding-left: 8px;
  margin-left: 8px;
  ${prefixsuffixMixin}
`,IconPanel=styled.div`
  position: relative;
  display: flex;
  align-items: center;

  & > svg {
    border-radius: var(--admiral-border-radius-Medium, ${p=>mediumGroupBorderRadius(p.theme.shape)});
    display: block;
    width: ${props=>{switch(props.$dimension){case"xl":default:return 24;case"s":return 20}}}px;

    &:focus {
      outline: none;
    }

    &:focus-visible {
      outline-offset: 2px;
      outline: var(--admiral-color-Primary_Primary60Main, ${p=>p.theme.color["Primary/Primary 60 Main"]}) solid 2px;
    }
  }
`,IconPanelBefore=styled(IconPanel)`
  margin-right: 8px;
  & > *:not(:first-child) {
    margin-right: 8px;
  }
`,IconPanelAfter=styled(IconPanel)`
  margin-left: 8px;
  & > *:not(:first-child) {
    margin-left: 8px;
  }
`,preventDefault=e=>e.preventDefault(),Container=styled.div`
  position: relative;
  display: flex;
  align-items: stretch;
  overflow: hidden;
  border: none;
  border-radius: ${p=>p.$skeleton?0:`var(--admiral-border-radius-Medium, ${mediumGroupBorderRadius(p.theme.shape)})`};
  padding: 0 ${props=>{switch(props.$dimension){case"xl":default:return 16;case"s":return 12}}}px;
  background-color: var(--admiral-color-Neutral_Neutral00, ${p=>p.theme.color["Neutral/Neutral 00"]});

  &[data-read-only],
  &[data-disabled] {
    background-color: var(--admiral-color-Neutral_Neutral10, ${p=>p.theme.color["Neutral/Neutral 10"]});
  }

  ${containerHeights}
  ${({$skeleton})=>$skeleton&&skeletonMixin};
  ${BorderedDivStyles}
  ${({disabled})=>disabled?"cursor: not-allowed;":""}
`,InputEx=forwardRef(({dimension="m",menuWidth,displayClearIcon,status,containerRef=()=>null,alignDropRef,targetElement,icons,iconsBefore,iconsAfter,children,className,style,placeholder,prefixValue,renderPrefixValue=({value})=>value?String(value):value,prefixValueList,onPrefixValueChange,renderPrefixOption,suffixValue,renderSuffixValue=({value})=>value?String(value):value,suffixValueList,onSuffixValueChange,renderSuffixOption,skeleton=!1,dropContainerCssMixin,prefixDropContainerStyle,suffixDropContainerStyle,showTooltip=!0,...props},ref)=>{const innerContainerRef=useRef(null),targetNode=targetElement||alignDropRef?.current||innerContainerRef.current,menuDimension="xl"===dimension?"l":dimension,renderPrefix=prefixValueList?props=>jsx(SuffixSelect,{alignSelf:"flex-start",dimension:menuDimension,menuWidth:menuWidth||prefixDropContainerStyle?.menuWidth,menuMaxHeight:prefixDropContainerStyle?.menuMaxHeight,targetElement:targetNode,value:props.value||"",onChange:value=>onPrefixValueChange?.(value),options:prefixValueList,disabled:props.disabled,readOnly:props.readOnly,dropContainerCssMixin:prefixDropContainerStyle?.dropContainerCssMixin||dropContainerCssMixin,dropContainerClassName:prefixDropContainerStyle?.dropContainerClassName,dropContainerStyle:prefixDropContainerStyle?.dropContainerStyle,renderValue:renderPrefixValue,renderOption:renderPrefixOption}):renderPrefixValue,prefix=renderPrefix({value:prefixValue,disabled:props.disabled,readOnly:props.readOnly}),renderSuffix=suffixValueList?props=>jsx(SuffixSelect,{alignSelf:"flex-end",dimension:menuDimension,menuWidth:menuWidth||suffixDropContainerStyle?.menuWidth,menuMaxHeight:suffixDropContainerStyle?.menuMaxHeight,targetElement:targetNode,value:props.value||"",onChange:value=>onSuffixValueChange?.(value),options:suffixValueList,disabled:props.disabled,readOnly:props.readOnly,dropContainerCssMixin:suffixDropContainerStyle?.dropContainerCssMixin||dropContainerCssMixin,dropContainerClassName:suffixDropContainerStyle?.dropContainerClassName,dropContainerStyle:suffixDropContainerStyle?.dropContainerStyle,renderValue:renderSuffixValue,renderOption:renderSuffixOption}):renderSuffixValue,suffix=renderSuffix({value:suffixValue,disabled:props.disabled,readOnly:props.readOnly}),inputRef=useRef(null),[overflowActive,setOverflowActive]=useState(!1),[tooltipVisible,setTooltipVisible]=useState(!1),[innerValueState,setInnerValueState]=useState(props.defaultValue??void 0),innerValue=props.value??innerValueState;useEffect(()=>{checkOverflow(inputRef.current)?setOverflowActive(!0):setOverflowActive(!1)},[tooltipVisible,setOverflowActive]),useLayoutEffect(()=>{function show(){document.activeElement!==inputRef.current&&setTooltipVisible(!0)}function hide(){setTooltipVisible(!1)}const wrapper=innerContainerRef.current;if(wrapper)return wrapper.addEventListener("mouseenter",show),wrapper.addEventListener("mouseleave",hide),wrapper.addEventListener("mousedown",hide),()=>{wrapper.removeEventListener("mouseenter",show),wrapper.removeEventListener("mouseleave",hide),wrapper.removeEventListener("mousedown",hide)}},[setTooltipVisible]);const iconAfterArray=Children.toArray(iconsAfter||icons),iconBeforeArray=Children.toArray(iconsBefore);!props.readOnly&&displayClearIcon&&innerValue&&iconAfterArray.unshift(jsx(InputIconButton,{icon:SvgCloseOutline,onClick:()=>{inputRef.current&&changeInputData(inputRef.current,{value:""})},"aria-hidden":!0},"clear-icon"));const iconsAfterCount=iconAfterArray.length,iconsBeforeCount=iconBeforeArray.length;return jsxs(Fragment,{children:[jsxs(Container,{className,style,"data-disabled":!!props.disabled||void 0,$dimension:dimension,ref:refSetter(innerContainerRef,containerRef),"data-read-only":!!props.readOnly||void 0,"data-status":status,"data-disable-copying":!!props.disableCopying||void 0,onMouseDown:props.disableCopying?preventDefault:void 0,$skeleton:skeleton,$status:status,disabled:props.disabled,readOnly:props.readOnly,children:[!!prefix&&jsx(PrefixContainer,{$dimension:dimension,disabled:props.disabled,children:prefix}),iconsBeforeCount>0&&jsx(IconPanelBefore,{disabled:props.disabled,$dimension:dimension,children:iconBeforeArray}),jsx(Input,{ref:refSetter(ref,inputRef),...props,onChange:e=>{setInnerValueState(e.currentTarget.value),props.onChange?.(e)},placeholder,$iconsAfterCount:iconsAfterCount,$iconsBeforeCount:iconsBeforeCount,$dimension:dimension}),jsx(InputBorderedDiv,{$status:status,disabled:props.disabled||props.readOnly}),iconsAfterCount>0&&jsx(IconPanelAfter,{disabled:props.disabled,$dimension:dimension,children:iconAfterArray}),!!suffix&&jsx(SuffixContainer,{$dimension:dimension,disabled:props.disabled,children:suffix}),children]}),showTooltip&&tooltipVisible&&overflowActive&&jsx(Tooltip,{renderContent:()=>inputRef?.current?.value||"",targetElement:innerContainerRef.current})]})});InputEx.displayName="InputEx";export{InputEx};
//# sourceMappingURL=index.es.js.map
