/// <reference types="react" />
import type { RenderPropsType } from '../../../components/input/InputEx/SuffixSelect';
import type { MenuItemProps } from '../../../components/Menu/MenuItem';
export type MenuDimensions = 'l' | 'm' | 's';
export interface MenuProps<T> extends Omit<React.HTMLAttributes<HTMLDivElement>, 'onSelect'> {
    /** Размер Меню */
    dimension?: MenuDimensions;
    /** выбранная секция Menu */
    selected: T | null;
    /** Обработчик выбора item в меню */
    onSelect: (option: T) => void;
    /** Модель данных, с рендер-пропсами*/
    options: Array<T>;
    renderOption?: (props: RenderPropsType<T> & MenuItemProps) => React.ReactNode;
    /** Задает максимальную высоту меню */
    maxHeight?: string | number;
    /** Клик по меню не преводит к перемещению фокуса */
    preventFocusSteal?: boolean;
}
export declare const Menu: import("react").ForwardRefExoticComponent<MenuProps<import("react").ReactNode> & import("react").RefAttributes<HTMLDivElement>>;
//# sourceMappingURL=Menu.d.ts.mapd.ts.map