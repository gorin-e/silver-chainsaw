import{jsx}from"react/jsx-runtime";import{useRef,useCallback}from"react";import{keyboardKey}from"../common/keyboardKey.es.js";import{moveFocus,nextItem,previousItem}from"./utils.es.js";import{AccordionWrapper}from"./style.es.js";import"./Collapse.es.js";const Accordion=({children,dimension="l",iconPosition="right",hideTopDivider=!1,hideBottomDivider=!1,onKeyDown,...props})=>{const accordionRef=useRef(null),handleKeyDown=useCallback(e=>{let focusedOption=(accordionRef.current&&accordionRef.current.ownerDocument||document).activeElement;if(focusedOption.id.indexOf("accordion_title")>-1&&"div"===focusedOption.tagName.toLowerCase()){do{focusedOption=focusedOption?.parentNode}while(focusedOption.parentNode!==accordionRef.current);const code=keyboardKey.getCode(e);code===keyboardKey.ArrowDown?(moveFocus(accordionRef.current,focusedOption,nextItem),e.preventDefault()):code===keyboardKey.ArrowUp?(moveFocus(accordionRef.current,focusedOption,previousItem),e.preventDefault()):code===keyboardKey.Home?(e.preventDefault(),moveFocus(accordionRef.current,null,nextItem)):code===keyboardKey.End&&(e.preventDefault(),moveFocus(accordionRef.current,null,previousItem))}onKeyDown?.(e)},[]);return jsx(AccordionWrapper,{ref:accordionRef,"data-dimension":dimension,"data-icon":iconPosition,$hideTopDivider:hideTopDivider,$hideBottomDivider:hideBottomDivider,$dimension:dimension,onKeyDown:handleKeyDown,...props,children})};Accordion.displayName="Accordion";export{Accordion};
//# sourceMappingURL=index.es.js.map
