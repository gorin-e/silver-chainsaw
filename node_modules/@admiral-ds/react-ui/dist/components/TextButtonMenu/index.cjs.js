"use strict";var jsxRuntime=require("react/jsx-runtime"),e=require("react"),styled=require("styled-components"),index=require("../TextButton/index.cjs.js"),commonMixin=require("../TextButton/commonMixin.cjs.js"),index$1=require("../DropMenu/index.cjs.js"),splitDataAttributes=require("../common/utils/splitDataAttributes.cjs.js"),refSetter=require("../common/utils/refSetter.cjs.js");function _interopDefault(e){return e&&e.__esModule?e:{default:e}}const StyledTextButton=_interopDefault(styled).default(index.TextButton)`
  &:focus {
    color: ${({theme,appearance,$menuOpened})=>$menuOpened?"primary"===appearance?`var(--admiral-color-Primary_Primary60Main, ${theme.color["Primary/Primary 60 Main"]})`:`var(--admiral-color-Neutral_Neutral90, ${theme.color["Neutral/Neutral 90"]})`:"inherited"};
    ${commonMixin.IconContainer} {
      & *[fill^='#'] {
        fill: ${({theme,appearance,$menuOpened})=>$menuOpened?"primary"===appearance?`var(--admiral-color-Primary_Primary60Main, ${theme.color["Primary/Primary 60 Main"]})`:`var(--admiral-color-Neutral_Neutral50, ${theme.color["Neutral/Neutral 50"]})`:"inherited"};
      }
    }
  }
`,TextButtonMenu=e.forwardRef(({text,iconStart,dimension="m",appearance="primary",disabled=!1,loading=!1,items,disableSelectedOptionHighlight,selected,onSelectItem,active,onActivateItem,isVisible,onVisibilityChange,onClickOutside,renderTopPanel,renderBottomPanel,onForwardCycleApprove,onBackwardCycleApprove,onChange,onOpen,onClose,skeleton=!1,className="",menuWidth,menuMaxHeight,alignSelf,dropContainerCssMixin,dropContainerClassName,dropContainerStyle,...props},ref)=>{const dropMenuProps={...splitDataAttributes.passDropdownDataAttributes(props),isVisible,onVisibilityChange,onSelectItem,active,onActivateItem,onChange,onOpen,onClose,disableSelectedOptionHighlight,renderTopPanel,renderBottomPanel,onForwardCycleApprove,onBackwardCycleApprove,onClickOutside,menuWidth,menuMaxHeight,dropContainerCssMixin,dropContainerClassName,dropContainerStyle,alignSelf};return jsxRuntime.jsx(index$1.DropMenu,{...dropMenuProps,dimension,loading,items,selected,disabled,renderContentProp:({buttonRef,handleKeyDown,handleClick,statusIcon,menuState})=>jsxRuntime.jsx(StyledTextButton,{...props,text,iconStart,iconEnd:statusIcon,skeleton,ref:refSetter.refSetter(ref,buttonRef),dimension,appearance:"primary"===appearance?"primary":"secondary",displayRight:!0,disabled,loading,onKeyDown:handleKeyDown,onClick:handleClick,"aria-expanded":menuState,$menuOpened:menuState,className:className+" text-button-with-dropdown"})})});TextButtonMenu.displayName="TextButtonMenu",exports.TextButtonMenu=TextButtonMenu;
//# sourceMappingURL=index.cjs.js.map
