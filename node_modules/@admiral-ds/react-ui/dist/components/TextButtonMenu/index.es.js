import{jsx}from"react/jsx-runtime";import{forwardRef}from"react";import styled from"styled-components";import{TextButton}from"../TextButton/index.es.js";import{IconContainer}from"../TextButton/commonMixin.es.js";import{DropMenu}from"../DropMenu/index.es.js";import{passDropdownDataAttributes}from"../common/utils/splitDataAttributes.es.js";import{refSetter}from"../common/utils/refSetter.es.js";const StyledTextButton=styled(TextButton)`
  &:focus {
    color: ${({theme,appearance,$menuOpened})=>$menuOpened?"primary"===appearance?`var(--admiral-color-Primary_Primary60Main, ${theme.color["Primary/Primary 60 Main"]})`:`var(--admiral-color-Neutral_Neutral90, ${theme.color["Neutral/Neutral 90"]})`:"inherited"};
    ${IconContainer} {
      & *[fill^='#'] {
        fill: ${({theme,appearance,$menuOpened})=>$menuOpened?"primary"===appearance?`var(--admiral-color-Primary_Primary60Main, ${theme.color["Primary/Primary 60 Main"]})`:`var(--admiral-color-Neutral_Neutral50, ${theme.color["Neutral/Neutral 50"]})`:"inherited"};
      }
    }
  }
`,TextButtonMenu=forwardRef(({text,iconStart,dimension="m",appearance="primary",disabled=!1,loading=!1,items,disableSelectedOptionHighlight,selected,onSelectItem,active,onActivateItem,isVisible,onVisibilityChange,onClickOutside,renderTopPanel,renderBottomPanel,onForwardCycleApprove,onBackwardCycleApprove,onChange,onOpen,onClose,skeleton=!1,className="",menuWidth,menuMaxHeight,alignSelf,dropContainerCssMixin,dropContainerClassName,dropContainerStyle,...props},ref)=>{const dropMenuProps={...passDropdownDataAttributes(props),isVisible,onVisibilityChange,onSelectItem,active,onActivateItem,onChange,onOpen,onClose,disableSelectedOptionHighlight,renderTopPanel,renderBottomPanel,onForwardCycleApprove,onBackwardCycleApprove,onClickOutside,menuWidth,menuMaxHeight,dropContainerCssMixin,dropContainerClassName,dropContainerStyle,alignSelf};return jsx(DropMenu,{...dropMenuProps,dimension,loading,items,selected,disabled,renderContentProp:({buttonRef,handleKeyDown,handleClick,statusIcon,menuState})=>jsx(StyledTextButton,{...props,text,iconStart,iconEnd:statusIcon,skeleton,ref:refSetter(ref,buttonRef),dimension,appearance:"primary"===appearance?"primary":"secondary",displayRight:!0,disabled,loading,onKeyDown:handleKeyDown,onClick:handleClick,"aria-expanded":menuState,$menuOpened:menuState,className:className+" text-button-with-dropdown"})})});TextButtonMenu.displayName="TextButtonMenu";export{TextButtonMenu};
//# sourceMappingURL=index.es.js.map
