import type { HTMLAttributes } from 'react';
import * as React from 'react';
import type { TagVisualProps, TagSizeProps } from '../../components/Tag';
import type { DropMenuComponentProps, DropMenuStyleProps } from '../../components/DropMenu';
import type { MenuModelItemProps } from '../../components/Menu/MenuItem';
export interface TagOptionProps extends HTMLAttributes<HTMLButtonElement>, TagVisualProps {
    id: string;
    tagText: string;
}
export interface TagMenuProps extends Omit<HTMLAttributes<HTMLButtonElement>, 'children'>, TagSizeProps, Omit<DropMenuComponentProps, 'targetElement'>, DropMenuStyleProps {
    /** Опции выпадающего списка */
    items?: Array<MenuModelItemProps>;
    /**
     * @deprecated Помечено как deprecated в версии 3.4.0, будет удалено в версии 9.х.х.
     * Взамен используйте параметр items
     *
     * Опции выпадающего списка */
    options?: Array<TagOptionProps>;
    /** Выбранная опция */
    selected?: TagOptionProps;
    /**
     * @deprecated Помечено как deprecated в версии 3.2.0, будет удалено в версии 9.х.х.
     * Взамен используйте параметр onSelectItem
     *
     * Колбек на изменение выбранной опции */
    onSelectOption?: (id: string) => void;
    /**
     * @deprecated Помечено как deprecated в версии 3.2.0, будет удалено в версии 9.х.х.
     * Взамен используйте параметры isVisible и onVisibilityChange
     *
     * Колбек на открытие меню */
    onOpen?: () => void;
    /**
     * @deprecated Помечено как deprecated в версии 3.2.0, будет удалено в версии 9.х.х.
     * Взамен используйте параметры isVisible и onVisibilityChange
     *
     * Колбек на закрытие меню */
    onClose?: () => void;
}
export declare const TagMenu: React.ForwardRefExoticComponent<TagMenuProps & React.RefAttributes<HTMLButtonElement>>;
//# sourceMappingURL=index.d.ts.map