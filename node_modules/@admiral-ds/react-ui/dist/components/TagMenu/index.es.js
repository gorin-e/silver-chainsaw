import{jsx}from"react/jsx-runtime";import*as e from"react";import{createElement}from"react";import{Tag}from"../Tag/index.es.js";import{DropMenu}from"../DropMenu/index.es.js";import{MenuItem}from"../Menu/MenuItem.es.js";import{passDropdownDataAttributes}from"../common/utils/splitDataAttributes.es.js";import{refSetter}from"../common/utils/refSetter.es.js";const TagMenu=e.forwardRef(({dimension="m",width,onSelectOption,onOpen,onClose,items,options,disableSelectedOptionHighlight,selected,onSelectItem=()=>{},active,onActivateItem,isVisible,onVisibilityChange,onClickOutside,renderTopPanel,renderBottomPanel,onForwardCycleApprove,onBackwardCycleApprove,as,className="",alignSelf="flex-end",menuWidth,menuMaxHeight,dropContainerCssMixin,dropContainerClassName,dropContainerStyle,...props},ref)=>{const model=items||e.useMemo(()=>options?options.map(item=>({id:item.id,render:options=>createElement(MenuItem,{dimension:"m",...options,key:item.id},item.tagText)})):[],[options,dimension]),dropMenuProps={...passDropdownDataAttributes(props),isVisible,onVisibilityChange,active,onActivateItem,onOpen,onClose,disableSelectedOptionHighlight,renderTopPanel,renderBottomPanel,onForwardCycleApprove,onBackwardCycleApprove,onClickOutside,menuWidth,menuMaxHeight,dropContainerCssMixin,dropContainerClassName,dropContainerStyle,alignSelf};return jsx(DropMenu,{...dropMenuProps,dimension:"m",items:model,selected:selected?.id,onSelectItem:onSelectOption||onSelectItem,renderContentProp:({buttonRef,handleKeyDown,handleClick,statusIcon,menuState})=>jsx(Tag,{...props,ref:refSetter(ref,buttonRef),kind:selected?.kind,icon:selected?.icon,dimension,width,statusViaBackground:selected?.statusViaBackground,onKeyDown:handleKeyDown,onClick:handleClick,"aria-expanded":menuState,statusIcon,as,className:className+" tag-menu-with-dropdown",children:selected?.tagText})})});TagMenu.displayName="TagMenu";export{TagMenu};
//# sourceMappingURL=index.es.js.map
