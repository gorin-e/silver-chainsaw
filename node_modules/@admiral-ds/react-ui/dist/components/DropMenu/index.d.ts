import type { HTMLAttributes, KeyboardEvent, MouseEvent, ReactNode, Ref, RefObject } from 'react';
import type { MenuModelItemProps } from '../../components/Menu/MenuItem';
import type { DropContainerProps, DropContainerStyles } from '../../components/DropdownContainer';
import type { MenuDimensions as Dimension, MenuProps } from '../../components/Menu';
export interface RenderContentProps {
    /** Ref на отрендеренный элемент */
    buttonRef: Ref<HTMLElement>;
    /** Состояние меню */
    menuState: boolean;
    /** Обработчик нажатия клавиш */
    handleKeyDown?: (e: KeyboardEvent<HTMLElement>) => void;
    /** Обработчик клика мыши */
    handleClick?: (e: MouseEvent<HTMLElement>) => void;
    /** Иконка для отображения статуса меню */
    statusIcon?: ReactNode;
    /** Доступность кнопки */
    disabled?: boolean;
}
export interface DropMenuStyleProps extends DropContainerStyles {
    /**  Ширина меню */
    menuWidth?: string;
    /** Задает максимальную высоту меню */
    menuMaxHeight?: string | number;
}
export interface DropMenuComponentProps extends Pick<DropMenuProps, 'isVisible' | 'onVisibilityChange' | 'active' | 'onActivateItem' | 'onSelectItem' | 'disableSelectedOptionHighlight' | 'renderTopPanel' | 'renderBottomPanel' | 'onForwardCycleApprove' | 'onBackwardCycleApprove' | 'targetElement'>, DropContainerProps {
}
export interface DropMenuProps extends Pick<MenuProps, 'active' | 'onActivateItem' | 'onSelectItem' | 'multiSelection' | 'disableSelectedOptionHighlight' | 'renderTopPanel' | 'renderBottomPanel' | 'onForwardCycleApprove' | 'onBackwardCycleApprove' | 'virtualScroll'>, DropContainerProps, Omit<HTMLAttributes<HTMLElement>, 'onChange'>, DropMenuStyleProps {
    /** Размер компонента */
    dimension?: Dimension;
    /** Состояние загрузки */
    loading?: boolean;
    /** Опции выпадающего списка */
    items: Array<MenuModelItemProps>;
    /** Выбранная опция */
    selected?: string;
    /**
     * @deprecated Помечено как deprecated в версии 3.2.0, будет удалено в 9.x.x версии.
     * Взамен используйте onSelectItem
     *
     * Колбек на изменение выбранной опции
     **/
    onChange?: (id: string) => void;
    /**
     * @deprecated Помечено как deprecated в версии 3.2.0, будет удалено в 9.x.x версии.
     * Взамен используйте isVisible and onVisibilityChange
     *
     * Колбек на открытие меню
     **/
    onOpen?: () => void;
    /**
     * @deprecated Помечено как deprecated в версии 3.2.0, будет удалено в 9.x.x версии.
     * Взамен используйте isVisible and onVisibilityChange
     *
     * Колбек на закрытие меню
     **/
    onClose?: () => void;
    /** Отключение компонента */
    disabled?: boolean;
    /**
     * @deprecated Помечено как deprecated в версии 8.8.0, будет удалено в 10.x.x версии.
     * Взамен используйте параметр targetElement.
     *
     * Компонент, относительно которого необходимо выравнивать выпадающее меню
     **/
    alignMenuRef?: RefObject<HTMLElement>;
    /** Элемент, относительно которого позиционируется выпадающее меню */
    targetElement?: Element | null;
    /** Компонент, для которого необходимо Menu */
    renderContentProp: (options: RenderContentProps) => ReactNode;
    /** Видимость выпадающего меню */
    isVisible?: boolean;
    /** Колбек на изменение видимости меню */
    onVisibilityChange?: (isVisible: boolean) => void;
}
export declare const DropMenu: import("react").ForwardRefExoticComponent<DropMenuProps & import("react").RefAttributes<HTMLDivElement>>;
//# sourceMappingURL=index.d.ts.map