"use strict";var e=require("react"),jsxRuntime=require("react/jsx-runtime"),styled=require("styled-components"),getTextHighlightMeta=require("../common/utils/getTextHighlightMeta.cjs.js"),MenuItem=require("./MenuItem.cjs.js"),uid=require("../common/uid.cjs.js");function _interopDefault(e){return e&&e.__esModule?e:{default:e}}var styled__default=_interopDefault(styled);const MenuActionsPanelDiv=styled__default.default.div`
  padding: ${p=>"s"===p.$dimension?"10px 12px":"12px 16px"};

  ${p=>p.$menuActionsPanelCssMixin}
`,HighlightText=styled__default.default.span`
  color: var(--admiral-color-Primary_Primary60Main, ${p=>p.theme.color["Primary/Primary 60 Main"]});
`,TextWrapper=styled__default.default.div`
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
`,StyledMenuItem=styled__default.default(MenuItem.MenuItem)`
  color: var(--admiral-color-Neutral_Neutral50, ${p=>p.theme.color["Neutral/Neutral 50"]});
  pointer-events: none;

  &&[data-disabled='true'] {
    background-color: var(--admiral-color-Special_ElevatedBG, ${p=>p.theme.color["Special/Elevated BG"]});
    color: var(--admiral-color-Neutral_Neutral50, ${p=>p.theme.color["Neutral/Neutral 50"]});
    && *[fill^='#'] {
      fill: var(--admiral-color-Neutral_Neutral50, ${p=>p.theme.color["Neutral/Neutral 50"]});
    }
  }
`;exports.MenuActionsPanel=({dimension,menuActionsPanelCssMixin,...props})=>jsxRuntime.jsx(MenuActionsPanelDiv,{...props,$dimension:dimension,$menuActionsPanelCssMixin:menuActionsPanelCssMixin}),exports.getHighlightedFilteredOptions=function(options,searchValue="",emptyMessage,dimension,highlightFunction=getTextHighlightMeta.getTextHighlightMeta){const model=[];if(options.forEach(option=>{const{shouldHighlight,parts,chunks}=highlightFunction(option.label,searchValue,"wholly"),itemValue=shouldHighlight?parts.map((part,i)=>chunks.includes(part.toLowerCase())?jsxRuntime.jsx(HighlightText,{children:part},i):part):searchValue?null:option.label;itemValue&&model.push({id:option.id,render:options=>e.createElement(MenuItem.MenuItem,{dimension,...options,key:option.id},jsxRuntime.jsx(TextWrapper,{children:itemValue}))})}),0===model.length){const id=uid.uid();model.push({id,render:options=>e.createElement(StyledMenuItem,{dimension,...options,key:id},emptyMessage),disabled:!0})}return model};
//# sourceMappingURL=MenuActionsPanel.cjs.js.map
