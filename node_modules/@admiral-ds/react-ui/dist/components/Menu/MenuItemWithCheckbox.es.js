import{jsx}from"react/jsx-runtime";import styled,{css}from"styled-components";import{MenuItem}from"./MenuItem.es.js";import{CheckboxField}from"../form/CheckboxField/index.es.js";import{forwardRef}from"react";const checkboxTreeToMap=(checkboxTree,level=0,dependencies)=>checkboxTree.reduce((acc,item)=>{const key=item.id,currentNode={level,node:item};if(acc.set(key,currentNode),dependencies&&!item.children&&dependencies.forEach(dependency=>dependency.push(key)),item.children){const allDependencies=dependencies?[...dependencies]:[],itemDependencies=[];currentNode.dependencies=itemDependencies,acc.set(key,currentNode),allDependencies.push(itemDependencies);const map=checkboxTreeToMap(item.children,level+1,allDependencies);return new Map([...acc,...map])}return acc},new Map),paddingLeft=css`
  padding-left: ${({dimension,$level=0})=>"s"===dimension?12+28*$level:16+32*$level}px;
`,CheckboxGroupMenuItem=styled(MenuItem)`
  ${paddingLeft}
`,MenuItemWithCheckbox=forwardRef(({checked,indeterminate,checkboxRef,level=0,children,dimension="l",...props},ref)=>jsx(CheckboxGroupMenuItem,{dimension,$level:level,ref,...props,children:jsx(CheckboxField,{dimension:"s"===dimension?"s":"m",checked:!!checked,indeterminate,hovered:props.hovered,disabled:props.disabled,readOnly:props.readOnly,ref:checkboxRef,onChange:()=>!1,children})}));export{MenuItemWithCheckbox,checkboxTreeToMap};
//# sourceMappingURL=MenuItemWithCheckbox.es.js.map
