import type { MenuModelItemProps } from '../../index';
export type RenderDirection = 'left' | 'right';
export type SubMenuAlign = 'left' | 'leftBottom' | 'right' | 'rightBottom';
export type SubMenuPosition = {
    position: SubMenuAlign;
    bottomOffset?: number;
};
/**
 * функция вычисления позиции SubMenu
 *
 * @param anchorElement - элемент, относительно которого позиционируется SubMenu
 * @param containerElement - контейнер, в котором отрисовывается SubMenu
 * @param renderDirection - сторона от родительского меню, в которой по умолчанию
 * будет появляться дочернее меню при наличии места
 * @return SubMenuPosition - объект, содержащий данные о позиции subMenu и отступ снизу
 * */
export declare function getPosition(anchorElement: HTMLElement, containerElement: HTMLElement, renderDirection: RenderDirection): SubMenuPosition;
export declare const findModelItem: (items: Array<MenuModelItemProps>, id: string) => MenuModelItemProps | undefined;
export declare const hasSelectedChildren: (item: MenuModelItemProps, selected: Array<string>) => boolean;
export declare const valueToArray: (value: string | string[]) => string[];
//# sourceMappingURL=utils.d.ts.map