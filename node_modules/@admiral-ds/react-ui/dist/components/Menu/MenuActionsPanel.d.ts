import type { ReactNode } from 'react';
import type { css } from 'styled-components';
import type { MenuDimensions } from '../../components/Menu/index';
import type { MenuModelItemProps } from '../../components/Menu/MenuItem';
import type { ItemDimension } from '../../components/Menu/menuItemMixins';
export interface MenuActionsPanelProps {
    dimension: MenuDimensions;
    menuActionsPanelCssMixin?: ReturnType<typeof css>;
    children: ReactNode;
}
export declare const MenuActionsPanel: ({ dimension, menuActionsPanelCssMixin, ...props }: MenuActionsPanelProps) => import("react/jsx-runtime").JSX.Element;
export interface HighlightedFilteredOptionProps {
    id: string;
    label: string;
}
export declare function getHighlightedFilteredOptions(options: HighlightedFilteredOptionProps[], searchValue: string | undefined, emptyMessage: React.ReactNode, dimension?: ItemDimension, highlightFunction?: (text?: string, highlight?: string, highlightFormat?: import("../../components/common/utils/getTextHighlightMeta").HighlightFormat) => {
    shouldHighlight: boolean;
    parts: string[];
    chunks: string[];
}): MenuModelItemProps[];
//# sourceMappingURL=MenuActionsPanel.d.ts.map