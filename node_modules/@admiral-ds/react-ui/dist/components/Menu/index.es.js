import{jsxs,jsx}from"react/jsx-runtime";import{forwardRef,useState,useRef,useEffect,useLayoutEffect}from"react";import styled,{css}from"styled-components";import{ScrollContainer}from"../Scrollbar/index.es.js";import{MenuItem}from"./MenuItem.es.js";import{keyboardKey}from"../common/keyboardKey.es.js";import{VirtualBody}from"./VirtualBody.es.js";import{refSetter}from"../common/utils/refSetter.es.js";import{SubMenuContainer}from"./SubMenuContainer.es.js";import{useDropdown}from"../DropdownProvider.es.js";import{valueToArray,findModelItem,hasSelectedChildren}from"./utils.es.js";import{passMenuDataAttributes}from"../common/utils/splitDataAttributes.es.js";const getItemHeight=dimension=>{switch(dimension){case"l":default:return 48;case"m":return 40;case"s":return 32}},menuListHeights=css`
  max-height: ${({$dimension,$rowCount})=>{return`min(calc(100vh - 16px), ${rowCount=$rowCount,dimension=$dimension,getItemHeight(dimension)*rowCount+16}px)`;var rowCount,dimension}};
`,Wrapper=styled.div`
  overflow: hidden;
  position: relative;

  padding: 0;
  ${p=>p.$hasTopPanel?"padding-top: 8px":""};
  ${p=>p.$hasBottomPanel?"padding-bottom: 8px":""};
  box-sizing: border-box;
  display: flex;

  flex-direction: column;
  align-items: stretch;
  pointer-events: initial;
  background-color: var(--admiral-color-Special_ElevatedBG, ${p=>p.theme.color["Special/Elevated BG"]});
  max-width: calc(100vw - 32px);
  border-color: transparent;
  &:focus-visible {
    border: 0;
    outline: none;
  }
`,StyledScrollContainer=styled(ScrollContainer)`
  position: relative;
  ${p=>p.$hasTopPanel?"":"padding-top: 8px"};
  ${p=>p.$hasBottomPanel?"":"padding-bottom: 8px"};
  margin: 0;
  appearance: none;
  flex: 1 1 auto;
  border: none;
  box-sizing: border-box;
  ${menuListHeights};
  ${p=>p.$maxHeight?`max-height: ${p.$maxHeight}`:""};
`,Menu=forwardRef(({model,defaultSelected,selected,preselected,active,onPreselectItem,onSelectItem,onDeselectItem,onActivateItem,renderTopPanel,renderBottomPanel,dimension="l",multiSelection=!1,disableSelectedOptionHighlight=!1,onForwardCycleApprove,onBackwardCycleApprove,containerRef,virtualScroll,rowCount=6,parentMenuRef,onCloseQuery,defaultIsActive=!0,subMenuRenderDirection,preventFocusSteal,maxHeight,preselectedModeActive=!1,onMenuKeyDown,disableSelectionOnSpace,disableSelectionOnEnter,...props},ref)=>{const findNextId=currentId=>{const currentIndex=currentId?model.findIndex(item=>item.id===currentId):-1;let nextIndex=currentIndex<model.length-1?currentIndex+1:0,finishCycle=!1;for(;(model[nextIndex].disabled||model[nextIndex].readOnly)&&!finishCycle;)nextIndex=nextIndex<model.length-1?nextIndex+1:0,finishCycle=-1===currentIndex?0===nextIndex:nextIndex===currentIndex;nextIndex=!(currentIndex>-1&&nextIndex<currentIndex)||!onForwardCycleApprove||onForwardCycleApprove()?nextIndex:currentIndex;return model[nextIndex].disabled||model[nextIndex].readOnly?void 0:model[nextIndex].id},uncontrolledActiveValue=model.length>0?findNextId():void 0,[selectedState,setSelectedState]=useState(defaultSelected?valueToArray(defaultSelected):[]),[activeState,setActiveState]=useState(uncontrolledActiveValue),[preselectedState,setPreselectedState]=useState(uncontrolledActiveValue),wrapperRef=useRef(null),subMenuRef=useRef(null),[activeItemElement,setActiveItemElement]=useState(null),[submenuVisible,setSubmenuVisible]=useState(!1),lastScrollEvent=useRef();useEffect(()=>{setActiveState(uncontrolledActiveValue)},[model]);const innerSelected=disableSelectedOptionHighlight?[]:void 0===selected?selectedState:valueToArray(selected),activeId=void 0===active?activeState:active,preselectedId=preselectedModeActive?void 0===preselected?preselectedState:preselected:void 0,scrollContainerRef=useRef(null),verticalScrollAriaRef=useRef(null),hasTopPanel=!!renderTopPanel,hasBottomPanel=!!renderBottomPanel,activateItem=id=>{activeId!==id&&setActiveState(id),onActivateItem?.(id)},preselectItem=id=>{preselectedId!==id&&setPreselectedState(id),onPreselectItem?.(id)},handleClickItem=id=>{const item=findModelItem(model,id);if(item&&!item.disabled&&!item.readOnly){const selectedIndex=selectedState.findIndex(itemId=>itemId===id);multiSelection?selectedIndex>-1?(setSelectedState(selectedState.splice(selectedIndex,1)),onDeselectItem?.(id)):(setSelectedState([...selectedState,id]),onSelectItem?.(id)):(-1===selectedIndex&&setSelectedState([id]),onSelectItem?.(id))}},{currentActiveMenu,activateMenu,deactivateMenu}=useDropdown(wrapperRef);useEffect(()=>{function handleKeyDown(e){if(currentActiveMenu?.current!==wrapperRef.current)return;switch(keyboardKey.getCode(e)){case keyboardKey[" "]:if(disableSelectionOnSpace)break;preselectedModeActive&&preselectedId?handleClickItem(preselectedId):activeId&&handleClickItem(activeId),e.preventDefault();break;case keyboardKey.Enter:if(disableSelectionOnEnter)break;preselectedModeActive&&preselectedId?handleClickItem(preselectedId):activeId&&handleClickItem(activeId),e.preventDefault();break;case keyboardKey.ArrowDown:{const nextId=findNextId(preselectedModeActive&&preselectedId||activeId);preselectedModeActive?preselectItem(nextId):activateItem(nextId),e.preventDefault();break}case keyboardKey.ArrowUp:{const previousId=(currentId=>{const currentIndex=currentId?model.findIndex(item=>item.id===currentId):-1;let prevIndex=currentIndex>0?currentIndex-1:model.length-1,finishCycle=!1;for(;(model[prevIndex].disabled||model[prevIndex].readOnly)&&!finishCycle;)prevIndex=prevIndex>0?prevIndex-1:model.length-1,finishCycle=-1===currentIndex?0===prevIndex:prevIndex===currentIndex;return prevIndex=currentIndex>-1&&prevIndex>currentIndex&&onBackwardCycleApprove&&!onBackwardCycleApprove()?currentIndex:prevIndex,model[prevIndex].disabled||model[prevIndex].readOnly?void 0:model[prevIndex].id})(preselectedModeActive&&preselectedId||activeId);preselectedModeActive?preselectItem(previousId):activateItem(previousId),e.preventDefault();break}case keyboardKey.ArrowRight:{const currentId=preselectedModeActive&&preselectedId||activeId,item=model.find(item=>item.id===currentId);!item||item.disabled||item.readOnly||!item.subItems||submenuVisible||setSubmenuVisible(!0),subMenuRef&&subMenuRef.current&&activateMenu?.(subMenuRef);break}case keyboardKey.ArrowLeft:parentMenuRef&&parentMenuRef.current&&onCloseQuery?.();break;default:onMenuKeyDown?.(e)}}return document.addEventListener("keydown",handleKeyDown),()=>{document.removeEventListener("keydown",handleKeyDown)}},[active,activeId,activeState,currentActiveMenu,preselectedId,disableSelectionOnSpace,disableSelectionOnEnter]),useEffect(()=>(defaultIsActive&&activateMenu?.(wrapperRef),()=>{defaultIsActive&&currentActiveMenu===wrapperRef&&deactivateMenu?.(wrapperRef)}),[defaultIsActive]);const handleSubMenuClose=()=>{setSubmenuVisible(!1),activateMenu?.(wrapperRef)},renderItem=(item,index)=>{const{id,subItems,render,...itemProps}=item,hasSubmenu=!!subItems&&subItems.length>0,hovered=activeId===id,selected=innerSelected.includes(id)||hasSelectedChildren(item,innerSelected),renderProps={hovered,preselected:void 0!==preselectedId?preselectedId===id:void 0,selected,onLeave:e=>{const relTarget=e.relatedTarget;relTarget&&Object.hasOwn(relTarget,"nodeName")&&!subMenuRef.current?.contains(relTarget)&&!verticalScrollAriaRef.current?.contains(relTarget)&&setSubmenuVisible(!1)},onHover:e=>{activateItem(id),setSubmenuVisible(hasSubmenu),setActiveItemElement(e.currentTarget)},onMouseDown:preventFocusSteal?e=>e.preventDefault():void 0,onClick:()=>handleClickItem(id),hasSubmenu,disabled:itemProps.disabled,...itemProps};return"function"==typeof render?render({containerRef,...renderProps}):jsx(MenuItem,{...renderProps,children:render},`${item.id}-${index}`)},previousActive=useRef(),previousActiveState=useRef(),previousPreselected=useRef(),previousPreselectedState=useRef();useLayoutEffect(()=>{setTimeout(()=>{let itemToScroll;if(active&&previousActive.current!==active||previousActiveState.current!==activeState?itemToScroll=scrollContainerRef.current?.querySelector('[data-hovered="true"]'):(preselected&&previousPreselected.current!==preselected||previousPreselectedState.current!==preselectedState)&&(itemToScroll=scrollContainerRef.current?.querySelector('[data-preselected="true"]')),itemToScroll){const scrollEventTime=Date.now(),lastEventTime=lastScrollEvent.current;itemToScroll?.scrollIntoView({behavior:!lastEventTime||scrollEventTime-lastEventTime<150?"auto":"smooth",inline:"center",block:"nearest"}),lastScrollEvent.current=scrollEventTime,previousActive.current=active,previousActiveState.current=activeState,previousPreselected.current=preselected,previousPreselectedState.current=preselectedState}},0)},[active,activeState,preselected,preselectedState,model]);const menuProps=passMenuDataAttributes(props);return useEffect(()=>{if(!activeItemElement||!scrollContainerRef.current)return;const options={root:scrollContainerRef.current,rootMargin:"0px",threshold:.5},observer=new IntersectionObserver(entries=>{entries.forEach(entry=>{setSubmenuVisible(!(entry.intersectionRatio<options.threshold))})},options);return observer.observe(activeItemElement),()=>observer.disconnect()},[activeItemElement]),jsxs(Wrapper,{ref:refSetter(wrapperRef,ref),$dimension:dimension,$hasTopPanel:hasTopPanel,$hasBottomPanel:hasBottomPanel,onMouseEnter:e=>{currentActiveMenu!==wrapperRef&&activateMenu?.(wrapperRef),props.onMouseEnter?.(e)},onMouseLeave:e=>{activateItem(void 0),props.onMouseLeave?.(e)},onFocus:e=>{currentActiveMenu!==wrapperRef&&activateMenu?.(wrapperRef),props.onFocus?.(e)},onBlur:e=>{currentActiveMenu===wrapperRef&&deactivateMenu?.(wrapperRef),props.onBlur?.(e)},...props,children:[hasTopPanel&&renderTopPanel({dimension}),jsx(StyledScrollContainer,{$dimension:dimension,$rowCount:rowCount,$hasTopPanel:hasTopPanel,$hasBottomPanel:hasBottomPanel,$maxHeight:maxHeight,...menuProps,verticalScrollProps:{ref:verticalScrollAriaRef},contentBlockProps:{ref:scrollContainerRef},children:virtualScroll?(()=>{if(!virtualScroll)return null;const itemHeight="auto"===virtualScroll.itemHeight?getItemHeight(dimension):virtualScroll.itemHeight;return jsx(VirtualBody,{scrollContainerRef,itemHeight,model,rowCount,activeId,selected:innerSelected,onRenderItem:renderItem})})():model.map((item,index)=>renderItem({dimension,...item},index))}),submenuVisible&&activeItemElement&&jsx(SubMenuContainer,{targetElement:activeItemElement,defaultRenderDirection:subMenuRenderDirection,onClickOutside:parentMenuRef?void 0:()=>{setSubmenuVisible(!1)},children:(()=>{const activeItem=model.find(item=>item.id===activeId);return activeItem&&activeItem.subItems&&activeItem.subItems.length>0&&jsx(Menu,{ref:subMenuRef,dimension,parentMenuRef:wrapperRef,model:activeItem.subItems,subMenuRenderDirection,onCloseQuery:handleSubMenuClose,selected:innerSelected,onSelectItem:id=>handleClickItem(id),virtualScroll,preventFocusSteal:!0})})()}),hasBottomPanel&&renderBottomPanel({dimension})]})});Menu.displayName="Menu";export{Menu,getItemHeight};
//# sourceMappingURL=index.es.js.map
