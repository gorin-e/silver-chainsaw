import{jsx,jsxs}from"react/jsx-runtime";import styled from"styled-components";import{DropdownContext,useDropdown,useDropdownsClickOutside}from"../DropdownProvider.es.js";import{PositionInPortal}from"../PositionInPortal.es.js";import{useClickOutside}from"../common/hooks/useClickOutside.es.js";import{parseShadow}from"../common/utils/parseShadowFromTheme.es.js";import{mediumGroupBorderRadius}from"../themes/borderRadius.es.js";import{throttle}from"../common/utils/throttle.es.js";import{getPosition}from"./utils.es.js";import{useContext,useRef,useState,useLayoutEffect}from"react";const AnchorWrapper=styled.div`
  display: inline-block;
  position: relative;
  cursor: pointer;
`,Portal=styled(PositionInPortal)`
  display: flex;
  flex-wrap: nowrap;
  ${({$flexDirection})=>$flexDirection?`flex-direction: ${$flexDirection};`:"flex-direction: column;"}
`,FakeTarget=styled.div`
  pointer-events: none;
  height: 100%;
  width: 100%;
  flex: 0 0 auto;
`,SubMenuWrapper=styled.div`
  position: relative;
  align-self: flex-start;
`,InnerContainer=styled.div`
  background-color: var(--admiral-color-Special_ElevatedBG, ${p=>p.theme.color["Special/Elevated BG"]});
  color: var(--admiral-color-Neutral_Neutral90, ${p=>p.theme.color["Neutral/Neutral 90"]});
  box-shadow: var(--admiral-box-shadow-Shadow08, ${p=>parseShadow(p.theme.shadow["Shadow 08"])});
  border-radius: var(--admiral-border-radius-Medium, ${p=>mediumGroupBorderRadius(p.theme.shape)});
  overflow: hidden;
  box-sizing: border-box;
`,SubMenuContainer=({targetElement,children,onClickOutside,defaultRenderDirection="right",...props})=>{const{rootRef}=useContext(DropdownContext),wrapperRef=useRef(null),[recalculation,startRecalculation]=useState(null),[portalFlexDirection,setPortalFlexDirection]=useState("row");useLayoutEffect(()=>{const[listener,freeResources]=throttle(()=>{startRecalculation({})},100);return addEventListener("resize",listener),addEventListener("scroll",listener),()=>{removeEventListener("resize",listener),removeEventListener("scroll",listener),freeResources()}});const{addDropdown,removeDropdown,dropdowns}=useDropdown(wrapperRef);useLayoutEffect(()=>(addDropdown?.(wrapperRef),()=>{removeDropdown?.(wrapperRef)}),[]);return useClickOutside([wrapperRef],e=>{targetElement&&!targetElement.contains(e.target)&&useDropdownsClickOutside(e,dropdowns)&&onClickOutside?.(e)}),useLayoutEffect(()=>{const wrapperElement=wrapperRef.current;if(targetElement&&wrapperElement){const{position,bottomOffset=0}=getPosition(targetElement,wrapperElement,defaultRenderDirection);switch(position){case"right":setPortalFlexDirection("row"),wrapperElement.style.bottom=`${bottomOffset}px`;break;case"left":setPortalFlexDirection("row-reverse"),wrapperElement.style.bottom=`${bottomOffset}px`;break;case"rightBottom":default:setPortalFlexDirection("row"),wrapperElement.style.bottom="8px";break;case"leftBottom":setPortalFlexDirection("row-reverse"),wrapperElement.style.bottom="8px"}}},[targetElement,recalculation]),targetElement&&jsx(AnchorWrapper,{children:jsxs(Portal,{targetElement,rootRef,$flexDirection:portalFlexDirection,fullContainerWidth:!1,children:[jsx(FakeTarget,{}),jsx(SubMenuWrapper,{ref:wrapperRef,...props,children:jsx(InnerContainer,{children})})]})})};SubMenuContainer.displayName="SubMenu";export{AnchorWrapper,FakeTarget,Portal,SubMenuContainer};
//# sourceMappingURL=SubMenuContainer.es.js.map
