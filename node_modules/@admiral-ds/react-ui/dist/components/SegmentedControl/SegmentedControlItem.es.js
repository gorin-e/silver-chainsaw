import{jsxs,jsx}from"react/jsx-runtime";import{forwardRef,Children}from"react";import{SpinnerIcon}from"../Spinner/SpinnerIcon.es.js";import{Label,Input,Button,SpinnerContainer,AdditionalPadding,ButtonContent}from"./style.es.js";import{ButtonIconContainer}from"./mixins.es.js";const SegmentedControlItem=forwardRef(({type="radio",checked,defaultChecked,value,name,onChange,disabled,displayAsSquare=!1,loading=!1,iconStart,iconEnd,buttonCssMixin,children,...props},ref)=>{const hasIconStart=!!iconStart,hasIconEnd=!!iconEnd,additionalPadding=(displayAsSquare||hasIconStart?0:2)+(displayAsSquare||hasIconEnd?0:2);return jsxs(Label,{...props,children:[jsx(Input,{ref,type,checked,defaultChecked,value,name,onChange,disabled:disabled||loading}),jsxs(Button,{$loading:loading,$displayAsSquare:displayAsSquare,$buttonCssMixin:buttonCssMixin,children:[loading&&jsx(SpinnerContainer,{children:jsx(SpinnerIcon,{})}),!displayAsSquare&&!hasIconStart&&jsx(AdditionalPadding,{}),jsxs(ButtonContent,{$addPadding:additionalPadding,children:[hasIconStart?jsx(ButtonIconContainer,{children:iconStart}):null,Children.toArray(children).map((child,index)=>"string"==typeof child?jsx("div",{children:child},child+index):child),hasIconEnd?jsx(ButtonIconContainer,{children:iconEnd}):null]}),!displayAsSquare&&!hasIconEnd&&jsx(AdditionalPadding,{})]})]})});SegmentedControlItem.displayName="SegmentedControlItem";export{SegmentedControlItem};
//# sourceMappingURL=SegmentedControlItem.es.js.map
