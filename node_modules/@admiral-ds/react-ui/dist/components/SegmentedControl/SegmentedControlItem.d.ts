import type { LabelHTMLAttributes, ReactNode, ChangeEventHandler } from 'react';
import type { css } from 'styled-components';
export interface SegmentedControlItemProps extends Omit<LabelHTMLAttributes<HTMLLabelElement>, 'onChange'> {
    /** Тип кнопки */
    type?: 'radio' | 'checkbox';
    /** Состояние кнопки, выбрана или нет */
    checked?: boolean;
    /** Состояние кнопки, выбрана или нет по умолчанию */
    defaultChecked?: boolean;
    /** Значение кнопки */
    value?: string | readonly string[] | number;
    /** Атрибут name кнопки */
    name?: string;
    /** Колбек на изменение состояния кнопки (выбрана или нет) */
    onChange?: ChangeEventHandler<HTMLInputElement>;
    /** Кнопка в состоянии disabled */
    disabled?: boolean;
    /** Отображать кнопку квадратной */
    displayAsSquare?: boolean;
    /** Состояние загрузки */
    loading?: boolean;
    /** Иконка перед текстом кнопки */
    iconStart?: ReactNode;
    /** Иконка после текста кнопки */
    iconEnd?: ReactNode;
    /** Позволяет добавлять миксин для кнопок, созданный с помощью styled css  */
    buttonCssMixin?: ReturnType<typeof css>;
}
export declare const SegmentedControlItem: import("react").ForwardRefExoticComponent<SegmentedControlItemProps & import("react").RefAttributes<HTMLInputElement>>;
//# sourceMappingURL=SegmentedControlItem.d.ts.map