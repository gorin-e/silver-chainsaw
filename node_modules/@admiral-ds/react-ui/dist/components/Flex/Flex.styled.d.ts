/// <reference types="react" />
import type { FlexAlignItems, FlexDirection, FlexWrap } from './Flex.types';
export declare const withBoxSize: import("styled-components").RuleSet<object>;
export declare const ContainerDiv: import("styled-components/dist/types").IStyledComponentBase<"web", import("styled-components/dist/types").Substitute<import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLDivElement>, HTMLDivElement>, {
    $rowGap?: number | undefined;
    $columnGap?: number | undefined;
}>> & string;
export declare const RowDiv: import("styled-components/dist/types").IStyledComponentBase<"web", import("styled-components/dist/types").Substitute<import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLDivElement>, HTMLDivElement>, {
    $rowGap?: number | undefined;
    $columnGap?: number | undefined;
    $wrap?: FlexWrap | undefined;
    $direction?: FlexDirection | undefined;
    $alignItems?: FlexAlignItems | undefined;
}>> & string;
export declare const CellDiv: import("styled-components/dist/types").IStyledComponentBase<"web", import("styled-components/dist/types").Substitute<import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLDivElement>, HTMLDivElement>, {
    $col?: number | undefined;
    $columnGap?: number | undefined;
}>> & string;
export declare const GrowCellDiv: import("styled-components/dist/types").IStyledComponentBase<"web", import("styled-components/dist/types").Substitute<import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLDivElement>, HTMLDivElement>, {
    $grow?: number | undefined;
}>> & string;
//# sourceMappingURL=Flex.styled.d.ts.map