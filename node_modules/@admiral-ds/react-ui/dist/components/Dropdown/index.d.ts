import * as React from 'react';
import type { css } from 'styled-components';
export interface DropdownProps extends Omit<React.HTMLAttributes<HTMLDivElement>, 'onKeyDown'> {
    targetRef: React.RefObject<HTMLElement>;
    /**
     *  Позволяет обработать событие при клике вне компонента
     */
    onClickOutside?: (e: Event) => void;
    /**
     *  Позволяет обработать событие при нажатии клавиши
     */
    onKeyDown?: (e: React.KeyboardEvent<HTMLDivElement>) => void;
    /**
     *  Позволяет выравнивать контейнер с компонентами относительно тарджет компонента
     *  https://developer.mozilla.org/en-US/docs/Web/CSS/align-self
     */
    alignSelf?: 'auto' | 'flex-start' | 'flex-end' | 'center' | 'baseline' | 'stretch';
    /** Отключает автовыравнивание относительно компонента и границ вьюпорта*/
    disableAutoAlign?: boolean;
    onMenuReachTop?: () => void;
    onMenuReachBottom?: () => void;
    menuFocus?: 'firstOption' | 'lastOption' | 'activeOption';
    setMenuFocus?: React.Dispatch<React.SetStateAction<'firstOption' | 'lastOption' | 'activeOption'>>;
    /** Позволяет добавлять миксин для выпадающих меню, созданный с помощью styled css  */
    dropContainerCssMixin?: ReturnType<typeof css>;
}
/**
 * @deprecated Помечено как deprecated в версии 3.0.1, будет удалено в версии 9.х.х.
 * Взамен используйте DropDownContainer
 */
export declare const Dropdown: React.ForwardRefExoticComponent<DropdownProps & {
    children?: React.ReactNode;
} & React.RefAttributes<HTMLDivElement>>;
//# sourceMappingURL=index.d.ts.map