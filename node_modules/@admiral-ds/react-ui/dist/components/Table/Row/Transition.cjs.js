"use strict";var jsxRuntime=require("react/jsx-runtime"),e=require("react");exports.Transition=({children,in:_in=!1,timeout=300,onEnter,onEntering,onEntered,onExit,onExiting,onExited,...childProps})=>{const[status,setStatus]=e.useState(_in?"entered":"exited"),statusRef=e.useRef(_in?"entered":"exited"),timer=e.useRef(0);e.useEffect(()=>()=>{cancelCallback()},[]),e.useEffect(()=>{let nextStatus=null;_in?"entering"!==statusRef.current&&"entered"!==statusRef.current&&(nextStatus="entering"):"entering"!==statusRef.current&&"entered"!==statusRef.current||(nextStatus="exiting"),updateStatus(nextStatus)},[_in]),e.useEffect(()=>{if(statusRef.current!==status){statusRef.current=status;const{enter:enterTimeout,exit:exitTimeout}=getTimeouts();"entering"==status?(onEntering?.(),onTransitionEnd(enterTimeout,()=>{setStatus("entered")})):"exiting"==status?(onExiting?.(),onTransitionEnd(exitTimeout,()=>{setStatus("exited")})):"entered"==status?onEntered?.():"exited"==status&&onExited?.()}},[status]);const getTimeouts=()=>{let exit,enter;return"number"==typeof timeout?exit=enter=timeout:(exit=timeout.exit,enter=timeout.enter),{exit,enter}},updateStatus=nextStatus=>{null!==nextStatus&&(cancelCallback(),"entering"===nextStatus?performEnter():performExit())},performEnter=()=>{onEnter?.(),setStatus("entering")},performExit=()=>{onExit?.(),setStatus("exiting")},cancelCallback=()=>{clearTimeout(timer.current)},onTransitionEnd=(timeout,handler)=>{timer.current=setTimeout(handler,timeout)};return jsxRuntime.jsx(jsxRuntime.Fragment,{children:"function"==typeof children?children(status,childProps):e.cloneElement(e.Children.only(children),childProps)})};
//# sourceMappingURL=Transition.cjs.js.map
