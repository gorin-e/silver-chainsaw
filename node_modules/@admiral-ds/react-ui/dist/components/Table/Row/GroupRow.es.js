import{jsxs,Fragment,jsx}from"react/jsx-runtime";import{StickyWrapper,DragCell,ExpandCell,ExpandIconPlacement,ExpandIcon,CheckboxCell,Cell,Filler,GroupTextContent}from"../style.es.js";import"../../form/InputField/index.es.js";import{CheckboxField}from"../../form/CheckboxField/index.es.js";import"../../form/DateField/index.es.js";import"../../form/SelectField/index.es.js";import"../../form/FieldSet/index.es.js";import"../../form/SuggestField/index.es.js";import"../../form/TextField/index.es.js";import"../../form/SliderInputField/index.es.js";import"../../form/SliderRangeField/index.es.js";import"../../form/TimeField/index.es.js";import"../../form/NumberInputField/index.es.js";import"../../form/EditModeField/index.es.js";import"../../form/EditModeAreaField/index.es.js";import"../../form/PhoneInputField/index.es.js";import"../../form/InputExField/index.es.js";import"../../form/FileInputField/index.es.js";import"../../form/MultiInputField/index.es.js";import"../../form/TreeSelectField/index.es.js";const GroupRow=({row,dimension,displayRowSelectionColumn,rowsDraggable,checkboxDimension,renderCell,onRowExpansionChange,onRowSelectionChange,indeterminate,checked})=>jsxs(Fragment,{children:[jsxs(StickyWrapper,{children:[rowsDraggable&&jsx(DragCell,{$dimension:dimension}),jsx(ExpandCell,{$dimension:dimension,className:"td_expand","data-column":"expand","data-row":row.id,children:jsx(ExpandIconPlacement,{dimension:"s"===dimension||"m"===dimension?"mBig":"lBig",disabled:!(!row.disabled&&0!==row.groupRows?.length)||void 0,highlightFocus:!1,onClick:e=>{e.stopPropagation(),onRowExpansionChange?.(row.id)},children:jsx(ExpandIcon,{$isOpened:row.expanded,"aria-hidden":!0})})}),displayRowSelectionColumn&&jsx(CheckboxCell,{$dimension:dimension,className:"td_checkbox","data-column":"checkbox","data-row":row.id,children:jsx(CheckboxField,{disabled:row.disabled||row.checkboxDisabled||0===row.groupRows?.length,dimension:checkboxDimension,checked:!!checked,indeterminate,onChange:()=>{onRowSelectionChange?.(row.id)},onClick:e=>{e.stopPropagation()}})})]}),jsx(Cell,{$dimension:dimension,className:"td","data-column":"group","data-row":row.id,children:row.renderGroupTitle?row.renderGroupTitle(row):renderCell?renderCell(row,"group"):jsx(GroupTextContent,{children:row.groupTitle||""})},`${row.id}`),jsx(Filler,{})]});export{GroupRow};
//# sourceMappingURL=GroupRow.es.js.map
