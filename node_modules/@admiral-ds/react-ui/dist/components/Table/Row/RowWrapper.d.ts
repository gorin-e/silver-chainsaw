import * as React from 'react';
import type { HTMLAttributes } from 'react';
import type { Dimension, RowId, TableRow, TableProps } from '../../../components/Table';
export interface RowWrapperProps extends HTMLAttributes<HTMLDivElement> {
    /** Размер таблицы */
    dimension: Dimension;
    /** Отображаемая строка */
    row: TableRow;
    /** Колбек для клика по строке таблицы */
    onRowClick?: (rowId: RowId | string, event: React.MouseEvent<HTMLDivElement>) => void;
    /** Колбек для двойного клика по строке таблицы */
    onRowDoubleClick?: (rowId: RowId | string, event: React.MouseEvent<HTMLDivElement>) => void;
    /** Признак необходимости отображать нижнюю границу */
    underline: boolean;
    /** Признак является ли строка заголовком группы */
    isGroup: boolean;
    /** Id заголовка группы, к которой относится строка */
    groupId: RowId | string | null;
    /** Ширина строки */
    rowWidth?: string;
    /** Окрашивание строки в серый цвет при greyZebraRows */
    grey?: boolean;
    /** Включение постоянной видимости иконок действий над строками */
    showRowsActions: boolean;
    /** Объект с описанием статусов строки */
    rowStatusMap?: TableProps['rowBackgroundColorByStatusMap'];
    /** Ref на элемент таблицы */
    tableRef: React.RefObject<HTMLElement>;
    /** Высота хедера таблицы */
    headerHeight: number;
}
export declare const RowWrapper: ({ row, dimension, underline, onRowClick, onRowDoubleClick, children, isGroup, groupId, rowWidth, grey, showRowsActions, rowStatusMap, tableRef, headerHeight, ...props }: RowWrapperProps) => import("react/jsx-runtime").JSX.Element;
//# sourceMappingURL=RowWrapper.d.ts.map