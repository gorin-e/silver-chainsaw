"use strict";var jsxRuntime=require("react/jsx-runtime"),style=require("../style.cjs.js");require("../../form/InputField/index.cjs.js");var index=require("../../form/CheckboxField/index.cjs.js");require("../../form/DateField/index.cjs.js"),require("../../form/SelectField/index.cjs.js"),require("../../form/FieldSet/index.cjs.js"),require("../../form/SuggestField/index.cjs.js"),require("../../form/TextField/index.cjs.js"),require("../../form/SliderInputField/index.cjs.js"),require("../../form/SliderRangeField/index.cjs.js"),require("../../form/TimeField/index.cjs.js"),require("../../form/NumberInputField/index.cjs.js"),require("../../form/EditModeField/index.cjs.js"),require("../../form/EditModeAreaField/index.cjs.js"),require("../../form/PhoneInputField/index.cjs.js"),require("../../form/InputExField/index.cjs.js"),require("../../form/FileInputField/index.cjs.js"),require("../../form/MultiInputField/index.cjs.js"),require("../../form/TreeSelectField/index.cjs.js");exports.RegularRow=({row,dimension,checkboxDimension,columns,stickyColumns,displayRowSelectionColumn,displayRowExpansionColumn,rowsDraggable,onRowExpansionChange,onRowSelectionChange,renderBodyCell})=>{const iconSize="s"===dimension||"m"===dimension?20:24;return jsxRuntime.jsxs(jsxRuntime.Fragment,{children:[(displayRowSelectionColumn||displayRowExpansionColumn||stickyColumns.length>0||rowsDraggable)&&jsxRuntime.jsxs(style.StickyWrapper,{children:[rowsDraggable&&jsxRuntime.jsx(style.DragCell,{$dimension:dimension,children:jsxRuntime.jsx(style.DragIcon,{"data-dragicon":!0,width:iconSize,height:iconSize,$disabled:row.disabled})}),displayRowExpansionColumn&&jsxRuntime.jsx(style.ExpandCell,{$dimension:dimension,className:"td_expand","data-column":"expand","data-row":row.id,children:row.expandedRowRender&&jsxRuntime.jsx(style.ExpandIconPlacement,{style:{margin:0,flexShrink:0},dimension:"s"===dimension||"m"===dimension?"mBig":"lBig",disabled:!!row.disabled||void 0,highlightFocus:!1,onClick:e=>{e.stopPropagation(),onRowExpansionChange?.(row.id)},children:jsxRuntime.jsx(style.ExpandIcon,{$isOpened:row.expanded,"aria-hidden":!0})})}),displayRowSelectionColumn&&jsxRuntime.jsx(style.CheckboxCell,{$dimension:dimension,className:"td_checkbox","data-column":"checkbox","data-row":row.id,children:jsxRuntime.jsx(index.CheckboxField,{disabled:row.disabled||row.checkboxDisabled,dimension:checkboxDimension,checked:!!row.selected,onChange:()=>onRowSelectionChange?.(row.id),onClick:e=>{e.stopPropagation()}})}),stickyColumns.length>0&&stickyColumns.map((col,index)=>renderBodyCell(row,{...col,index}))]}),columns.map((col,index)=>col.sticky?null:renderBodyCell(row,{...col,index})),jsxRuntime.jsx(style.Filler,{})]})};
//# sourceMappingURL=RegularRow.cjs.js.map
