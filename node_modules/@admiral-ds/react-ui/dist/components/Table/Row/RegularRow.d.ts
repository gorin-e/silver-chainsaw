/// <reference types="react" />
import type { TableRow, RowId, Column, Dimension } from '../../../components/Table';
import type { CheckboxDimension } from '../../../components/Checkbox/CheckboxDimension';
export interface RegularRowProps {
    /** Размер таблицы */
    dimension: Dimension;
    /** Размер checkbox-а */
    checkboxDimension: CheckboxDimension;
    /** Массив столбцов */
    columns: Array<Column>;
    /** Массив закрепленных столбцов */
    stickyColumns: Array<Column>;
    /** Отображаемая строка */
    row: TableRow;
    /** Отображение столбца с чекбоксами, позволяющими выбрать необходимые строки */
    displayRowSelectionColumn: boolean;
    /** Отображение столбца со стрелками для детализации (раскрытия) строк */
    displayRowExpansionColumn: boolean;
    /** Активен ли drag&drop строк в таблице */
    rowsDraggable?: boolean;
    /** Рендер функция для отрисовки контента ячейки. Входные параметры - объект строки и название столбца */
    /** Колбек на раскрытие/свертывание строки (на нажатие по стрелке слева). */
    onRowExpansionChange?: (rowId: RowId | string) => void;
    /** Колбек на выбор/снятие выбора со строки (на нажатие по чекбоксу строки). */
    onRowSelectionChange?: (rowId: RowId | string) => void;
    /** Функция рендера ячейки */
    renderBodyCell: (row: TableRow, column: Column & {
        index: number;
    }) => React.ReactNode;
}
export declare const RegularRow: ({ row, dimension, checkboxDimension, columns, stickyColumns, displayRowSelectionColumn, displayRowExpansionColumn, rowsDraggable, onRowExpansionChange, onRowSelectionChange, renderBodyCell, }: RegularRowProps) => import("react/jsx-runtime").JSX.Element;
//# sourceMappingURL=RegularRow.d.ts.map