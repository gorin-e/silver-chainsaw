/// <reference types="react" />
type Status = 'entering' | 'entered' | 'exiting' | 'exited';
type TransitionProps = {
    children: React.ReactNode | ((status: Status, props: any) => React.ReactNode);
    /** Show the component; triggers the enter or exit states */
    in: boolean;
    /** The duration of the transition, in milliseconds */
    timeout?: number | {
        enter: number;
        exit: number;
    };
    /** Callback fired before the "entering" status is applied */
    onEnter?: () => void;
    /** Callback fired after the "entering" status is applied */
    onEntering?: () => void;
    /** Callback fired after the "entered" status is applied */
    onEntered?: () => void;
    /** Callback fired before the "exiting" status is applied */
    onExit?: () => void;
    /** Callback fired after the "exiting" status is applied */
    onExiting?: () => void;
    /** Callback fired after the "exited" status is applied */
    onExited?: () => void;
};
export declare const Transition: ({ children, in: _in, timeout, onEnter, onEntering, onEntered, onExit, onExiting, onExited, ...childProps }: TransitionProps) => import("react/jsx-runtime").JSX.Element;
export {};
//# sourceMappingURL=Transition.d.ts.map