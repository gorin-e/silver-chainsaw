import{jsx}from"react/jsx-runtime";import{useContext,useState,useRef,useEffect}from"react";import{createPortal}from"react-dom";import{DropdownContext}from"../../DropdownProvider.es.js";import observeRect from"../../common/observeRect.es.js";import{dragObserver}from"../dragObserver.es.js";import{MirrorRow}from"../style.es.js";const RowDrag=({rowsDraggable,dimension,onRowDrag,onRowDragEnd,tableRef,bodyRef,rowToGroupMap,draggedRowCssMixin})=>{const{rootRef}=useContext(DropdownContext),[rowDragging,setRowDragging]=useState(!1),rowDragCallback=useRef(onRowDrag),rowDragEndCallback=useRef(onRowDragEnd),rowToGroup=useRef(rowToGroupMap),rowMirrorRef=useRef(null);return useEffect(()=>{rowToGroup.current=rowToGroupMap},[rowToGroupMap]),useEffect(()=>{rowDragCallback.current=onRowDrag,rowDragEndCallback.current=onRowDragEnd},[onRowDrag,onRowDragEnd]),useEffect(()=>{if(rowMirrorRef.current&&rowDragging&&rowsDraggable){const table=tableRef.current,header=table?.querySelector(".thead"),observer=observeRect(rowMirrorRef.current,rect=>{const topCoord=header?.getBoundingClientRect().bottom||0,bottomCoord=table?.getBoundingClientRect().bottom||0;if(table){const scrollTop=table.scrollTop,scrollHeight=table.scrollHeight,offsetHeight=table.offsetHeight;rect.bottom>bottomCoord&&scrollHeight>offsetHeight&&scrollTop+offsetHeight<scrollHeight&&table.scrollBy({top:Math.abs(bottomCoord-rect.bottom)}),rect.top<topCoord&&scrollTop>0&&table.scrollBy({top:-Math.abs(topCoord-rect.top)})}});return observer.observe(),()=>observer.unobserve()}},[rowsDraggable,rowDragging]),useEffect(()=>{const body=bodyRef.current,rowMirror=rowMirrorRef.current;if(body&&rowsDraggable){const observer=dragObserver([body],{mirrorRef:rowMirrorRef,renderMirror:function(dragRow){const firstCell=dragRow?.getElementsByClassName("td")[0];if(firstCell&&rowMirror){const draggedCell=firstCell.cloneNode(!0);draggedCell.style.removeProperty("width"),rowMirror.appendChild(draggedCell)}},removeMirror:function(){rowMirror&&rowMirror.lastChild&&rowMirror.removeChild(rowMirror.lastChild)},updateDragItem:function(selector,seacrhInGroup){let newItem=null;if(body&&(newItem=body.querySelector(`[data-row="${selector}"]`),!newItem&&seacrhInGroup)){const groupId=rowToGroup.current?.[selector]?.groupId;newItem=body.querySelector(`[data-row="${groupId}"]`)}return newItem},dimension,direction:"vertical",invalid:(_,initEl)=>!(initEl.getAttribute("data-dragicon")||initEl.parentElement?.getAttribute("data-dragicon"))},function(item,before,immediate){const rowId=item?.dataset?.row;if(rowId){const rowInGroup=rowToGroup.current?.[rowId]?.groupId,beforeRowId=before?.dataset?.row??null,immediateRowId=immediate?.dataset?.row,immediateGroup=immediate?.dataset?.group,immediateInGroup=immediate?.dataset?.ingroup,immediateFirstRowInGroup=immediate?.dataset?.firstRowInGroup;if(immediateRowId&&"true"==immediateGroup){if(rowInGroup!==immediateRowId||rowInGroup==immediateRowId&&immediateFirstRowInGroup!==rowId){const nextRowId=immediateFirstRowInGroup??beforeRowId;rowDragCallback.current?.(rowId,nextRowId,immediateRowId)}}else rowDragCallback.current?.(rowId,beforeRowId,immediateInGroup??null)}},function(){setRowDragging(!0)},function(item){setRowDragging(!1);const rowId=item?.dataset?.row;rowId&&rowDragEndCallback.current?.(rowId)});return()=>{observer.unobserve()}}},[rowsDraggable]),rowsDraggable?createPortal(jsx(MirrorRow,{$dimension:dimension,ref:rowMirrorRef,$cssMixin:draggedRowCssMixin}),rootRef?.current||document.body):null};export{RowDrag};
//# sourceMappingURL=RowDrag.es.js.map
