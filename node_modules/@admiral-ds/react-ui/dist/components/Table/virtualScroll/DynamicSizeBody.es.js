import{jsx,jsxs,Fragment}from"react/jsx-runtime";import{forwardRef,useState,useRef,useEffect,useLayoutEffect,useMemo,useCallback}from"react";import{Body,Spacer}from"../style.es.js";import{findStartIndex,findEndIndex}from"./utils.es.js";import{VirtualRowWrapper}from"./VirtualRowWrapper.es.js";const DynamicSizeBody=forwardRef(({rowList,tableHeight,headerHeight,renderAhead=20,renderRow,renderEmptyMessage,estimatedRowHeight=()=>40,tableRef},ref)=>{const[measurementCache,setMeasurementCache]=useState({}),[scrollTop,setScrollTop]=useState(0),[height,setHeight]=useState(tableHeight-headerHeight),measurementCacheRef=useRef(measurementCache);useEffect(()=>{setHeight(tableHeight-headerHeight)},[tableHeight,headerHeight]),useLayoutEffect(()=>{measurementCacheRef.current=measurementCache});const rowNodes=useMemo(()=>rowList.filter((row,index)=>Boolean(renderRow(row,index))),[rowList,renderRow]),itemsCount=useMemo(()=>rowNodes.length,[rowNodes]),getItemKey=useCallback(index=>rowNodes[index].id,[rowNodes]);useEffect(()=>{function handleScroll(e){requestAnimationFrame(()=>{setScrollTop(e.target.scrollTop)})}const scrollContainer=tableRef.current;return setScrollTop(scrollContainer?.scrollTop||0),scrollContainer?.addEventListener("scroll",handleScroll),()=>scrollContainer?.removeEventListener("scroll",handleScroll)},[tableRef]);const{allItems,totalHeight}=useMemo(()=>{let totalHeight=0;const allRows=Array(itemsCount);for(let index=0;index<itemsCount;index++){const key=getItemKey(index),row={key,index,height:measurementCache[key]??estimatedRowHeight(index),offsetTop:totalHeight};totalHeight+=row.height,allRows[index]=row}return{allItems:allRows,totalHeight}},[getItemKey,estimatedRowHeight,measurementCache,itemsCount,rowNodes]),startIndex=useMemo(()=>{const start=itemsCount?findStartIndex(scrollTop,allItems,itemsCount):0;return Math.max(0,start-renderAhead)},[scrollTop,allItems,itemsCount,renderAhead]),endIndex=useMemo(()=>{const end=itemsCount?findEndIndex(allItems,startIndex,scrollTop+height,itemsCount):0;return Math.min(itemsCount-1,end+renderAhead)},[allItems,startIndex,scrollTop,height,itemsCount,renderAhead]),topPadding=allItems[startIndex]?.offsetTop,bottomPadding=totalHeight-(allItems[endIndex]?.offsetTop+allItems[endIndex]?.height),virtualItems=useMemo(()=>allItems.slice(startIndex,endIndex+1),[allItems,startIndex,endIndex]);return jsx(Body,{ref,style:{height},children:renderEmptyMessage?renderEmptyMessage():jsxs(Fragment,{children:[jsx(Spacer,{style:{minHeight:topPadding}}),virtualItems.map(virtualItem=>{const item=rowNodes[virtualItem.index];return jsx(VirtualRowWrapper,{id:item.id,cacheRef:measurementCacheRef,setCache:setMeasurementCache,children:renderRow(item,virtualItem.index)},item.id)}),jsx(Spacer,{style:{minHeight:bottomPadding}})]})})});export{DynamicSizeBody};
//# sourceMappingURL=DynamicSizeBody.es.js.map
