import{jsxs,Fragment,jsx}from"react/jsx-runtime";import*as e from"react";import styled from"styled-components";import{keyboardKey}from"../../common/keyboardKey.es.js";import{refSetter}from"../../common/utils/refSetter.es.js";import{StyledDropdownContainer}from"../../DropdownContainer/index.es.js";import{Button}from"./Button.es.js";const FilterDropdownContainer=styled(StyledDropdownContainer)`
  background-color: var(--admiral-color-Special_ElevatedBG, ${p=>p.theme.color["Special/Elevated BG"]});
`,Filter=e.forwardRef(({column,targetElement,...props},ref)=>{const{renderFilter,renderFilterIcon,onFilterMenuClickOutside,onFilterMenuOpen,onFilterMenuClose,isFilterActive:filterActive,filterMenuAlignSelf="auto",filterMenuCssMixin,filterMenuClassName,filterMenuStyle}=column,[menuOpened,setMenuOpened]=e.useState(!1),[isFilterActive,setFilterActive]=e.useState(!1),btnRef=e.useRef(null),closeMenu=()=>{setMenuOpened(!1),onFilterMenuClose?.(),btnRef.current?.focus()};return jsxs(Fragment,{children:[jsx(Button,{ref:refSetter(ref,btnRef),onKeyDown:e=>{const code=keyboardKey.getCode(e);code!==keyboardKey.ArrowDown&&code!==keyboardKey.Enter&&code!==keyboardKey[" "]||(setMenuOpened(!0),onFilterMenuOpen?.(),e.preventDefault())},onClick:()=>{setMenuOpened(prevOpened=>(prevOpened?onFilterMenuClose?.():onFilterMenuOpen?.(),!prevOpened))},"aria-expanded":menuOpened,"aria-haspopup":menuOpened,isFilterActive:filterActive??isFilterActive,renderFilterIcon,...props}),menuOpened&&jsx(FilterDropdownContainer,{role:"listbox",targetElement,alignSelf:filterMenuAlignSelf,onClickOutside:e=>{e.target&&btnRef.current?.contains(e.target)||onFilterMenuClickOutside?.({closeMenu,setFilterActive},e)},onKeyDown:e=>{const code=keyboardKey.getCode(e);code!==keyboardKey.Escape&&code!==keyboardKey.Tab||closeMenu()},dropContainerCssMixin:filterMenuCssMixin,className:filterMenuClassName,style:filterMenuStyle,children:renderFilter?.({closeMenu,setFilterActive},column)})]})});export{Filter};
//# sourceMappingURL=Filter.es.js.map
