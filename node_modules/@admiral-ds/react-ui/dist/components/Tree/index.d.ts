import type { HTMLAttributes } from 'react';
import type { Dimension, TreeItemProps } from './TreeNode';
export interface TreeProps extends Omit<HTMLAttributes<HTMLDivElement>, 'onChange'> {
    /** Размер компонента */
    dimension?: Dimension;
    /** Активная секция Tree */
    active?: string | null;
    /** выбранная секция Tree */
    selected?: string | null;
    /** выбранная по умолчанию секция Tree */
    defaultSelected?: string;
    /** Обработчик выбора элемента дерева */
    onActivateItem?: (id: string | null) => void;
    /** Обработчик выбора элемента дерева */
    onSelectItem?: (id: string | null) => void;
    /** Обработчик изменения данных дерева */
    onChange?: (model: Array<TreeItemProps>) => void;
    /** Модель данных, с рендер-пропсами*/
    model?: Array<TreeItemProps>;
    /** Модель данных, с рендер-пропсами по-умолчанию для неконтролируемого состояния*/
    defaultModel?: Array<TreeItemProps>;
    /** Признак того, что дерево содержит checkbox-ы */
    withCheckbox?: boolean;
    /** Обработчик изменения состояния выбранных элементов */
    onCheckedChange?: (ids: Array<string>) => void;
    /** Обработчик открытия/закрытия узла дерева */
    onExpandedChange?: (ids: Array<string>) => void;
}
export declare const Tree: import("react").ForwardRefExoticComponent<TreeProps & import("react").RefAttributes<HTMLDivElement>>;
export { TreeNode } from './TreeNode';
export type { TreeNodeRenderOptionProps, TreeItemProps } from './TreeNode';
//# sourceMappingURL=index.d.ts.map