"use strict";var jsxRuntime=require("react/jsx-runtime"),e=require("react"),styled=require("styled-components"),typography=require("../Typography/typography.cjs.js");require("../Typography/defaultTypographyMixin.cjs.js"),require("../form/InputField/index.cjs.js");var index$1=require("../form/CheckboxField/index.cjs.js");require("../form/DateField/index.cjs.js"),require("../form/SelectField/index.cjs.js"),require("../form/FieldSet/index.cjs.js"),require("../form/SuggestField/index.cjs.js"),require("../form/TextField/index.cjs.js"),require("../form/SliderInputField/index.cjs.js"),require("../form/SliderRangeField/index.cjs.js"),require("../form/TimeField/index.cjs.js"),require("../form/NumberInputField/index.cjs.js"),require("../form/EditModeField/index.cjs.js"),require("../form/EditModeAreaField/index.cjs.js"),require("../form/PhoneInputField/index.cjs.js"),require("../form/InputExField/index.cjs.js"),require("../form/FileInputField/index.cjs.js"),require("../form/MultiInputField/index.cjs.js"),require("../form/TreeSelectField/index.cjs.js");var ChevronRightOutline=require("../../node_modules/@admiral-ds/icons/build/system/ChevronRightOutline.svg.cjs.js"),index=require("../IconPlacement/index.cjs.js");function _interopDefault(e){return e&&e.__esModule?e:{default:e}}var styled__default=_interopDefault(styled);const Chevron=styled__default.default(ChevronRightOutline.ReactComponent)`
  transition: all 0.3s;
  & path {
    fill: var(--admiral-color-Neutral_Neutral50, ${p=>p.theme.color["Neutral/Neutral 50"]});
  }
  width: 100%;
  height: 100%;
  transform: ${p=>p.$isOpened?"rotate(90deg)":"rotate(0deg)"};
`,StyledIconPlacement=styled__default.default(index.IconPlacement)`
  flex-shrink: 0;
  margin: 0 16px 0 0;
`,backgroundColor=styled.css`
  background: ${({theme,$selected,$hovered})=>$hovered?`var(--admiral-color-Opacity_Hover, ${theme.color["Opacity/Hover"]})`:$selected?`var(--admiral-color-Opacity_Focus, ${theme.color["Opacity/Focus"]})`:`var(--admiral-color-Special_ElevatedBG, ${theme.color["Special/Elevated BG"]})`};
`,RowWrapper=styled__default.default.div`
  color: var(--admiral-color-Neutral_Neutral90, ${p=>p.theme.color["Neutral/Neutral 90"]});
  ${p=>"m"===p.$dimension?typography.typography["Body/Body 1 Short"]:typography.typography["Body/Body 2 Short"]};
  display: flex;
  align-items: flex-start;
  box-sizing: border-box;
  min-height: ${({$dimension})=>"m"===$dimension?"40px":"32px"};
  ${p=>!p.disabled&&backgroundColor};
  cursor: ${p=>p.disabled?"not-allowed":"pointer"};
  padding: ${p=>"m"===p.$dimension?`8px 16px 8px ${16+40*(p.$indent||0)}px`:`6px 16px 6px ${16+36*(p.$indent||0)}px`};
`,IconWrapper=styled__default.default.div`
  margin-right: 8px;
  flex-shrink: 0;
  width: ${p=>"m"===p.$dimension?"24px":"20px"};
  height: ${p=>"m"===p.$dimension?"24px":"20px"};
  > svg {
    width: 100%;
    height: 100%;
    fill: var(--admiral-color-Neutral_Neutral50, ${p=>p.theme.color["Neutral/Neutral 50"]});
  }
`,StyledCheckbox=styled__default.default(index$1.CheckboxField)`
  margin-right: 8px;
  flex-shrink: 0;
`,TitleContent=styled__default.default.div`
  padding-top: 2px;
`;exports.TreeNode=({dimension="m",label,icon,checkboxVisible,hasChildren,selected,hovered,disabled,expanded,checked,indeterminate,indent,level,onChange,onHover,onClick,onToggleExpand,children,className,style,...props})=>{const Icon=icon||null,[mouseOnChevron,setMouseOnChevron]=e.useState(!1),chevronRef=e.useRef(null),rowRef=e.useRef(null),[hoveredState,setHoveredState]=e.useState(!1),hoveredValue=hovered??hoveredState;return jsxRuntime.jsxs(RowWrapper,{ref:rowRef,className,style,$dimension:dimension,$indent:indent,onMouseMove:e=>{onHover?.(),hoveredState||setHoveredState(!0),props.onMouseMove?.(e)},onMouseLeave:e=>{setHoveredState(!1),props.onMouseLeave?.(e)},onClick:e=>{e.target!==chevronRef.current&&(disabled||onClick?.(e))},$selected:selected,$hovered:hoveredValue,disabled,children:[hasChildren&&jsxRuntime.jsx(StyledIconPlacement,{ref:chevronRef,dimension:"m"===dimension?"lBig":"mBig",highlightFocus:!1,onClick:onToggleExpand,onMouseMove:()=>{!mouseOnChevron&&hasChildren&&setMouseOnChevron(!0)},onMouseLeave:()=>{hasChildren&&setMouseOnChevron(!1)},children:jsxRuntime.jsx(Chevron,{$isOpened:expanded,"aria-hidden":!0})}),checkboxVisible&&jsxRuntime.jsx(StyledCheckbox,{...props,hovered:!mouseOnChevron&&hoveredValue,dimension,disabled,checked,indeterminate,onChange:e=>{onChange?.(e.target.checked)}}),Icon&&jsxRuntime.jsx(IconWrapper,{$dimension:dimension,children:jsxRuntime.jsx(Icon,{})}),label&&jsxRuntime.jsx(TitleContent,{children:label}),children]})},exports.backgroundColor=backgroundColor;
//# sourceMappingURL=TreeNode.cjs.js.map
