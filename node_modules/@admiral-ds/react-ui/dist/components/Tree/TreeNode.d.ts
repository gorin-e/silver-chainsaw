import type { FunctionComponent, HTMLAttributes, MouseEventHandler, ReactNode, SVGProps } from 'react';
export interface TreeNodeRenderOptionProps {
    /** Размер компонента */
    dimension?: Dimension;
    /** Активная секция Tree */
    selected?: boolean;
    /** Акцентная секция Tree */
    hovered?: boolean;
    /** Признак отображения checkbox-а */
    checkboxVisible?: boolean;
    /** Отключение секции */
    disabled?: boolean;
    /** Значение checkbox-а */
    checked?: boolean;
    /** Неопределенное состояние checkbox-а */
    indeterminate?: boolean;
    /**
     * @deprecated Помечено как deprecated в версии 6.1.0, будет удалено в версии 9.х.х.
     * Взамен используйте параметр indent
     *
     * Уровень дерева item-а
     */
    level?: number;
    /** Отступ item-а */
    indent?: number;
    /** Наличие дочерних элемнтов у item-а */
    hasChildren?: boolean;
    /** Признак развернутого состояния item-а */
    expanded?: boolean;
    /** Обработчик клика мыши на item */
    onClick?: MouseEventHandler<HTMLDivElement>;
    /** Обработчик наведения мыши на item */
    onHover?: () => void;
    /** обработчик изменения состояния открытости узла */
    onToggleExpand?: () => void;
}
export interface TreeItemProps {
    id: string;
    render: (options: TreeNodeRenderOptionProps) => ReactNode;
    disabled?: boolean;
    checked?: boolean;
    children?: Array<TreeItemProps>;
    expanded?: boolean;
}
export type Dimension = 'm' | 's';
export interface NodeProps extends Omit<HTMLAttributes<HTMLDivElement>, 'onChange'> {
    label?: ReactNode;
    icon?: FunctionComponent<SVGProps<SVGSVGElement>>;
    onChange?: (value: boolean) => void;
}
export interface TreeNodeProps extends NodeProps, TreeNodeRenderOptionProps {
}
export declare const backgroundColor: import("styled-components").RuleSet<{
    $selected?: boolean | undefined;
    $hovered?: boolean | undefined;
}>;
export declare const TreeNode: ({ dimension, label, icon, checkboxVisible, hasChildren, selected, hovered, disabled, expanded, checked, indeterminate, indent, level, onChange, onHover, onClick, onToggleExpand, children, className, style, ...props }: TreeNodeProps) => import("react/jsx-runtime").JSX.Element;
//# sourceMappingURL=TreeNode.d.ts.map