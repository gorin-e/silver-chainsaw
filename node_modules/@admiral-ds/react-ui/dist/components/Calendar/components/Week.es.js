import{jsx}from"react/jsx-runtime";import{useTheme}from"styled-components";import{LIGHT_THEME}from"../../themes/light/index.es.js";import"../../themes/common/locales.es.js";import"../../Typography/typography.es.js";import"../../Typography/defaultTypographyMixin.es.js";import{DAY_NUMBERS}from"../constants.es.js";import{startOfWeek,addDays}from"../date-utils.es.js";import{Day}from"./Day.es.js";import{WeekComponent}from"../styled/WeekComponent.es.js";const Week=({day,month,startDate,endDate,selected,activeDate,range,validator,filterDate,onMouseEnter,onClick,highlightSpecialDay})=>{const theme=useTheme()||LIGHT_THEME,weekStart=startOfWeek(day,theme.locales[theme.currentLocale].firstDayOfWeek??1);return jsx(WeekComponent,{children:DAY_NUMBERS.map(offset=>{const nextDay=addDays(weekStart,offset);return jsx(Day,{day:nextDay,month,startDate,endDate,selected,activeDate,range,validator,filterDate,onMouseEnter:(_,e)=>((day,e)=>onMouseEnter&&onMouseEnter(day,e))(nextDay,e),onClick:(_,e)=>((day,e)=>onClick&&onClick(day,e))(nextDay,e),highlightSpecialDay},nextDay.valueOf())})})};export{Week};
//# sourceMappingURL=Week.es.js.map
