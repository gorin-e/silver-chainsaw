import{jsxs,jsx,Fragment}from"react/jsx-runtime";import{forwardRef,useState,useEffect}from"react";import{DEFAULT_YEAR_COUNT}from"./constants.es.js";import{getDefaultDateValidator}from"./validator.es.js";import{Years}from"./components/Years.es.js";import"./components/Button.es.js";import"styled-components";import"../themes/common/locales.es.js";import"../Typography/typography.es.js";import"../Typography/defaultTypographyMixin.es.js";import{setYear,setMonth,before,after,addYears,subYears,addMonths,subMonths,equal,changeTime}from"./date-utils.es.js";import"./styled/DayComponent.es.js";import{DayNames}from"./components/DayNames.es.js";import{Month}from"./components/Month.es.js";import{Months}from"./components/Months.es.js";import{Panel}from"./components/Panel.es.js";import"./styled/WeekComponent.es.js";import{CalendarComponent}from"./styled/CalendarComponent.es.js";const Calendar=forwardRef(({viewDate,onViewDateChange,startDate,endDate,validator,minDate,maxDate,selected,range,filterDate,currentActiveView,currentActiveViewImportant,locale,onChange,onDateIncreaseDecrease,onMonthSelect,onYearSelect,onViewEnter,onViewLeave,onViewMonthSelect,onViewYearSelect,highlightSpecialDay=()=>{},...props},ref)=>{const getInitialViewDate=()=>{const current=new Date;return current.setHours(0,0,0,0),viewDate||(selected||(minDate&&before(current,minDate)?minDate:maxDate&&after(current,maxDate)?maxDate:current))},[viewDateState,setViewDateState]=useState(getInitialViewDate()),viewDateInner=viewDate??viewDateState,handleViewDateChange=newDate=>{setViewDateState(newDate),onViewDateChange?.(newDate)},[activeDate,setActiveDate]=useState(null),[yearsView,setYearsView]=useState(!1),[monthsView,setMonthsView]=useState(!1);useEffect(()=>{"MONTH"===currentActiveView&&(setYearsView(!1),setMonthsView(!0)),"YEAR"===currentActiveView&&(setMonthsView(!1),setYearsView(!0)),"DAY"===currentActiveView&&(setYearsView(!1),setMonthsView(!1))},[currentActiveView]),useEffect(()=>{handleViewDateChange(getInitialViewDate())},[selected]),useEffect(()=>{range&&startDate&&(changeYear(startDate.getFullYear()),changeMonth(startDate.getMonth()))},[]),useEffect(()=>{yearsView?onViewEnter&&onViewEnter("YEAR"):onViewLeave&&onViewLeave("YEAR")},[yearsView]),useEffect(()=>{monthsView?onViewEnter&&onViewEnter("MONTH"):onViewLeave&&onViewLeave("MONTH")},[monthsView]);const getValidator=()=>validator||getDefaultDateValidator(minDate,maxDate),changeYear=year=>handleViewDateChange(setYear(viewDateInner,year)),changeMonth=month=>handleViewDateChange(setMonth(viewDateInner,month)),handleDayMouseEnter=day=>setActiveDate(day),handleMonthMouseLeave=()=>setActiveDate(null),handleDayClick=(day,event)=>{let date=day;!range&&equal(selected,date)||(date=changeTime(date,selected),range?(startDate||endDate?startDate&&!endDate?before(date,startDate)?onChange([date,null],event):onChange([startDate,date],event):!startDate&&endDate&&(before(date,endDate)?onChange([date,endDate],event):onChange([date,null],event)):onChange([date,null],event),startDate&&endDate&&onChange([date,null],event)):onChange(date,event))},handleYearClick=date=>{changeYear(date.getFullYear()),!currentActiveViewImportant&&setYearsView(!1),onYearSelect&&onYearSelect(date)},handleMonthClick=date=>{changeMonth(date.getMonth()),!currentActiveViewImportant&&setMonthsView(!1),onMonthSelect&&onMonthSelect(date)};return jsxs(CalendarComponent,{$yearsView:yearsView,$monthsView:monthsView,...props,ref,children:[jsx(Panel,{viewDate:viewDateInner,minDate,maxDate,yearsView,monthsView,locale,onYearsViewShow:()=>{currentActiveViewImportant||(setYearsView(!0),setMonthsView(!1)),onViewYearSelect&&onViewYearSelect()},onYearsViewHide:()=>{currentActiveViewImportant||setYearsView(!1),onViewYearSelect&&onViewYearSelect()},onMonthsViewShow:()=>{currentActiveViewImportant||(setYearsView(!1),setMonthsView(!0)),onViewMonthSelect&&onViewMonthSelect()},onMonthsViewHide:()=>{currentActiveViewImportant||setMonthsView(!1),onViewMonthSelect&&onViewMonthSelect()},onNext:yearsView?()=>{const increase=addYears(viewDateInner,yearsView?DEFAULT_YEAR_COUNT:1);onDateIncreaseDecrease&&onDateIncreaseDecrease(increase),handleViewDateChange(increase)}:()=>{const increase=addMonths(viewDateInner,1);onDateIncreaseDecrease&&onDateIncreaseDecrease(increase),handleViewDateChange(increase)},onPrevious:yearsView?()=>{const decrease=subYears(viewDateInner,yearsView?DEFAULT_YEAR_COUNT:1);onDateIncreaseDecrease&&onDateIncreaseDecrease(decrease),handleViewDateChange(decrease)}:()=>{const decrease=subMonths(viewDateInner);onDateIncreaseDecrease&&onDateIncreaseDecrease(decrease),handleViewDateChange(decrease)}}),yearsView&&jsx(Years,{viewDate:viewDateInner,startDate,endDate,selected,range,validator:getValidator(),onClick:handleYearClick}),monthsView&&jsx(Months,{viewDate:viewDateInner,startDate,endDate,selected,range,validator:getValidator(),onClick:handleMonthClick}),!yearsView&&!monthsView&&jsxs(Fragment,{children:[jsx(DayNames,{date:viewDateInner}),jsx(Month,{day:viewDateInner,startDate,endDate,selected,activeDate,range,validator:getValidator(),filterDate,onMouseEnter:handleDayMouseEnter,onMouseLeave:handleMonthMouseLeave,onClick:handleDayClick,highlightSpecialDay})]})]})});Calendar.displayName="Calendar";export{Calendar};
//# sourceMappingURL=index.es.js.map
