"use strict";const getTimezoneOffsetInMilliseconds=date=>{const utcDate=new Date(Date.UTC(date.getFullYear(),date.getMonth(),date.getDate(),date.getHours(),date.getMinutes(),date.getSeconds(),date.getMilliseconds()));return utcDate.setUTCFullYear(date.getFullYear()),date.getTime()-utcDate.getTime()};const startOfDay=date=>(date.setHours(0,0,0,0),date),addDays=(current,amount)=>{const date=new Date(current.getTime());return isNaN(amount)?new Date(NaN):amount?(date.setDate(date.getDate()+amount),date):date},addYears=(date,amount)=>addMonths(date,12*amount),addMonths=(current,amount)=>{const date=new Date(current.getTime());if(isNaN(amount))return new Date(NaN);if(!amount)return date;const dayOfMonth=date.getDate(),endOfDesiredMonth=new Date(date.getTime());endOfDesiredMonth.setMonth(date.getMonth()+amount+1,0);return dayOfMonth>=endOfDesiredMonth.getDate()?endOfDesiredMonth:(date.setFullYear(endOfDesiredMonth.getFullYear(),endOfDesiredMonth.getMonth(),dayOfMonth),date)},differenceDays=(dateLeft,dateRight)=>{const startOfDayLeft=startOfDay(dateLeft),startOfDayRight=startOfDay(dateRight),timestampLeft=startOfDayLeft.getTime()-getTimezoneOffsetInMilliseconds(startOfDayLeft),timestampRight=startOfDayRight.getTime()-getTimezoneOffsetInMilliseconds(startOfDayRight);return Math.round((timestampLeft-timestampRight)/864e5)};exports.addDays=addDays,exports.addMonths=addMonths,exports.addWeeks=(date,amount)=>addDays(date,7*amount),exports.addYears=addYears,exports.after=(date,dateToCompare)=>date.getTime()>dateToCompare.getTime(),exports.before=(date,dateToCompare)=>date.getTime()<dateToCompare.getTime(),exports.changeTime=(dateTime,newTime)=>newTime?(dateTime.setMilliseconds(newTime.getMilliseconds()),dateTime.setSeconds(newTime.getSeconds()),dateTime.setMinutes(newTime.getMinutes()),dateTime.setHours(newTime.getHours()),dateTime):dateTime,exports.compareDates=(date1,date2)=>null===date1&&null===date2||void 0===date1&&void 0===date2?0:null==date1&&null!=date2?-1:null==date2&&null!=date1?1:date1&&date2?date1.getTime()-date2.getTime():0,exports.dayInRange=(day,startDate,endDate)=>{let valid;const start=startOfDay(startDate),end=((date=endDate).setHours(23,59,59,999),date);var date;try{valid=((date,interval)=>{const time=date.getTime(),startTime=interval.start.getTime(),endTime=interval.end.getTime();if(!(startTime<=endTime))throw new RangeError("Invalid interval");return time>=startTime&&time<=endTime})(day,{start,end})}catch(_err){valid=!1}return valid},exports.differenceDays=differenceDays,exports.differenceMonths=(dateLeft,dateRight)=>12*(dateLeft.getFullYear()-dateRight.getFullYear())+(dateLeft.getMonth()-dateRight.getMonth()),exports.differenceYears=(dateLeft,dateRight)=>dateLeft.getFullYear()-dateRight.getFullYear(),exports.endOfWeek=(current,weekStartsOn)=>{const date=new Date(current.getTime()),day=date.getDay(),diff=6+(day<weekStartsOn?-7:0)-(day-weekStartsOn);return date.setDate(date.getDate()+diff),date.setHours(23,59,59,999),date},exports.equal=(date1,date2)=>{return date1&&date2?(dateRight=date2,date1.getTime()===dateRight.getTime()):!date1&&!date2;var dateRight},exports.getFormattedValue=(date,options,localeName)=>new Intl.DateTimeFormat(localeName,options).format(date||new Date),exports.getMonthList=(locale,format="long")=>{const year=(new Date).getFullYear(),monthList=[...Array(12).keys()],formatter=new Intl.DateTimeFormat(locale,{month:format});return monthList.map(monthIndex=>formatter.format(new Date(year,monthIndex)))},exports.lastDayOfMonth=date=>(date=>{const month=date.getMonth();return date.setFullYear(date.getFullYear(),month+1,0),date.setHours(23,59,59,999),date})(date).getDate(),exports.outOfBounds=(day,minDate,maxDate)=>minDate&&differenceDays(day,minDate)<0||maxDate&&differenceDays(day,maxDate)>0,exports.sameDay=(date1,date2)=>{return date1&&date2?(d2=date2,(d1=date1).getFullYear()===d2.getFullYear()&&d1.getDate()===d2.getDate()&&d1.getMonth()===d2.getMonth()):!date1&&!date2;var d1,d2},exports.setMonth=(date,month)=>{const year=date.getFullYear(),day=date.getDate(),dateWithDesiredMonth=new Date(0);dateWithDesiredMonth.setFullYear(year,month,15),dateWithDesiredMonth.setHours(0,0,0,0);const daysInMonth=(date=>{const year=date.getFullYear(),monthIndex=date.getMonth(),lastDayOfMonth=new Date(0);return lastDayOfMonth.setFullYear(year,monthIndex+1,0),lastDayOfMonth.setHours(0,0,0,0),lastDayOfMonth.getDate()})(dateWithDesiredMonth),d=new Date(date);return d.setMonth(month,Math.min(day,daysInMonth)),d},exports.setYear=(date,year)=>{if(isNaN(date))return new Date(NaN);const d=new Date(date);return d.setFullYear(year),d},exports.startOfDay=startOfDay,exports.startOfMonth=someDate=>{const date=new Date(someDate);return date.setDate(1),date.setHours(0,0,0,0),date},exports.startOfWeek=(current,weekStartsOn)=>{const date=new Date(current.getTime()),day=date.getDay(),diff=(day<weekStartsOn?7:0)+day-weekStartsOn;return date.setDate(date.getDate()-diff),date.setHours(0,0,0,0),date},exports.startOfYear=startDate=>{const date=new Date(0);return date.setFullYear(startDate.getFullYear(),0,1),date.setHours(0,0,0,0),date},exports.subMonths=(date,amount)=>addMonths(date,-1),exports.subYears=(date,amount)=>addYears(date,-amount),exports.valid=date=>!isNaN(date),exports.yearsRange=(date,yearCount)=>{const end=Math.ceil(date.getFullYear()/yearCount)*yearCount;return{start:end-(yearCount-1),end}};
//# sourceMappingURL=date-utils.cjs.js.map
