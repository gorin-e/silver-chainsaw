import type { HTMLAttributes } from 'react';
import type { NumberRange } from './utils';
export interface RangeProps extends Omit<HTMLAttributes<HTMLDivElement>, 'onChange'> {
    /** Значение компонента */
    value: NumberRange;
    /** Коллбек на изменение состояния */
    onChange: (event: any, value: NumberRange) => void;
    /** Колбек, который срабатывает по окончании изменения значения (по окончании перетаскивания ползунка или клика на полосу диапазона) */
    onRangeMouseUp?: () => void;
    /** Минимальное значение */
    minValue?: number;
    /** Максимальное значение */
    maxValue?: number;
    /** Шаг слайдера. Это либо строка any, либо положительное число, по умолчанию 1.
     * Если этот параметр не установлен в any, компонент принимает только кратные step значения, в диапазоне minValue - maxValue
     */
    step?: number | 'any';
    /** Отключение компонента */
    disabled?: boolean;
    /** Размер компонента */
    dimension?: 'm' | 's';
    /** Состояние skeleton */
    skeleton?: boolean;
}
export declare const Range: {
    ({ minValue, maxValue, value: userValue, onChange, onRangeMouseUp, disabled, step, dimension, skeleton, ...props }: RangeProps): import("react/jsx-runtime").JSX.Element;
    displayName: string;
};
//# sourceMappingURL=index.d.ts.map