"use strict";exports.arraysEqual=(arr1,arr2)=>arr1.length===arr2.length&&arr1.every((value,index)=>value===arr2[index]),exports.calcSliderCoords=(value,minValue,maxValue,rangeWidth)=>{let percents=(rangeWidth?rangeWidth/(maxValue-minValue):0)*(value>=0?value-minValue:-minValue+value)/rangeWidth*100;return percents=percents>100?100:percents,percents=percents<0?0:percents,percents},exports.calcValue=(e,trackRef,minValue,maxValue,step)=>{const trackLeft=trackRef.current?.getBoundingClientRect().left||0,trackWidth=trackRef.current?.getBoundingClientRect().width||0;let cursorPosition=e.changedTouches?e.changedTouches[0].pageX:e.pageX;cursorPosition<=trackLeft&&(cursorPosition=trackLeft),cursorPosition>=trackLeft+trackWidth&&(cursorPosition=trackLeft+trackWidth);const newValue=((trackWidth,sliderPosition,minValue,maxValue,step)=>{let sliderValue=sliderPosition*(trackWidth?(maxValue-minValue)/trackWidth:0);"number"==typeof step&&(!step||step>=1)&&(sliderValue=Math.round(sliderValue));let calcValue=minValue+sliderValue;if(step&&"number"==typeof step&&(calcValue=Math.round(calcValue/step)*step,step.toString().includes("."))){const decimal=step.toString().match(/\.(\d+)/)?.[1].length;calcValue=+calcValue.toFixed(decimal)}return minValue+sliderValue===minValue&&calcValue!==minValue?minValue:minValue+sliderValue===maxValue&&calcValue!==maxValue?maxValue:calcValue})(trackWidth,Math.round(cursorPosition-trackLeft),minValue,maxValue,step);return newValue},exports.sortNum=arr=>arr[0]>arr[1]?[arr[1],arr[0]]:[arr[0],arr[1]];
//# sourceMappingURL=utils.cjs.js.map
