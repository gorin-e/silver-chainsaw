/// <reference types="react" />
export type PaginationTwoDimension = 'm' | 's';
export interface PaginationTwoProps extends Omit<React.HTMLAttributes<HTMLDivElement>, 'onChange'> {
    /** Размер компонента */
    dimension?: PaginationTwoDimension;
    /** Текущая страница */
    page: number;
    /** Колбек на изменение текущей страницы */
    onChange: (event: any, page: number) => void;
    /** Количество страниц */
    count?: number;
    /** Количество страниц, отображаемых по бокам от текущей страницы */
    siblingCount?: number;
    /** Количество страниц, отображаемых в начале и в конце компонента */
    boundaryCount?: number;
    /** Массив с номерами задизейбленных страниц */
    disabledPages?: Array<number>;
    /** Включение мобильной версии компонента */
    mobile?: boolean;
    /** Отображение кнопки "Дальше" в мобильной версии */
    showNextBtnMobile?: boolean;
    /** Отображение инпута, если страниц больше 21й  */
    showInput?: boolean;
    /** Размер страницы (сколько максимально умещается записей в одной странице) */
    pageSize?: number;
    /** Общее количество записей */
    totalItems?: number;
    /** Объект локализации - позволяет перезадать текстовые константы используемые в компоненте,
     * по умолчанию значения констант берутся из темы в соответствии с параметром currentLocale, заданном в теме
     **/
    locale?: {
        /** Placeholder инпута */
        inputPlaceholder?: string;
        /** Функция, возвращающая текст, поясняющий, какой диапазон записей сейчас отображается */
        itemRangeText?: (min: number, max: number, total: number) => string;
    };
}
export declare const PaginationTwo: React.FC<PaginationTwoProps>;
//# sourceMappingURL=index.d.ts.map