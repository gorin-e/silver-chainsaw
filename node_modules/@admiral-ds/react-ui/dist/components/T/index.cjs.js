"use strict";var jsxRuntime=require("react/jsx-runtime"),styled=require("styled-components");require("../themes/common/locales.cjs.js"),require("../Typography/typography.cjs.js"),require("../Typography/defaultTypographyMixin.cjs.js");var index=require("../themes/common/index.cjs.js"),animation=require("../skeleton/animation.cjs.js"),fixedForwardRef=require("../common/fixedForwardRef.cjs.js");function _interopDefault(e){return e&&e.__esModule?e:{default:e}}var styled__default=_interopDefault(styled);const skeletonMixin=styled.css`
  ${animation.skeletonAnimationMixin};
  pointer-events: none;
`,Tspan=styled__default.default.span`
  color: ${({$color,theme,$skeleton})=>{const cssVar=`--admiral-color-${$color?.replace("/","_").replaceAll(" ","")}`;return $skeleton?"transparent":$color?theme.color[$color]?`var(${cssVar}, ${theme.color[$color]})`:$color:`var(--admiral-color-Neutral_Neutral90, ${theme.color[index.DefaultFontColorName]})`}};
  ${p=>p.theme.typography[p.$font]};
  ${p=>p.$cssMixin?p.$cssMixin:""}
  ${p=>p.$skeleton&&skeletonMixin}
`,T=fixedForwardRef.fixedForwardRef(({font,color,cssMixin,skeleton,...props},ref)=>jsxRuntime.jsx(Tspan,{ref,...props,$font:font,$color:color,$cssMixin:cssMixin,$skeleton:skeleton}));T.displayName="T",exports.T=T;
//# sourceMappingURL=index.cjs.js.map
