import{useRef,useState,useLayoutEffect,useMemo,createElement}from"react";import{jsxs,jsx}from"react/jsx-runtime";import styled from"styled-components";import{uid}from"../common/uid.es.js";import{keyboardKey}from"../common/keyboardKey.es.js";import{MenuItem}from"../Menu/MenuItem.es.js";import{DropMenu}from"../DropMenu/index.es.js";import{passDropdownDataAttributes}from"../common/utils/splitDataAttributes.es.js";import{AvatarBase}from"../AvatarBase/index.es.js";const AvatarsBaseWrapper=styled.div`
  position: relative;
  display: flex;
  flex: 1 1 auto;
  width: 100%;
  white-space: nowrap;
  & > * {
    margin-left: -${p=>p.$withActivityRing?10:2}px;
  }
  & > *:first-child {
    margin-left: 0;
  }
`,AvatarBaseMenuItem=styled(MenuItem)`
  flex-flow: nowrap;
  justify-content: flex-start;
  & > button:first-child {
    margin-right: 8px;
  }
`,MenuAvatarBase=styled(AvatarBase)`
  cursor: pointer;
`,AvatarBaseGroup=({items,dimension="xl",appearance="neutral2",onAvatarSelect,menuWidth,menuMaxHeight,dropContainerCssMixin,dropContainerClassName,dropContainerStyle,withActivityRing=!1,...props})=>{const dropMenuProps=passDropdownDataAttributes(props),wrapperRef=useRef(null),[visibleItems,setVisibleItems]=useState(items.length),[hiddenItems,setHiddenItems]=useState(0),[selected,setSelected]=useState(void 0),WIDTH={xs:24,s:32,m:40,l:48,xl:56};useLayoutEffect(()=>{if(wrapperRef.current){const resizeObserver=new ResizeObserver(entries=>{entries.forEach(entry=>{const visibleItems=~~((entry.contentRect.width||0)/WIDTH[dimension]);setVisibleItems(visibleItems>=items.length?items.length:Math.max(visibleItems-1,0)),setHiddenItems(visibleItems>=items.length?0:items.length-visibleItems+1)})});return resizeObserver.observe(wrapperRef.current),()=>{resizeObserver.disconnect()}}},[dimension]);const visible=items.slice(0,visibleItems),hidden=items.slice(visibleItems,visibleItems+hiddenItems),modelHidden=useMemo(()=>hidden.map(({id:idProp,...item})=>{const id=idProp||uid();return{id,render:options=>jsxs(AvatarBaseMenuItem,{role:"option",id,dimension:"m",...options,children:[jsx(AvatarBase,{...item,userName:item.userName,dimension:"xs",appearance:item.appearance||appearance,showTooltip:!1,status:void 0,withActivityRing,showActivityRing:item.showActivityRing}),item.userName]},id)}}),[hidden]),handleSelectAvatar=id=>{onAvatarSelect?.(id),setSelected(id)},containsActiveAvatar=useMemo(()=>-1!=modelHidden.findIndex(item=>item.id===selected),[modelHidden,selected]);return jsxs(AvatarsBaseWrapper,{ref:wrapperRef,...props,$withActivityRing:withActivityRing,children:[1===items.length&&jsx(AvatarBase,{...items[0],dimension,withActivityRing}),items.length>1&&visible.map((item,index)=>{const id=item.id||uid(),last=index===items.length-1;return createElement(AvatarBase,{...item,userName:item.userName,key:id,id,onClick:e=>{item.onClick&&item.onClick(e),handleSelectAvatar(e.currentTarget.id)},onKeyDown:e=>{const code=keyboardKey.getCode(e);code!==keyboardKey.Enter&&code!==keyboardKey[" "]||(item.onKeyDown&&item.onKeyDown(e),handleSelectAvatar(e.currentTarget.id))},dimension,appearance:item.appearance||appearance,group:!last,status:void 0,withActivityRing})}),hiddenItems>0?jsx(DropMenu,{dimension:"m",menuWidth,menuMaxHeight,items:modelHidden,selected:containsActiveAvatar?selected:void 0,onSelectItem:handleSelectAvatar,disabled:!1,alignSelf:"flex-start",dropContainerCssMixin,dropContainerClassName,dropContainerStyle,...dropMenuProps,renderContentProp:({buttonRef,handleKeyDown,handleClick})=>jsx(MenuAvatarBase,{ref:buttonRef,userName:"+"+modelHidden.length,isMenuAvatar:!0,appearance,dimension,showTooltip:!1,onClick:handleClick,onKeyDown:handleKeyDown,className:"avatar-menu-with-dropdown",withActivityRing})}):null]})};AvatarBaseGroup.displayName="AvatarBaseGroup";export{AvatarBaseGroup};
//# sourceMappingURL=index.es.js.map
