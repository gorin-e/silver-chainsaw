"use strict";var jsxRuntime=require("react/jsx-runtime"),e=require("react"),uid=require("../../common/uid.cjs.js"),refSetter=require("../../common/utils/refSetter.cjs.js"),index=require("../../Field/index.cjs.js");require("../../input/TextInput/index.cjs.js"),require("../../input/DateInput/index.cjs.js"),require("../../input/SuggestInput/index.cjs.js"),require("../../input/Select/index.cjs.js"),require("../../input/TextArea/index.cjs.js"),require("../../input/TimeInput/index.cjs.js"),require("../../input/SliderInput/index.cjs.js"),require("../../input/FileUploader/index.cjs.js"),require("../../input/SliderRange/index.cjs.js"),require("../../input/NumberInput/index.cjs.js"),require("../../input/Container.cjs.js"),require("../../input/StatusIcon.cjs.js"),require("../../input/EditMode/index.cjs.js"),require("../../input/EditModeArea/index.cjs.js"),require("../../input/PhoneNumberInput/index.cjs.js"),require("../../input/InputEx/index.cjs.js"),require("../../input/FileInput/index.cjs.js"),require("../../input/FileInput/FileItem.cjs.js"),require("../../input/DateTime/index.cjs.js");var index$1=require("../../input/MultiInput/index.cjs.js");require("../../input/InputLine/index.cjs.js"),require("../../input/TreeSelect/index.cjs.js");var splitDataAttributes=require("../../common/utils/splitDataAttributes.cjs.js");function _interopNamespace(e){if(e&&e.__esModule)return e;var n=Object.create(null);return e&&Object.keys(e).forEach(function(k){if("default"!==k){var d=Object.getOwnPropertyDescriptor(e,k);Object.defineProperty(n,k,d.get?d:{enumerable:!0,get:function(){return e[k]}})}}),n.default=e,Object.freeze(n)}var e__namespace=_interopNamespace(e);const MultiInputField=e__namespace.forwardRef((props,ref)=>{const inputRef=e__namespace.useRef(null),{className,displayInline,status,required,extraText,label,id=uid.uid(),disabled,skeleton,...restProps}=props,fieldContainerProps={className,extraText,status,required,label,id,displayInline,disabled,inputRef,skeleton,"data-field-id":id,"data-field-name":restProps.name};splitDataAttributes.passFormFieldDataAttributes(restProps,fieldContainerProps),splitDataAttributes.passFormFieldContainerDataAttributes(restProps,fieldContainerProps);const inputProps={ref:refSetter.refSetter(ref,inputRef),id,status,disabled,skeleton,...restProps};return jsxRuntime.jsx(index.Field,{...fieldContainerProps,children:jsxRuntime.jsx(index$1.MultiInput,{...inputProps})})});MultiInputField.displayName="MultiInputField",exports.MultiInputField=MultiInputField;
//# sourceMappingURL=index.cjs.js.map
