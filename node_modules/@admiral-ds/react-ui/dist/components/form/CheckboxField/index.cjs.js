"use strict";var jsxRuntime=require("react/jsx-runtime"),e=require("react"),styled=require("styled-components"),splitDataAttributes=require("../../common/utils/splitDataAttributes.cjs.js"),uid=require("../../common/uid.cjs.js"),keyboardKey=require("../../common/keyboardKey.cjs.js"),style=require("./style.cjs.js"),index=require("../../Checkbox/index.cjs.js");function _interopDefault(e){return e&&e.__esModule?e:{default:e}}const StyledChekbox=_interopDefault(styled).default(index.Checkbox)`
  margin-top: 2px;
`,CheckboxField=e.forwardRef(({children,disabled=!1,readOnly=!1,hovered,dimension="m",error,indeterminate=!1,extraText,className,id:passedId,name,style:style$1,...props},ref)=>{const id=e.useMemo(()=>passedId||uid.uid(),[passedId]),fieldContainerProps={"data-field-id":id,"data-field-name":name};splitDataAttributes.passFormFieldContainerDataAttributes(props,fieldContainerProps);return jsxRuntime.jsxs(style.CheckboxComponentWrapper,{className,$dimension:dimension,disabled,readOnly,style:style$1,...fieldContainerProps,onClick:e=>{"INPUT"!==e.target.tagName&&e.stopPropagation()},children:[jsxRuntime.jsx(StyledChekbox,{...props,ref,disabled,readOnly,type:"checkbox",indeterminate,onKeyDown:e=>{if(readOnly){keyboardKey.keyboardKey.getCode(e)===keyboardKey.keyboardKey[" "]&&e.preventDefault()}props.onKeyDown?.(e)},"data-hovered":hovered,hovered,dimension,id,name,error}),children&&jsxRuntime.jsxs(style.CheckboxComponentLabel,{$dimension:dimension,disabled,children:[children,extraText&&jsxRuntime.jsx(style.CheckboxComponentHint,{disabled,$dimension:dimension,children:extraText})]})]})});CheckboxField.displayName="CheckboxField",exports.CheckboxField=CheckboxField;
//# sourceMappingURL=index.cjs.js.map
