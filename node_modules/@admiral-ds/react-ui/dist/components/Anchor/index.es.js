import{jsxs,jsx}from"react/jsx-runtime";import{forwardRef,useMemo,createRef,useState,useCallback,useRef,useEffect}from"react";import{AnchorContainer}from"./styled.es.js";import{AnchorItem}from"./AnchorItem.es.js";import{ActiveVerticalSelector}from"./ActiveVerticalSelector.es.js";import{getInternalCurrentAnchor}from"./utils.es.js";import{debounce}from"../common/utils/debounce.es.js";import{refSetter}from"../common/utils/refSetter.es.js";function getDefaultContainer(){return window}const treeToFlat=(tree,level=0,parent)=>tree.reduce((acc,item)=>{const key=item.key.toString(),{href,title}=item;if(acc.push({key,href,title,parent,level}),item.children&&(item=>!!item.children&&Array.isArray(item.children)&&item.children.length>0)(item)){const map=treeToFlat(item.children,level+1,key);return[...acc,...map]}return acc},[]),Anchor=forwardRef(({dimension="m",offsetTop=0,bounds=5,multilineView=!1,items,getAnchorContainer,...props},ref)=>{const getCurrentContainer=getAnchorContainer??getDefaultContainer,itemsMap=useMemo(()=>treeToFlat(items),[items]),itemsWithRef=useMemo(()=>itemsMap.map(item=>({...item,ref:createRef()})),[itemsMap]),[activeLink,setActiveLink]=useState(itemsMap[0]?.href||null),handleScroll=useCallback(()=>{const links=itemsMap.map(({href})=>href),container=getCurrentContainer(),activeLink=getInternalCurrentAnchor(container,links,offsetTop,bounds);setActiveLink(activeLink)},[getAnchorContainer,itemsMap]),anchorContainerRef=useRef(null),[selectorTop,setSelectorTop]=useState(0),[selectorHeight,setSelectorHeight]=useState(0),selectorRef=useRef(null),styleSelector=(top,height)=>{setSelectorTop(top),setSelectorHeight(height)};useEffect(()=>{if(anchorContainerRef.current?.firstElementChild){const resizeObserver=new ResizeObserver(debounce(function(){const activeLinkRef=itemsWithRef.filter(item=>item.href===activeLink)?.[0]?.ref.current,top=parseFloat(selectorRef.current?.style.top||"0"),selectorHeight=parseFloat(selectorRef.current?.style.height||"0");if(activeLinkRef&&anchorContainerRef.current){const activeLinkHeight=activeLinkRef.getBoundingClientRect().height,activeLinkTop=activeLinkRef.getBoundingClientRect().top-anchorContainerRef.current.getBoundingClientRect().top+anchorContainerRef.current.scrollTop;activeLinkTop===top&&activeLinkHeight===selectorHeight||styleSelector(activeLinkTop,activeLinkHeight)}activeLinkRef||styleSelector(0,0)},100));return resizeObserver.observe(anchorContainerRef.current?.firstElementChild),()=>{resizeObserver.disconnect()}}},[itemsWithRef,activeLink,dimension,multilineView,offsetTop,bounds]),useEffect(()=>{const container=getCurrentContainer();return container.addEventListener("scroll",handleScroll),()=>{container.removeEventListener("scroll",handleScroll)}},[getAnchorContainer,handleScroll]);return jsxs(AnchorContainer,{...props,ref:refSetter(ref,anchorContainerRef),children:[itemsWithRef.map(item=>jsx(AnchorItem,{ref:item.ref,dimension,multilineView,href:item.href,active:item.href===activeLink,level:item.level,children:item.title},item.key)),jsx(ActiveVerticalSelector,{$top:selectorTop,$height:selectorHeight,$transition:!0})]})});Anchor.displayName="Anchor";export{Anchor};
//# sourceMappingURL=index.es.js.map
