"use strict";var jsxRuntime=require("react/jsx-runtime"),styled=require("styled-components");function _interopDefault(e){return e&&e.__esModule?e:{default:e}}var styled__default=_interopDefault(styled);const AnimationS=styled.keyframes`
 0% {
    width: 6px;
    height: 6px;
    opacity: 100%;
    border-width: 1px;
    filter: blur(0.33px);
  }

  80% {
    width: 20px;
    height: 20px;
    opacity: 0%;
    border-width: 1.5px;
    filter: blur(0.66px);
  }

  100% {
    opacity: 0%;
  }
`,AnimationM=styled.keyframes`
 0% {
    width: 10px;
    height: 10px;
    opacity: 100%;
    border-width: 1px;
    filter: blur(0.33px);
  }
  80% {
    width: 28px;
    height: 28px;
    opacity: 0%;
    border-width: 2px;
    filter: blur(1px);
  }
  100% {
    opacity: 0%;
  }
`,AnimationL=styled.keyframes`
 0% {
    width: 14px;
    height: 14px;
    opacity: 100%;
    border-width: 1px;
    filter: blur(0.33px);
  }
  80% {
    width: 36px;
    height: 36px;
    opacity: 0%;
    border-width: 3px;
    filter: blur(1.33px);
  }
  100% {
    opacity: 0%;
  }
`,getPulseColor=styled.css`
  ${({theme,$status})=>{switch($status){case"danger":return`var(--admiral-color-Error_Error60Main, ${theme.color["Error/Error 60 Main"]})`;case"success":return`var(--admiral-color-Success_Success50Main, ${theme.color["Success/Success 50 Main"]})`;case"warning":return`var(--admiral-color-Warning_Warning50Main, ${theme.color["Warning/Warning 50 Main"]})`;case"info":return`var(--admiral-color-Primary_Primary60Main, ${theme.color["Primary/Primary 60 Main"]})`;default:return $status?.background||`var(--admiral-color-Primary_Primary60Main, ${theme.color["Primary/Primary 60 Main"]})`}}}
`,PulseElement=styled__default.default.div`
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
  block-size: ${p=>"l"==p.$dimension?16:"m"==p.$dimension?12:8}px;
  inline-size: ${p=>"l"==p.$dimension?16:"m"==p.$dimension?12:8}px;
  border-radius: 50%;
  background-color: ${getPulseColor};

  &:before {
    position: absolute;
    content: '';
    background-color: transparent;
    border-radius: 50%;
    border-style: solid;
    border-color: ${getPulseColor};
    box-sizing: border-box;
    animation-name: ${p=>"l"==p.$dimension?AnimationL:"m"==p.$dimension?AnimationM:AnimationS};
    animation-duration: 2500ms;
    animation-timing-function: cubic-bezier(0, 0, 0.58, 1);
    animation-iteration-count: infinite;
  }

  ${p=>p.$cssMixin}
`;exports.Pulse=({dimension="m",status="info",cssMixin,...props})=>jsxRuntime.jsx(PulseElement,{$dimension:dimension,$status:status,$cssMixin:cssMixin,...props});
//# sourceMappingURL=index.cjs.js.map
