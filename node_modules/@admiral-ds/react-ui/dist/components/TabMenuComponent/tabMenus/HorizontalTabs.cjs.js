"use strict";var jsxRuntime=require("react/jsx-runtime"),e=require("react"),ActiveHorizontalTabSelector=require("../containerElements/ActiveHorizontalTabSelector.cjs.js");require("../containerElements/ActiveVerticalTabSelector.cjs.js"),require("../containerElements/SlideArrowButton.cjs.js"),require("../containerElements/HorizontalTabOverflowMenu.cjs.js"),require("../containerElements/VerticalTabOverflowMenu.cjs.js"),require("../containerElements/HorizontalAddTabButton.cjs.js"),require("../containerElements/VerticalAddTabButton.cjs.js"),require("../containers/HorizontalTabMenuContainer.cjs.js"),require("../containers/IconTabMenuContainer.cjs.js");var HorizontalTabsContainer=require("../containers/HorizontalTabsContainer.cjs.js");require("../containers/VerticalTabMenuContainer.cjs.js"),require("../containers/HorizontalCardTabMenuContainer.cjs.js");var utils=require("../utils.cjs.js");const HorizontalTabs=({dimension="l",showUnderline,selectedTabId,defaultSelectedTabId,onSelectTab,tabsId,renderTab,tabIsDisabled,...props})=>{const containerRef=e.useRef(null),[selectedTabInner,setSelectedTabInner]=e.useState(defaultSelectedTabId),selectedTab=selectedTabId||selectedTabInner,handleSelectTab=tabId=>{tabIsDisabled(tabId)||(setSelectedTabInner(tabId),onSelectTab?.(tabId))},horizontalTabs=e.useMemo(()=>tabsId.map(tabId=>renderTab(tabId,tabId===selectedTab,handleSelectTab)),[tabsId,renderTab,dimension]),[tabWidthMap,setTabWidthMap]=e.useState([]);e.useEffect(()=>{if(containerRef.current){const tabWidth=utils.getTabWidthMap(tabsId,containerRef.current.children);setTabWidthMap(tabWidth)}},[containerRef,horizontalTabs]);const[underlineLeft,setUnderlineLeft]=e.useState(0),[underlineWidth,setUnderlineWidth]=e.useState(0);return e.useEffect(()=>{(()=>{const{left,width}=utils.getUnderlinePosition(tabWidthMap,selectedTabId);setUnderlineWidth(width),setUnderlineLeft(left)})()},[selectedTab,tabWidthMap]),jsxRuntime.jsxs(HorizontalTabsContainer.HorizontalTabsContainer,{...props,ref:containerRef,$showUnderline:showUnderline,children:[horizontalTabs,jsxRuntime.jsx(ActiveHorizontalTabSelector.ActiveHorizontalTabSelector,{$left:`${underlineLeft}px`,$width:`${underlineWidth}px`,$transition:!0})]})};HorizontalTabs.displayName="HorizontalTabs",exports.HorizontalTabs=HorizontalTabs;
//# sourceMappingURL=HorizontalTabs.cjs.js.map
