import{jsxs,jsx}from"react/jsx-runtime";import{useRef,useState,useLayoutEffect,useMemo,useEffect}from"react";import styled from"styled-components";import{debounce}from"../../common/utils/debounce.es.js";import{ReactComponent as SvgArrowLeftOutline}from"../../../node_modules/@admiral-ds/icons/build/system/ArrowLeftOutline.svg.es.js";import{ReactComponent as SvgArrowRightOutline}from"../../../node_modules/@admiral-ds/icons/build/system/ArrowRightOutline.svg.es.js";import"../containers/HorizontalTabMenuContainer.es.js";import{IconTabMenuWrapper,IconTabMenuScrollingContainerWrapper,IconTabMenuScrollingContainer}from"../containers/IconTabMenuContainer.es.js";import"../containers/HorizontalTabsContainer.es.js";import"../containers/VerticalTabMenuContainer.es.js";import"../containers/HorizontalCardTabMenuContainer.es.js";import{ActiveHorizontalTabSelector}from"../containerElements/ActiveHorizontalTabSelector.es.js";import"../containerElements/ActiveVerticalTabSelector.es.js";import{SlideArrowButton}from"../containerElements/SlideArrowButton.es.js";import"../containerElements/HorizontalTabOverflowMenu.es.js";import"../containerElements/VerticalTabOverflowMenu.es.js";import"../containerElements/HorizontalAddTabButton.es.js";import"../containerElements/VerticalAddTabButton.es.js";import{getTabWidthMap,getUnderlinePosition}from"../utils.es.js";const StyledSlideArrow=styled(SlideArrowButton)`
  position: absolute;
  top: 18px;
  ${p=>"left"===p.$direction?"left: 0":"right: 0"};
`,TabMenuIcon=({showUnderline,selectedTabId,defaultSelectedTabId,onSelectTab,tabsId,renderTab,tabIsDisabled,scrollStep=160,...props})=>{const scrollingContainerRef=useRef(null),[scrollingContainerLeft,setScrollingContainerLeft]=useState(0),[scrolledToRight,setScrolledToRight]=useState(!1),[prevDisabled,setPrevDisabled]=useState(!0),[nextDisabled,setNextDisabled]=useState(!1);useLayoutEffect(()=>{if(!scrollingContainerRef.current)return;const parent=scrollingContainerRef.current.parentElement;setPrevDisabled(0===scrollingContainerLeft);const newNextDisabled=scrollingContainerLeft+parent.clientWidth>=scrollingContainerRef.current.scrollWidth;setNextDisabled(newNextDisabled),setScrolledToRight(newNextDisabled)});const[selectedTabInner,setSelectedTabInner]=useState(defaultSelectedTabId),selectedTab=selectedTabId||selectedTabInner,handleSelectTab=tabId=>{tabIsDisabled(tabId)||(setSelectedTabInner(tabId),onSelectTab?.(tabId))},iconTabs=useMemo(()=>tabsId.map(tabId=>renderTab(tabId,tabId===selectedTab,handleSelectTab)),[tabsId,renderTab]),[tabWidthMap,setTabWidthMap]=useState([]);useEffect(()=>{if(scrollingContainerRef.current?.firstElementChild){const resizeObserver=new ResizeObserver(debounce(function(){if(scrollingContainerRef.current){const tabWidth=getTabWidthMap(tabsId,scrollingContainerRef.current.children);setTabWidthMap(tabWidth)}},100));return resizeObserver.observe(scrollingContainerRef.current?.firstElementChild),()=>{resizeObserver.disconnect()}}},[scrollingContainerRef,iconTabs]);const[underlineLeft,setUnderlineLeft]=useState(0),[underlineWidth,setUnderlineWidth]=useState(0);return useEffect(()=>{(()=>{const{left,width}=getUnderlinePosition(tabWidthMap,selectedTabId);setUnderlineWidth(width),setUnderlineLeft(left)})()},[selectedTab,tabWidthMap]),jsxs(IconTabMenuWrapper,{...props,children:[jsx(IconTabMenuScrollingContainerWrapper,{children:jsxs(IconTabMenuScrollingContainer,{$showUnderline:showUnderline,ref:scrollingContainerRef,$leftValue:scrolledToRight?`${scrollingContainerLeft}px`:0,$floatValue:scrolledToRight?"inline-end":"inline-start",$translateXValue:-scrollingContainerLeft+"px",children:[iconTabs,jsx(ActiveHorizontalTabSelector,{$left:`${underlineLeft}px`,$width:`${underlineWidth}px`,$transition:!0})]})}),!prevDisabled&&jsx(StyledSlideArrow,{$direction:"left",onClick:()=>{scrolledToRight&&setScrolledToRight(!1),setScrollingContainerLeft(prev=>prev-scrollStep<0?0:prev-scrollStep)},children:jsx(SvgArrowLeftOutline,{})}),!nextDisabled&&jsx(StyledSlideArrow,{$direction:"right",onClick:()=>{if(!scrollingContainerRef.current)return;const parent=scrollingContainerRef.current.parentElement,newValue=scrollingContainerLeft+scrollStep,maxValue=scrollingContainerRef.current.scrollWidth-parent.clientWidth;(newValue>maxValue?maxValue:newValue)===maxValue&&setScrolledToRight(!0),setScrollingContainerLeft(newValue>maxValue?maxValue:newValue)},children:jsx(SvgArrowRightOutline,{})})]})};TabMenuIcon.displayName="TabMenuIcon";export{TabMenuIcon};
//# sourceMappingURL=TabMenuIcon.es.js.map
