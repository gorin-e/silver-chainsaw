"use strict";var jsxRuntime=require("react/jsx-runtime"),e=require("react"),styled=require("styled-components");require("../containers/HorizontalTabMenuContainer.cjs.js"),require("../containers/IconTabMenuContainer.cjs.js"),require("../containers/HorizontalTabsContainer.cjs.js");var VerticalTabMenuContainer=require("../containers/VerticalTabMenuContainer.cjs.js");require("../containers/HorizontalCardTabMenuContainer.cjs.js"),require("../containerElements/ActiveHorizontalTabSelector.cjs.js");var ActiveVerticalTabSelector=require("../containerElements/ActiveVerticalTabSelector.cjs.js");require("../containerElements/SlideArrowButton.cjs.js"),require("../containerElements/HorizontalTabOverflowMenu.cjs.js");var VerticalTabOverflowMenu=require("../containerElements/VerticalTabOverflowMenu.cjs.js");require("../containerElements/HorizontalAddTabButton.cjs.js");var VerticalAddTabButton=require("../containerElements/VerticalAddTabButton.cjs.js"),constants=require("../constants.cjs.js");function _interopDefault(e){return e&&e.__esModule?e:{default:e}}const Wrapper=_interopDefault(styled).default.div`
  flex: 1 1 auto;
  overflow: hidden;
`,TabMenuVertical=({dimension="l",showUnderline,underlinePosition="right",selectedTabId,defaultSelectedTabId,onSelectTab,onAddTab,tabsId,renderTab,renderDropMenuItem,tabIsDisabled,alignSelf,menuWidth,menuMaxHeight,dropContainerCssMixin,dropContainerClassName,dropContainerStyle,isVisible,onVisibilityChange,active,onActivateItem,disableSelectedOptionHighlight,renderTopPanel,renderBottomPanel,onForwardCycleApprove,onBackwardCycleApprove,onClickOutside,appearance,...props})=>{const dropProps={alignSelf,menuWidth,menuMaxHeight,dropContainerCssMixin,dropContainerClassName,dropContainerStyle,isVisible,onVisibilityChange,active,onActivateItem,disableSelectedOptionHighlight,renderTopPanel,renderBottomPanel,onForwardCycleApprove,onBackwardCycleApprove,onClickOutside},containerRef=e.useRef(null),[containerHeight,setContainerHeight]=e.useState(0),[maxTabs,setMaxTabs]=e.useState(0);e.useLayoutEffect(()=>{if(containerRef.current){const resizeObserver=new ResizeObserver(entries=>{entries.forEach(entry=>setContainerHeight(entry.contentRect.height||0))});return resizeObserver.observe(containerRef.current),()=>{resizeObserver.disconnect()}}},[]),e.useEffect(()=>{if(containerRef.current){const addTabButtonHeight=showAddTabButton?("l"===dimension?constants.VERTICAL_ADD_TAB_BUTTON_CONTAINER_SIZE_L:constants.VERTICAL_ADD_TAB_BUTTON_CONTAINER_SIZE_M)+constants.VERTICAL_TABS_GAP:0,newMaxTabs=Math.floor((containerHeight+constants.VERTICAL_TABS_GAP-addTabButtonHeight)/(("l"===dimension?constants.BASE_TAB_HEIGHT_L:constants.BASE_TAB_HEIGHT_M)+constants.VERTICAL_TABS_GAP));setMaxTabs(newMaxTabs)}},[containerRef,containerHeight,dimension,tabsId]);const showAddTabButton=!!onAddTab,[selectedTabInner,setSelectedTabInner]=e.useState(defaultSelectedTabId),selectedTab=selectedTabId||selectedTabInner,handleSelectTab=tabId=>{tabIsDisabled(tabId)||(setSelectedTabInner(tabId),onSelectTab?.(tabId))},[visibleTabs,setVisibleTabs]=e.useState([]),[hiddenTabs,setHiddenTabs]=e.useState([]);e.useLayoutEffect(()=>{const maxHeight=containerHeight,allTabsVisible=tabsId.length<=maxTabs,newVisibleTabs=[],newHiddenTabs=[],tabHeight="l"===dimension?constants.BASE_TAB_HEIGHT_L:constants.BASE_TAB_HEIGHT_M,availableHeight=maxHeight-(allTabsVisible?0:("l"===dimension?constants.VERTICAL_OVERFLOW_MENU_CONTAINER_SIZE_L:constants.VERTICAL_OVERFLOW_MENU_CONTAINER_SIZE_M)+constants.VERTICAL_TABS_GAP+tabHeight)-(showAddTabButton?("l"===dimension?constants.VERTICAL_ADD_TAB_BUTTON_CONTAINER_SIZE_L:constants.VERTICAL_ADD_TAB_BUTTON_CONTAINER_SIZE_M)+constants.VERTICAL_TABS_GAP:0);let availableTabs=Math.floor((availableHeight+constants.VERTICAL_TABS_GAP)/(tabHeight+constants.VERTICAL_TABS_GAP));tabsId.forEach(tabId=>{const tabIsActive=tabId===selectedTab;(availableTabs>0||tabIsActive)&&(tabId=>{newVisibleTabs.push(tabId)})(tabId),0===availableTabs&&(tabId=>{newHiddenTabs.push(tabId)})(tabId),availableTabs>0&&(tabIsActive||(availableTabs-=1))}),setVisibleTabs(newVisibleTabs),setHiddenTabs(newHiddenTabs)},[maxTabs,selectedTab,containerHeight,tabsId]);const renderedVisibleTabs=e.useMemo(()=>0===visibleTabs.length?[]:visibleTabs.map(tabId=>renderTab(tabId,tabId===selectedTab,handleSelectTab)),[visibleTabs,dimension]),overflowMenuItems=e.useMemo(()=>0===hiddenTabs.length?[]:hiddenTabs.map(tabId=>({id:tabId,render:renderDropMenuItem(tabId),disabled:tabIsDisabled(tabId)})),[hiddenTabs,dimension]),[underlineTop,setUnderlineTop]=e.useState(0),[underlineHeight,setUnderlineHeight]=e.useState(0),styleUnderlineL=()=>{const{top,height}=(()=>{const index=visibleTabs.findIndex(tab=>tab===selectedTab);if(index<0)return{top:0,height:0};const height="l"===dimension?constants.BASE_TAB_HEIGHT_L:constants.BASE_TAB_HEIGHT_M;return{top:index*(height+constants.VERTICAL_TABS_GAP),height}})();setUnderlineHeight(height),setUnderlineTop(top)};return e.useEffect(()=>{styleUnderlineL()},[selectedTab,renderedVisibleTabs]),jsxRuntime.jsx(Wrapper,{children:jsxRuntime.jsxs(VerticalTabMenuContainer.VerticalTabMenuContainer,{...props,ref:containerRef,$underlinePosition:underlinePosition,$showUnderline:showUnderline,children:[renderedVisibleTabs,showAddTabButton&&jsxRuntime.jsx(VerticalAddTabButton.VerticalAddTabButton,{dimension,onClick:onAddTab}),jsxRuntime.jsx(VerticalTabOverflowMenu.VerticalTabOverflowMenu,{...dropProps,items:overflowMenuItems,onSelectItem:handleSelectTab,selected:selectedTab,dimension,isHidden:0===hiddenTabs.length}),jsxRuntime.jsx(ActiveVerticalTabSelector.ActiveVerticalTabSelector,{$appearance:appearance,$top:`${underlineTop}px`,$height:`${underlineHeight}px`,$transition:!0,$underlinePosition:underlinePosition})]})})};TabMenuVertical.displayName="TabMenuVertical",exports.TabMenuVertical=TabMenuVertical;
//# sourceMappingURL=TabMenuVertical.cjs.js.map
