"use strict";exports.setHorizontalPosition=(rect,targetRect,viewportWidth)=>{const rectWidth=rect.right-rect.left,targetInsideViewport=targetRect.left>=0&&targetRect.right<=viewportWidth,targetBeforeViewport=targetRect.right<=0,targetAfterViewport=targetRect.left>=viewportWidth,targetCrossLeftViewport=targetRect.left<0&&0<targetRect.right&&targetRect.right<viewportWidth,targetCrossRightViewport=targetRect.right>viewportWidth&&0<targetRect.left&&targetRect.left<viewportWidth;if(targetInsideViewport){const enoughWidthOnTheRight=viewportWidth-targetRect.left>=rectWidth,enoughWidthOnTheLeft=targetRect.right>=rectWidth,containerWiderTarget=rectWidth>targetRect.width;if(!enoughWidthOnTheLeft&&!enoughWidthOnTheRight)return{align:"flex-end",translateX:viewportWidth-targetRect.right-16+"px"};if(enoughWidthOnTheLeft&&enoughWidthOnTheRight)return{align:"flex-end",translateX:"0"};if(containerWiderTarget&&!enoughWidthOnTheLeft&&enoughWidthOnTheRight)return{align:"flex-start",translateX:"0"};if(containerWiderTarget&&!enoughWidthOnTheRight&&enoughWidthOnTheLeft)return{align:"flex-end",translateX:"0"}}else{if(targetBeforeViewport||targetCrossLeftViewport)return{align:"flex-start",translateX:0-targetRect.left+16+"px"};if(targetAfterViewport||targetCrossRightViewport)return{align:"flex-end",translateX:viewportWidth-targetRect.right-16+"px"}}return{align:"",translateX:"0"}},exports.setVerticalPosition=(rect,targetRect,viewportHeight)=>{const rectHeight=rect.bottom-rect.top+8,enoughHeightOnTheTop=targetRect.top>=rectHeight,enoughHeightOnTheBottom=viewportHeight-targetRect.bottom>=rectHeight,targetInsideViewport=targetRect.top>=0&&targetRect.bottom<=viewportHeight,targetAboveViewport=targetRect.bottom<=0,targetUnderViewport=targetRect.top>=viewportHeight,targetCrossTopViewport=targetRect.top<0&&0<targetRect.bottom&&targetRect.bottom<viewportHeight,targetCrossBottomViewport=0<targetRect.top&&targetRect.top<viewportHeight&&targetRect.bottom>viewportHeight;if(targetInsideViewport){if(!enoughHeightOnTheTop&&!enoughHeightOnTheBottom)return{upward:!1,translateY:viewportHeight-targetRect.bottom-rectHeight-16+"px"};if(enoughHeightOnTheTop&&enoughHeightOnTheBottom)return{upward:!1,translateY:"0"};if(!enoughHeightOnTheTop&&enoughHeightOnTheBottom)return{upward:!1,translateY:"0"};if(enoughHeightOnTheTop&&!enoughHeightOnTheBottom)return{upward:!0,translateY:"0"}}else{if(targetAboveViewport)return{upward:!1,translateY:0-targetRect.bottom+8+"px"};if(targetUnderViewport)return{upward:!0,translateY:viewportHeight-targetRect.top-8+"px"};if(targetCrossTopViewport)return enoughHeightOnTheBottom?{upward:!1,translateY:"0"}:{upward:!1,translateY:0-targetRect.bottom+8+"px"};if(targetCrossBottomViewport)return enoughHeightOnTheTop?{upward:!0,translateY:"0"}:{upward:!0,translateY:""+(viewportHeight-targetRect.top-8)}}return{upward:!1,translateY:"0"}};
//# sourceMappingURL=utils.cjs.js.map
