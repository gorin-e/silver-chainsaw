import type { CSSProperties, HTMLAttributes } from 'react';
import type { css } from 'styled-components';
export interface DropContainerStyles {
    /**
     *  Позволяет выравнивать контейнер с компонентами относительно тарджет компонента
     *  https://developer.mozilla.org/en-US/docs/Web/CSS/align-self
     */
    alignSelf?: 'auto' | 'flex-start' | 'flex-end' | 'center' | 'baseline' | 'stretch';
    /** Позволяет добавлять миксин для выпадающих меню, созданный с помощью styled css  */
    dropContainerCssMixin?: ReturnType<typeof css>;
    /** Позволяет добавлять класс на контейнер выпадающего меню  */
    dropContainerClassName?: string;
    /** Позволяет добавлять стили на контейнер выпадающего меню  */
    dropContainerStyle?: CSSProperties;
}
export interface DropContainerProps {
    /**
     *  Позволяет обработать событие возникшее при клике вне компонента и его детей, включая другие DropContainer
     */
    onClickOutside?: (e: Event) => void;
}
export interface DropdownContainerProps extends HTMLAttributes<HTMLDivElement>, DropContainerProps, Omit<DropContainerStyles, 'dropContainerClassName' | 'dropContainerStyle'> {
    /** Элемент, относительно которого позиционируется выпадающее меню */
    targetElement: Element | null;
}
export declare const DropdownContainer: import("react").ForwardRefExoticComponent<DropdownContainerProps & {
    children?: import("react").ReactNode;
} & import("react").RefAttributes<HTMLDivElement>>;
export declare const StyledDropdownContainer: import("styled-components/dist/types").IStyledComponentBase<"web", import("styled-components").FastOmit<Omit<DropdownContainerProps & {
    children?: import("react").ReactNode;
} & import("react").RefAttributes<HTMLDivElement>, "ref"> & {
    ref?: import("react").RefObject<HTMLDivElement> | ((instance: HTMLDivElement | null) => void) | null | undefined;
}, never>> & string & Omit<import("react").ForwardRefExoticComponent<DropdownContainerProps & {
    children?: import("react").ReactNode;
} & import("react").RefAttributes<HTMLDivElement>>, keyof import("react").Component<any, {}, any>>;
//# sourceMappingURL=index.d.ts.map