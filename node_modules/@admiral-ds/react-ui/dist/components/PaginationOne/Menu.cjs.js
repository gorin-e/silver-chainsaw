"use strict";var jsxRuntime=require("react/jsx-runtime"),e=require("react"),styled=require("styled-components"),typography=require("../Typography/typography.cjs.js");require("../Typography/defaultTypographyMixin.cjs.js");var borderRadius=require("../themes/borderRadius.cjs.js"),index=require("../DropMenu/index.cjs.js"),MenuItem=require("../Menu/MenuItem.cjs.js"),refSetter=require("../common/utils/refSetter.cjs.js");function _interopDefault(e){return e&&e.__esModule?e:{default:e}}var styled__default=_interopDefault(styled);const Button=styled__default.default.button`
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
  height: ${p=>"s"===p.$dimension?32:40}px;
  padding: 10px 12px;
  border: 2px solid transparent;
  border-radius: var(--admiral-border-radius-Medium, ${p=>borderRadius.mediumGroupBorderRadius(p.theme.shape)});
  appearance: none;
  -webkit-tap-highlight-color: transparent;
  background-color: transparent;
  ${typography.typography["Body/Body 2 Long"]}
  color: var(--admiral-color-Neutral_Neutral90, ${p=>p.theme.color["Neutral/Neutral 90"]});
  & *[fill^='#'] {
    fill: var(--admiral-color-Neutral_Neutral50, ${p=>p.theme.color["Neutral/Neutral 50"]});
  }
  & > span {
    min-width: 20px;
  }

  &:hover {
    cursor: pointer;
    & *[fill^='#'] {
      fill: var(--admiral-color-Primary_Primary70, ${p=>p.theme.color["Primary/Primary 70"]});
    }
  }

  &:active {
    & *[fill^='#'] {
      fill: var(--admiral-color-Neutral_Neutral50, ${p=>p.theme.color["Neutral/Neutral 50"]});
    }
  }

  &:focus-visible {
    outline: none;
    border-color: var(--admiral-color-Primary_Primary60Main, ${p=>p.theme.color["Primary/Primary 60 Main"]});
  }

  &:disabled {
    cursor: not-allowed;
    color: var(--admiral-color-Neutral_Neutral30, ${p=>p.theme.color["Neutral/Neutral 30"]});
    & *[fill^='#'] {
      fill: var(--admiral-color-Neutral_Neutral30, ${p=>p.theme.color["Neutral/Neutral 30"]});
    }
  }
`,Icon=styled__default.default.div`
  width: 20px;
  height: 20px;
`,MenuButton=e.forwardRef(({children,disabled=!1,dimension="m",options,selected,onSelectItem=()=>{},active,onActivateItem=()=>{},menuMaxHeight,dropContainerCssMixin,dropContainerClassName,dropContainerStyle,menuWidth,dropMenuDataAttributes,className="",isVisible,onVisibilityChange,onClickOutside,onClick,renderTopPanel,renderBottomPanel,onForwardCycleApprove,onBackwardCycleApprove,...props},ref)=>{const dropMenuProps={...dropMenuDataAttributes,renderTopPanel,renderBottomPanel,isVisible,onVisibilityChange,onClickOutside,selected,onSelectItem,active,onActivateItem,menuMaxHeight,menuWidth,dropContainerCssMixin,dropContainerClassName,dropContainerStyle,onForwardCycleApprove,onBackwardCycleApprove},model=e.useMemo(()=>options.map(item=>{const id=item.toString();return{id,render:items=>e.createElement(MenuItem.MenuItem,{dimension:"s",...items,key:id},item)}}),[options]);return jsxRuntime.jsx(index.DropMenu,{...dropMenuProps,items:model,dimension:"s",virtualScroll:{itemHeight:"auto"},alignSelf:menuWidth?"flex-end":"stretch",disabled,renderContentProp:({buttonRef,handleKeyDown,handleClick,statusIcon,menuState})=>jsxRuntime.jsxs(Button,{...props,$dimension:dimension,ref:refSetter.refSetter(ref,buttonRef),disabled,$menuOpened:menuState,onKeyDown:handleKeyDown,onClick:onClick||handleClick,"aria-expanded":menuState,type:"button",className,children:[jsxRuntime.jsx("span",{children}),jsxRuntime.jsx(Icon,{children:statusIcon})]})})});exports.MenuButton=MenuButton;
//# sourceMappingURL=Menu.cjs.js.map
