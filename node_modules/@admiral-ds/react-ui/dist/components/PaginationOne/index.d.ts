import type { FC, HTMLAttributes } from 'react';
import type { DataAttributes } from 'styled-components';
import { css } from 'styled-components';
import { Button } from '../../components/Button';
import type { DropMenuStyleProps } from '../../components/DropMenu';
export type PaginationOneDimension = 'm' | 's';
export interface PaginationOneProps extends Omit<HTMLAttributes<HTMLDivElement>, 'onChange'> {
    /** Размер компонента */
    dimension?: PaginationOneDimension;
    /** Колбек, который срабатывает при изменении номера  страницы или размера страницы */
    onChange: (result: {
        page: number;
        pageSize: number;
    }) => void;
    /** Номер текущей страницы */
    page: number;
    /** Размер текущей страницы (сколько записей умещается в одной странице) */
    pageSize: number;
    /** Общее количество записей */
    totalItems: number;
    /** Массив с вариантами размеров страницы */
    pageSizes: Array<number>;
    /** Блокировка выбора страницы */
    pageSelectDisabled?: boolean;
    /** Блокировка выбора количества записей на странице */
    pageSizeSelectDisabled?: boolean;
    /** Отображение компонента в упрощенном варианте, применяется в мобильных версиях */
    simple?: boolean;
    /**
     * @deprecated Помечено как deprecated в версии 8.10.0, будет удалено в версии 10.х.х.
     * Взамен используйте параметры pageSizeDropContainerStyle.menuMaxHeight и
     * pageNumberDropContainerStyle.menuMaxHeight.
     *
     * Задает максимальную высоту выпадающих меню */
    dropMaxHeight?: string | number;
    /**
     * @deprecated Помечено как deprecated в версии 8.10.0, будет удалено в версии 10.х.х.
     * Взамен используйте параметры pageSizeDropContainerStyle.menuWidth и
     * pageNumberDropContainerStyle.menuWidth.
     *
     * Позволяет задать ширину выпадающего списка */
    menuWidth?: string;
    /**
     * @deprecated Помечено как deprecated в версии 4.8.0, будет удалено в версии 9.х.х.
     * Взамен используйте параметры pageSizeDropContainerStyle.dropContainerCssMixin и
     * pageNumberDropContainerStyle.dropContainerCssMixin.
     *
     * Позволяет добавлять миксин для выпадающих меню, созданный с помощью styled css  */
    dropContainerCssMixin?: ReturnType<typeof css>;
    /** Позволяет добавлять стили и className для выпадающего меню кнопки настройки видимости колонок  */
    pageSizeDropContainerStyle?: Omit<DropMenuStyleProps, 'alignSelf'>;
    /** Позволяет добавлять стили и className для выпадающего меню кнопки настроек  */
    pageNumberDropContainerStyle?: Omit<DropMenuStyleProps, 'alignSelf'>;
    /** Включает окно ввода номера страницы в выпадающем списке */
    showPageNumberInput?: boolean;
    /** Объект локализации - позволяет перезадать текстовые константы используемые в компоненте,
     * по умолчанию значения констант берутся из темы в соответствии с параметром currentLocale, заданном в теме
     **/
    locale?: {
        /** Текст, описывающий сколько записей размещено на одной странице */
        itemsPerPageText?: string;
        /** Функция, возвращающая текст, описывающий селект с выбором номера страницы */
        pageSelectLabel?: (...props: any) => string;
        /** Функция, возвращающая текст, описывающий селект с выбором размера страницы */
        pageSizeSelectLabel?: (...props: any) => string;
        /** Функция, возвращающая текст, поясняющий, какой диапазон записей сейчас отображается */
        itemRangeText?: (...props: any) => string;
        /** Функция, возвращающая текст, поясняющий, из какого количества страниц выбрана текущая */
        pageRangeText?: (...props: any) => string;
        /** Текст, описывающий кнопку переключения назад (атрибут aria-label) */
        backwardText?: string;
        /** Текст, описывающий кнопку переключения вперед (атрибут aria-label) */
        forwardText?: string;
    };
    /** Конфиг функция пропсов для левой кнопки. На вход получает начальный набор пропсов, на
     * выход должна отдавать объект с пропсами, которые будут внедряться после оригинальных пропсов. */
    leftButtonPropsConfig?: (props: React.ComponentProps<typeof Button>) => Partial<React.ComponentProps<typeof Button> & DataAttributes>;
    /** Конфиг функция пропсов для правой кнопки. На вход получает начальный набор пропсов, на
     * выход должна отдавать объект с пропсами, которые будут внедряться после оригинальных пропсов. */
    rightButtonPropsConfig?: (props: React.ComponentProps<typeof Button>) => Partial<React.ComponentProps<typeof Button> & DataAttributes>;
}
export declare const PaginationOne: FC<PaginationOneProps>;
//# sourceMappingURL=index.d.ts.map