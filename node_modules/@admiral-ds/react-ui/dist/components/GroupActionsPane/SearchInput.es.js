import{jsxs,jsx}from"react/jsx-runtime";import styled,{css,useTheme}from"styled-components";import*as e from"react";import{useRef,useState,useEffect}from"react";import{typography}from"../Typography/typography.es.js";import"../Typography/defaultTypographyMixin.es.js";import{refSetter}from"../common/utils/refSetter.es.js";import{LIGHT_THEME}from"../themes/light/index.es.js";import"../themes/common/locales.es.js";const collapsedMixin=css`
  max-width: ${({$dimension})=>"s"===$dimension?"240px":"276px"};
  overflow: hidden;
  white-space: nowrap;
  z-index: 1;
  &::after {
    background-color: var(--admiral-color-Neutral_Neutral20, ${p=>p.theme.color["Neutral/Neutral 20"]});
  }
`,InputWrapper=styled.div`
  display: flex;
  flex: 1 0 auto;
  flex: ${({$visibleInput})=>$visibleInput?"1 0 auto":"0 0 auto"};
  height: 100%;
  position: relative;
  background-color: transparent;
  align-items: center;
  padding-right: 4px;
  &::after {
    content: '';
    position: absolute;
    bottom: 0;
    left: 0;
    width: calc(100% - 4px);
    height: 2px;
    background-color: ${({theme,$visibleInput})=>$visibleInput?`var(--admiral-color-Primary_Primary60Main, ${theme.color["Primary/Primary 60 Main"]})`:"none"};
  }

  ${({$collapsed})=>$collapsed&&collapsedMixin}
`,StyledInput=styled.input`
  flex-grow: 1;
  display: ${({$visible})=>$visible?"block":"none"};
  outline: none;
  appearance: none;
  border: none;
  background-color: transparent;
  padding: ${({$dimension})=>"s"===$dimension?"0 12px":"0 16px"};
  color: var(--admiral-color-Neutral_Neutral90, ${p=>p.theme.color["Neutral/Neutral 90"]});
  box-sizing: border-box;
  width: 100%;
  text-overflow: ellipsis;
  ${props=>"s"===props.$dimension?typography["Body/Body 2 Long"]:typography["Body/Body 1 Long"]};

  &::placeholder {
    color: var(--admiral-color-Neutral_Neutral50, ${p=>p.theme.color["Neutral/Neutral 50"]});
  }
`,SearchInput=e.forwardRef(({dimension="l",opened,children,value,locale,collapsed,...props},ref)=>{const theme=useTheme()||LIGHT_THEME,placeholder=locale?.inputPlaceholder||theme.locales[theme.currentLocale].groupActionsPane.inputPlaceholder,inputRef=useRef(null),[collapsedState,setCollapsedState]=useState(!1);useEffect(()=>{setCollapsedState(!opened&&!!value)},[opened,value]),useEffect(()=>{opened&&inputRef?.current?.focus()},[opened]);const visible=opened||!!value;return jsxs(InputWrapper,{$collapsed:collapsedState,$visibleInput:visible,$dimension:dimension,children:[jsx(StyledInput,{ref:refSetter(ref,inputRef),...props,$visible:visible,value,$dimension:dimension,placeholder}),children]})});export{SearchInput};
//# sourceMappingURL=SearchInput.es.js.map
