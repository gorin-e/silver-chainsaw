import{jsxs,jsx}from"react/jsx-runtime";import{useState,useMemo}from"react";import styled from"styled-components";import{EmptyMiniature,ImageMiniature}from"./ImageMiniature.es.js";import{ImagePreview}from"./ImagePreview.es.js";import{uid}from"../common/uid.es.js";const Wrapper=styled.div`
  box-sizing: border-box;

  display: flex;
  align-items: center;
  justify-content: center;
  gap: 10px;

  ${p=>p.$previewGroupMixin}
`,ImageViewer=({items,defaultActiveImg=0,appearance="single",previewGroupMixin,mobile=!1,dimension="m",container,minScale,maxScale,errorMiniature,scaleStep,showTooltip=!0,showCounter=!0,showNavigation=!0,locale,activeImg,onActiveChange,visible,onVisibleChange,onTransform,...props})=>{const[activeImgState,setActiveImgState]=useState(defaultActiveImg),activeImgInner=activeImg??activeImgState,handleActiveChange=newIndex=>{setActiveImgState(newIndex),onActiveChange?.(newIndex)},[visibleState,setVisibleState]=useState(!1),visibleInner=visible??visibleState,renderItem=(item,index)=>{const itemKey=uid();return jsx(ImageMiniature,{item,dimension,onMouseDown:()=>{handleActiveChange(index),setVisibleState(!0)}},itemKey)},miniatures=useMemo(()=>"single"===appearance?renderItem(items[defaultActiveImg],defaultActiveImg):items.map((item,index)=>renderItem(item,index)),[items,appearance,dimension,previewGroupMixin,errorMiniature]);return jsxs(Wrapper,{...props,$previewGroupMixin:previewGroupMixin,children:[miniatures,visibleInner&&jsx(ImagePreview,{item:items[activeImgInner],container,minScale,maxScale,errorMiniature:errorMiniature??jsx(EmptyMiniature,{dimension}),scaleStep,showTooltip,showCounter:showCounter&&items.length>1,showNavigation:showNavigation&&!mobile&&items.length>1,locale,activeImg:activeImgInner,totalImg:items.length,onVisibleChange:newState=>{setVisibleState(newState),onVisibleChange?.(newState)},onActiveChange:handleActiveChange,onTransform})]})};export{ImageViewer};
//# sourceMappingURL=index.es.js.map
