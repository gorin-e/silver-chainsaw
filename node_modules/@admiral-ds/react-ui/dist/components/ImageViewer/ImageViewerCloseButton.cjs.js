"use strict";var jsxRuntime=require("react/jsx-runtime"),e=require("react"),styled=require("styled-components"),borderRadius=require("../themes/borderRadius.cjs.js"),CloseOutline=require("../../node_modules/@admiral-ds/icons/build/service/CloseOutline.svg.cjs.js");function _interopDefault(e){return e&&e.__esModule?e:{default:e}}var styled__default=_interopDefault(styled);const IconPlacementContent=styled__default.default.div`
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;

  & *[fill^='#'] {
    fill: var(--admiral-color-Special_StaticWhite, ${p=>p.theme.color["Special/Static White"]});
  }

  & > svg {
    height: 24px;
    width: 24px;
  }
`,ActivityHighlighter=styled__default.default.div`
  width: 36px;
  height: 36px;
  border-radius: 50%;
  background-color: transparent;
  pointer-events: none;
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
`,eventsMixin=styled.css`
  &:focus-visible {
    outline-offset: 2px;
    outline: var(--admiral-color-Primary_Primary60Main, ${p=>p.theme.color["Primary/Primary 60 Main"]}) solid 2px;
  }

  &:hover {
    > ${ActivityHighlighter} {
      background-color: var(
        --admiral-color-Opacity_DarkStaticHover,
        ${p=>p.theme.color["Opacity/Dark Static Hover"]}
      );
    }
  }
  &:active {
    > ${ActivityHighlighter} {
      background-color: var(
        --admiral-color-Opacity_DarkStaticPress,
        ${p=>p.theme.color["Opacity/Dark Static Press"]}
      );
    }
  }
  &:focus-visible {
    > ${ActivityHighlighter} {
      background-color: transparent;
    }
  }
`,IconPlacementButton=styled__default.default.button`
  position: relative;
  padding: 0;
  margin: 6px;
  box-sizing: border-box;
  border: none;
  background-color: transparent;
  appearance: none;
  flex: 0 0 auto;
  height: 24px;
  width: 24px;
  border-radius: var(--admiral-border-radius-Small, ${p=>borderRadius.smallGroupBorderRadius(p.theme.shape)});
  overflow: visible;

  cursor: pointer;
  > * {
    pointer-events: none;
  }

  &:not(:disabled) {
    ${eventsMixin}
  }
`,ImageViewerCloseButton=e.forwardRef(({children,...props},ref)=>jsxRuntime.jsxs(IconPlacementButton,{ref,type:"button",...props,children:[jsxRuntime.jsx(ActivityHighlighter,{"aria-hidden":!0}),jsxRuntime.jsx(IconPlacementContent,{"aria-hidden":!0,children:jsxRuntime.jsx(CloseOutline.ReactComponent,{"aria-hidden":!0})})]}));exports.ImageViewerCloseButton=ImageViewerCloseButton;
//# sourceMappingURL=ImageViewerCloseButton.cjs.js.map
