/// <reference types="react" />
type Dimension = 's' | 'm';
type OrderedStyleType = 'numbers' | 'lower-letters' | 'upper-letters';
type UnorderedStyleType = 'bullet' | 'virgule' | 'icon';
export declare const OrderedListComponent: import("styled-components/dist/types").IStyledComponentBase<"web", import("styled-components/dist/types").Substitute<import("react").DetailedHTMLProps<import("react").OlHTMLAttributes<HTMLOListElement>, HTMLOListElement>, {
    $dimension: Dimension;
    $styleType: OrderedStyleType;
    $gap: React.CSSProperties['gap'];
    $markerCssMixin?: import("styled-components").RuleSet<object> | undefined;
}>> & string;
export declare const UnorderedListComponent: import("styled-components/dist/types").IStyledComponentBase<"web", import("styled-components/dist/types").Substitute<import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLUListElement>, HTMLUListElement>, {
    $dimension: Dimension;
    $styleType: UnorderedStyleType;
    $gap: React.CSSProperties['gap'];
    $markerCssMixin?: import("styled-components").RuleSet<object> | undefined;
}>> & string;
export declare const ListItemComponent: import("styled-components/dist/types").IStyledComponentBase<"web", import("styled-components").FastOmit<import("react").DetailedHTMLProps<import("react").LiHTMLAttributes<HTMLLIElement>, HTMLLIElement>, never>> & string;
export declare const ListItemContent: import("styled-components/dist/types").IStyledComponentBase<"web", import("styled-components").FastOmit<import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLDivElement>, HTMLDivElement>, never>> & string;
export declare const Icon: import("styled-components/dist/types").IStyledComponentBase<"web", import("styled-components/dist/types").Substitute<import("react").SVGProps<SVGSVGElement>, {
    color?: string | undefined;
}>> & string;
export {};
//# sourceMappingURL=style.d.ts.map