"use strict";var jsxRuntime=require("react/jsx-runtime"),e=require("react"),styled=require("styled-components"),index=require("../Button/index.cjs.js"),borderRadius=require("../themes/borderRadius.cjs.js"),index$1=require("../DropMenu/index.cjs.js"),animation=require("../skeleton/animation.cjs.js"),splitDataAttributes=require("../common/utils/splitDataAttributes.cjs.js");function _interopDefault(e){return e&&e.__esModule?e:{default:e}}function _interopNamespace(e){if(e&&e.__esModule)return e;var n=Object.create(null);return e&&Object.keys(e).forEach(function(k){if("default"!==k){var d=Object.getOwnPropertyDescriptor(e,k);Object.defineProperty(n,k,d.get?d:{enumerable:!0,get:function(){return e[k]}})}}),n.default=e,Object.freeze(n)}var e__namespace=_interopNamespace(e),styled__default=_interopDefault(styled);const mainButtonBorderRadius=styled.css`
  ${({theme})=>{const radius=borderRadius.mediumGroupBorderRadius(theme.shape);return`var(--admiral-border-radius-Medium, ${radius}) 0 0 var(--admiral-border-radius-Medium, ${radius})`}}
`,menuButtonBorderRadius=styled.css`
  ${({theme})=>{const radius=borderRadius.mediumGroupBorderRadius(theme.shape);return`0 var(--admiral-border-radius-Medium, ${radius}) var(--admiral-border-radius-Medium, ${radius}) 0`}}
`,focusStyle=styled.css`
  &:focus-visible {
    outline-offset: -4px;
    &[data-appearance~='primary'] {
      outline: var(--admiral-color-Neutral_Neutral00, ${p=>p.theme.color["Neutral/Neutral 00"]}) solid 2px;
    }
    &[data-appearance~='secondary'] {
      outline: var(--admiral-color-Primary_Primary60Main, ${p=>p.theme.color["Primary/Primary 60 Main"]}) solid 2px;
    }
  }
`,MainButton=styled__default.default(index.Button)`
  &[data-appearance~='primary'] {
    border-radius: ${p=>p.skeleton?0:mainButtonBorderRadius};
  }
  &[data-appearance~='tertiary'] {
    border-radius: ${p=>p.skeleton?0:mainButtonBorderRadius};
  }
  // повышаем специфичность, чтобы перебить изначальные стили border у Button
  &&&[data-appearance~='secondary'] {
    border-right: none;
    border-radius: ${p=>p.skeleton?0:mainButtonBorderRadius};
  }
  ${focusStyle}
`,MenuButton=styled__default.default(index.Button)`
  &[data-appearance~='primary'] {
    border-radius: ${p=>p.skeleton?0:menuButtonBorderRadius};
  }
  &[data-appearance~='tertiary'] {
    border-radius: ${p=>p.skeleton?0:menuButtonBorderRadius};
  }
  // повышаем специфичность, чтобы перебить изначальные стили border у Button
  &&&[data-appearance~='secondary'] {
    border-left: none;
    border-radius: ${p=>p.skeleton?0:menuButtonBorderRadius};
  }
  ${focusStyle}
`,Separator=styled__default.default.div`
  width: 1px;
  &[data-appearance~='primary'] {
    background-color: transparent;
  }
  &[data-appearance~='tertiary'] {
    background-color: transparent;
  }

  &[data-appearance~='secondary'] {
    background-color: ${({theme,disabled})=>disabled?`var(--admiral-color-Neutral_Neutral30, ${theme.color["Neutral/Neutral 30"]})`:`var(--admiral-color-Primary_Primary60Main, ${theme.color["Primary/Primary 60 Main"]})`};
  }

  ${({$skeleton})=>$skeleton&&animation.skeletonAnimationMixin};
`,Wrapper=styled__default.default.div`
  display: inline-flex;
`,MultiButton=e__namespace.forwardRef(({dimension="l",appearance="primary",disabled,disabledMainButton,items=[],onMainButtonClick,disableSelectedOptionHighlight,selected,onSelectItem,active,onActivateItem,isVisible,onVisibilityChange,onClickOutside,onChange,onClose,onOpen,skeleton=!1,alignSelf="auto",menuMaxHeight,dropContainerCssMixin,dropContainerClassName,dropContainerStyle,renderTopPanel,renderBottomPanel,onForwardCycleApprove,onBackwardCycleApprove,children,...props},ref)=>{const wrapperRef=e__namespace.useRef(null),menuDimension="xl"===dimension?"l":dimension,menuWidth="s"===dimension?"240px":"280px",handleWrapperFocus=()=>{wrapperRef.current?.setAttribute("data-focused","true")},handleWrapperBlur=()=>{wrapperRef.current?.setAttribute("data-focused","false")},dropMenuProps={...splitDataAttributes.passDropdownDataAttributes(props),renderTopPanel,renderBottomPanel,items,onChange,onOpen,onClose,isVisible,onVisibilityChange,onClickOutside,disableSelectedOptionHighlight,selected,onSelectItem,active,onActivateItem,menuMaxHeight,menuWidth,dropContainerCssMixin,dropContainerClassName,dropContainerStyle,alignSelf,onForwardCycleApprove,onBackwardCycleApprove};return jsxRuntime.jsx(index$1.DropMenu,{...dropMenuProps,dimension:menuDimension,disabled,renderContentProp:({buttonRef,handleKeyDown,handleClick,statusIcon,menuState})=>jsxRuntime.jsxs(Wrapper,{ref:wrapperRef,"data-focused":"false",onFocus:handleWrapperFocus,onBlur:handleWrapperBlur,...props,children:[jsxRuntime.jsx(MainButton,{ref,skeleton,dimension,appearance,disabled:disabled||disabledMainButton,onClick:onMainButtonClick,children:e__namespace.Children.toArray(children).map((child,index)=>"string"==typeof child?jsxRuntime.jsx("span",{children:child},`${child}-${index}`):child)}),jsxRuntime.jsx(Separator,{disabled,$skeleton:skeleton,"data-appearance":appearance,"aria-hidden":!0}),jsxRuntime.jsx(MenuButton,{ref:buttonRef,skeleton,dimension,appearance,disabled,displayAsSquare:!0,onKeyDown:handleKeyDown,onClick:handleClick,"aria-expanded":menuState,className:"multi-button-menu-button-with-dropdown",children:statusIcon})]})})});MultiButton.displayName="MultiButton",exports.MultiButton=MultiButton;
//# sourceMappingURL=index.cjs.js.map
