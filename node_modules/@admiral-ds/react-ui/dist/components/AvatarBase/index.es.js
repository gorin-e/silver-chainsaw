import{jsx,jsxs,Fragment}from"react/jsx-runtime";import{forwardRef}from"react";import styled,{css}from"styled-components";import{typography}from"../Typography/typography.es.js";import"../Typography/defaultTypographyMixin.es.js";import{TooltipHoc}from"../TooltipHOC/index.es.js";import{DefaultFontColorName}from"../themes/common/index.es.js";import{mediumGroupBorderRadius}from"../themes/borderRadius.es.js";import{useLoaded}from"./useLoaded.es.js";import{AvatarSVG}from"./Avatar_SVG.es.js";const Wrapper=styled.button`
  position: relative;
  width: ${({size})=>size};
  height: ${({size})=>size};
  margin: 0;
  padding: 0;
  border: none;
  appearance: none;
  background: transparent;
  -webkit-tap-highlight-color: transparent;
  cursor: pointer;
  border-radius: var(--admiral-border-radius-Medium, ${p=>mediumGroupBorderRadius(p.theme.shape)});

  &:focus-visible {
    outline-offset: 2px;
    outline: var(--admiral-color-Primary_Primary60Main, ${p=>p.theme.color["Primary/Primary 60 Main"]}) solid 2px;
  }
`,WrapperWithTooltip=TooltipHoc(Wrapper),getTextColor=css`
  ${({theme,$appearance})=>{switch($appearance){case"neutral1":case"white":case"neutral2":case"light":return`var(--admiral-color-Neutral_Neutral90, ${theme.color[DefaultFontColorName]})`;case"neutral3":case"grey":return`var(--admiral-color-Special_StaticWhite, ${theme.color["Special/Static White"]})`;case"neutral4":case"dark":return`var(--admiral-color-Neutral_Neutral00, ${theme.color["Neutral/Neutral 00"]})`;default:return $appearance?.text||`var(--admiral-color-Neutral_Neutral90, ${theme.color[DefaultFontColorName]})`}}}
`,getTypography=css`
  ${({$dimension})=>{switch($dimension){case"xxs":case"xs":case"s":return typography["Caption/Caption 1"];case"m":case"l":return typography["Body/Body 1 Short"];default:return typography["Subtitle/Subtitle 1"]}}}
`,Text=styled.span`
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  user-select: none;
  color: ${getTextColor};
  ${getTypography}
`,getIconSize=css`
  ${({$dimension})=>{switch($dimension){case"xxs":case"xs":case"s":return"16px";case"m":return"24px";case"l":return"28px";default:return"32px"}}}
`,getIconColor=css`
  ${({theme,$appearance})=>{switch($appearance){case"neutral1":case"white":case"neutral2":case"light":return`var(--admiral-color-Neutral_Neutral50, ${theme.color["Neutral/Neutral 50"]})`;case"neutral3":case"grey":return`var(--admiral-color-Special_StaticWhite, ${theme.color["Special/Static White"]})`;case"neutral4":case"dark":return`var(--admiral-color-Neutral_Neutral00, ${theme.color["Neutral/Neutral 00"]})`;default:return $appearance?.icon||`var(--admiral-color-Neutral_Neutral50, ${theme.color["Neutral/Neutral 50"]})`}}}
`,getSize=(withActivityRing,dimension)=>{let additionalPadding=0;switch(withActivityRing&&"xxs"!==dimension&&(additionalPadding=4),dimension){case"xxs":return 20+2*additionalPadding+"px";case"xs":return 24+2*additionalPadding+"px";case"s":return 32+2*additionalPadding+"px";case"m":return 40+2*additionalPadding+"px";case"l":return 48+2*additionalPadding+"px";default:return 56+2*additionalPadding+"px"}},IconWrapper=styled.div`
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: ${getIconSize};
  height: ${getIconSize};

  & svg {
    & *[fill^='#'] {
      fill: ${getIconColor};
    }
    width: 100%;
    height: 100%;
  }
`,AvatarBase=forwardRef(({userName,userInitials,href,status,dimension="xl",icon:Icon,appearance="neutral2",group=!1,showTooltip=!0,isMenuAvatar=!1,svgMaskId,withActivityRing=!1,showActivityRing=!1,...props},ref)=>{const loaded=useLoaded(href),hasImage=Boolean(href&&"loaded"===loaded),hasIcon=Boolean(Icon&&!hasImage),hasAbbr=!hasImage&&!hasIcon||isMenuAvatar,avatarDimension="xxs"===dimension&&(status||group||withActivityRing)?"xs":dimension,maxAbbrLength="xs"===avatarDimension||"xxs"===avatarDimension?1:2,defaultUserInitials=userName?.split(" ").map(word=>word.toUpperCase()[0]).join("").slice(0,maxAbbrLength),abbr=isMenuAvatar?userName:userInitials||defaultUserInitials,renderAvatarContent=()=>jsxs(Fragment,{children:[jsx(AvatarSVG,{dimension:avatarDimension,size:getSize(withActivityRing,avatarDimension),hasImage,href,status,appearance,group,svgMaskId,withActivityRing,showActivityRing}),hasAbbr&&jsx(Text,{$dimension:avatarDimension,$appearance:appearance,children:abbr}),hasIcon&&jsx(IconWrapper,{$dimension:avatarDimension,$appearance:appearance,children:Icon})]});return showTooltip?jsx(WrapperWithTooltip,{ref,size:getSize(withActivityRing,avatarDimension),renderContent:()=>userName,...props,children:renderAvatarContent()}):jsx(Wrapper,{ref,size:getSize(withActivityRing,avatarDimension),...props,children:renderAvatarContent()})});AvatarBase.displayName="AvatarBase";export{AvatarBase};
//# sourceMappingURL=index.es.js.map
