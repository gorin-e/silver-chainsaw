import * as React from 'react';
import type { MenuModelItemProps } from '../../components/Menu/MenuItem';
import type { DropMenuComponentProps, DropMenuStyleProps } from '../../components/DropMenu';
export type OverflowMenuDimension = 'l' | 'm' | 's';
export interface OverflowMenuProps extends Omit<React.HTMLAttributes<HTMLButtonElement>, 'onChange'>, Omit<DropMenuComponentProps, 'targetElement'>, DropMenuStyleProps {
    /** Выбранная опция */
    selected?: string;
    /**
     * @deprecated Помечено как deprecated в версии 3.2.0, будет удалено в 10.x.x версии.
     * Взамен используйте onSelectItem
     *
     * Колбек на изменение выбранной опции
     **/
    onChange?: (id: string) => void;
    /**
     * @deprecated Помечено как deprecated в версии 3.2.0, будет удалено в 10.x.x версии.
     * Взамен используйте onVisibilityChange
     *
     * Колбек на открытие меню
     **/
    onOpen?: () => void;
    /**
     * @deprecated Помечено как deprecated в версии 3.2.0, будет удалено в 10.x.x версии.
     * Взамен используйте nVisibilityChange
     *
     * Колбек на закрытие меню
     **/
    onClose?: () => void;
    /** Размер компонента */
    dimension?: OverflowMenuDimension;
    /** Отключение компонента */
    disabled?: boolean;
    /** Ориентация компонента */
    isVertical?: boolean;
    /** Опции выпадающего списка */
    items: Array<MenuModelItemProps>;
}
export declare const OverflowMenu: React.ForwardRefExoticComponent<OverflowMenuProps & React.RefAttributes<HTMLButtonElement>>;
//# sourceMappingURL=index.d.ts.map