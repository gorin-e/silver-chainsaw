"use strict";var jsxRuntime=require("react/jsx-runtime"),e=require("react"),styled=require("styled-components"),index=require("../Spinner/index.cjs.js"),appearanceMixin=require("./appearanceMixin.cjs.js"),commonMixin=require("./commonMixin.cjs.js"),dimensionMixin=require("./dimensionMixin.cjs.js"),animation=require("../skeleton/animation.cjs.js");function _interopDefault(e){return e&&e.__esModule?e:{default:e}}function _interopNamespace(e){if(e&&e.__esModule)return e;var n=Object.create(null);return e&&Object.keys(e).forEach(function(k){if("default"!==k){var d=Object.getOwnPropertyDescriptor(e,k);Object.defineProperty(n,k,d.get?d:{enumerable:!0,get:function(){return e[k]}})}}),n.default=e,Object.freeze(n)}var e__namespace=_interopNamespace(e),styled__default=_interopDefault(styled);const StyledSpinner=styled__default.default(index.Spinner)`
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
`,StyledButton=styled__default.default.button`
  position: relative;
  box-sizing: border-box;
  display: inline-flex;
  flex-direction: row;
  gap: 8px;
  align-items: center;
  vertical-align: middle;
  appearance: none;
  border: none;
  background: transparent;
  padding: 0;
  white-space: nowrap;
  ${p=>p.$skeleton&&animation.skeletonAnimationMixin};

  ${commonMixin.ButtonContainer} {
    visibility: ${p=>p.$skeleton||p.$loading?"hidden":"visible"};
  }

  ${commonMixin.IconContainer} {
    visibility: ${p=>p.$skeleton||p.$loading?"hidden":"visible"};
  }

  ${appearanceMixin.appearanceMixin};

  ${dimensionMixin.dimensionMixin};
`,TextButton=e__namespace.forwardRef(({appearance="primary",dimension="m",icon,iconStart,iconEnd,type="button",text,displayRight=!1,loading=!1,skeleton=!1,...props},ref)=>{const disabled=props.disabled||loading||skeleton;return jsxRuntime.jsxs(StyledButton,{...props,"data-dimension":dimension,"data-appearance":appearance,ref,$appearance:appearance,$dimension:dimension,type,disabled,$loading:loading,$skeleton:skeleton,children:[loading&&jsxRuntime.jsx(StyledSpinner,{dimension:"s"===dimension?"ms":"m"}),iconStart?jsxRuntime.jsx(commonMixin.IconContainer,{children:iconStart}):icon&&!displayRight?jsxRuntime.jsx(commonMixin.IconContainer,{children:icon}):null,jsxRuntime.jsx(commonMixin.ButtonContainer,{children:jsxRuntime.jsx("span",{children:text})}),iconEnd?jsxRuntime.jsx(commonMixin.IconContainer,{children:iconEnd}):icon&&displayRight?jsxRuntime.jsx(commonMixin.IconContainer,{children:icon}):null]})});TextButton.displayName="TextButton",exports.TextButton=TextButton;
//# sourceMappingURL=index.cjs.js.map
