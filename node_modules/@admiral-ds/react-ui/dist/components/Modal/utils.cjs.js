"use strict";var scrollbarUtil=require("../common/dom/scrollbarUtil.cjs.js");const ownerDocument=node=>node&&node.ownerDocument||document,ownerWindow=node=>ownerDocument(node).defaultView||window,getPaddingRight=element=>parseInt(ownerWindow(element).getComputedStyle(element).paddingRight,10)||0;exports.findIndexOf=function(items,callback){let idx=-1;return items.some((item,index)=>!!callback(item)&&(idx=index,!0)),idx},exports.restoreContainer=wrapper=>{const container=wrapper,initialStyle=[];if((container=>{const doc=ownerDocument(container);return doc.body===container?ownerWindow(container).innerWidth>doc.documentElement.clientWidth:container.scrollHeight>container.clientHeight})(container)){initialStyle.push({value:container.style.paddingRight,property:"padding-right",el:container}),container.style.paddingRight=`${getPaddingRight(container)+scrollbarUtil.getScrollbarSize()}px`;const fixedElements=ownerDocument(container).querySelectorAll('*[style="position:fixed"]');[].forEach.call(fixedElements,element=>{initialStyle.push({value:element.style.paddingRight,property:"padding-right",el:element}),element.style.paddingRight=`${getPaddingRight(element)+scrollbarUtil.getScrollbarSize()}px`})}const parent=container.parentElement,containerWindow=ownerWindow(container),scrollContainer="HTML"===parent?.nodeName&&"scroll"===containerWindow.getComputedStyle(parent).overflowY?parent:container;initialStyle.push({value:scrollContainer.style.overflow,property:"overflow",el:scrollContainer},{value:scrollContainer.style.overflowX,property:"overflow-x",el:scrollContainer},{value:scrollContainer.style.overflowY,property:"overflow-y",el:scrollContainer}),scrollContainer.style.overflow="hidden";return()=>{initialStyle.forEach(({value,el,property})=>{value?el.style.setProperty(property,value):el.style.removeProperty(property)})}};
//# sourceMappingURL=utils.cjs.js.map
