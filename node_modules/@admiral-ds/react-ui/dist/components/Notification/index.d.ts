import type { HTMLAttributes } from 'react';
import * as React from 'react';
export type NotificationStatus = 'info' | 'error' | 'success' | 'warning';
export interface NotificationProps extends Omit<HTMLAttributes<HTMLDivElement>, 'title' | 'id'> {
    /** Статус notification */
    status?: NotificationStatus;
    /** Заголовок notification */
    title?: React.ReactNode;
    /** Название для ссылки */
    linkText?: string;
    /** Url ссылки */
    href?: string;
    /** Переключатель видимости иконки "Close" */
    isClosable?: boolean;
    /** Закрытие notification */
    onClose?: () => void;
    /** Переключатель видимости статусных иконок */
    displayStatusIcon?: boolean;
}
/**
 * @deprecated use NotificationItem component instead
 */
export declare const Notification: {
    ({ status, title, linkText, href, displayStatusIcon, isClosable, onClose, children, ...props }: React.PropsWithChildren<NotificationProps>): import("react/jsx-runtime").JSX.Element;
    displayName: string;
};
//# sourceMappingURL=index.d.ts.map