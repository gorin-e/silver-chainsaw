import type { FC, HTMLAttributes, InputHTMLAttributes, ReactNode, RefObject } from 'react';
import type { MenuItemProps, MenuModelItemProps } from '../../components/Menu/MenuItem';
import type { ComponentDimension } from '../../components/input/types';
import type { DropContainerStyles } from '../../components/DropdownContainer';
import type { RenderPropsType } from '../../components/input/InputEx/SuffixSelect';
import type { RenderProps } from '../../components/input/InputEx';
import type { DropMenuComponentProps } from '../../components/DropMenu';
export interface GlobalSearchProps extends Omit<InputHTMLAttributes<HTMLInputElement>, 'onChange'>, Pick<DropMenuComponentProps, 'targetElement'> {
    /** Вызывается при изменении значения в поле ввода */
    onChange: (newValue: string) => void;
    /** Модель данных, с рендер-пропсами*/
    model: Array<MenuModelItemProps>;
    /** Отображать иконку очистки поля */
    displayClearIcon?: boolean;
    /** Отображать статус загрузки данных */
    isLoading?: boolean;
    /** Пропсы для кнопки поиска*/
    submitButtonProps?: HTMLAttributes<HTMLDivElement>;
    /** Делает высоту компонента больше или меньше обычной */
    dimension?: ComponentDimension;
    /** Значение префикса */
    prefixValue?: ReactNode;
    /** Список значений префикса */
    prefixValueList?: ReactNode[];
    /** Срабатывает при выборе нового значения префикса*/
    onPrefixValueChange?: (value: ReactNode) => void;
    /** Специальный метод для рендера компонента по значению префикса */
    renderPrefixValue?: (props: RenderProps) => ReactNode;
    /** Специальный метод для рендера опции списка префикса по значению */
    renderPrefixOption?: (props: RenderPropsType<ReactNode> & MenuItemProps) => ReactNode;
    /** Иконки для отображения в правом углу поля */
    icons?: ReactNode;
    /**
     * @deprecated Помечено как deprecated в версии 8.8.0, будет удалено в 10.x.x версии.
     * Взамен используйте параметр targetElement.
     *
     * Ref контейнера, относительно которого нужно выравнивать дроп контейнеры,
     * если не указан, выравнивание произойдет относительно контейнера компонента
     **/
    alignDropRef?: RefObject<HTMLElement>;
    /** Позволяет добавлять стили и className для выпадающего меню кнопки */
    prefixDropContainerStyle?: DropContainerStyles;
}
export declare const GlobalSearch: FC<GlobalSearchProps>;
//# sourceMappingURL=index.d.ts.map