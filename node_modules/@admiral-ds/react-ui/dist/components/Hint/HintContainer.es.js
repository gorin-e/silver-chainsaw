import{jsx,jsxs}from"react/jsx-runtime";import*as e from"react";import{keyboardKey}from"../common/keyboardKey.es.js";import{useClickOutside}from"../common/hooks/useClickOutside.es.js";import{getKeyboardFocusableElements}from"../common/utils/getKeyboardFocusableElements.es.js";import{throttle}from"../common/utils/throttle.es.js";import{useDropdown,useDropdownsClickOutside}from"../DropdownProvider.es.js";import{useTheme}from"styled-components";import{LIGHT_THEME}from"../themes/light/index.es.js";import"../themes/common/locales.es.js";import"../Typography/typography.es.js";import"../Typography/defaultTypographyMixin.es.js";import{HintWrapper,HintDialog,HintContent,CloseButton}from"./style.es.js";const HintContainer=e.forwardRef(({dimension,isMobile,content,visibilityTrigger,scrollableParents,anchorElementRef,anchorId,hideHint,startRecalculation,locale,preventFocusSteal,...props},ref)=>{const theme=useTheme()||LIGHT_THEME,closeBtnAriaLabel=locale?.closeButtonAriaLabel||theme.locales[theme.currentLocale].hint.closeButtonAriaLabel,hideOnScrollResize="hover"===visibilityTrigger,hintRef=e.useRef(null),previousFocusedElement=e.useRef(null),[firstFocusableChild,setFirstFocusableChild]=e.useState(),[lastFocusableChild,setLastFocusableChild]=e.useState(),{addDropdown,removeDropdown,dropdowns}=useDropdown(hintRef),handleClickOutside=e=>{useDropdownsClickOutside(e,dropdowns)&&hideHint()};"click"===visibilityTrigger&&useClickOutside([hintRef,anchorElementRef],handleClickOutside),e.useLayoutEffect(()=>(addDropdown?.(hintRef),previousFocusedElement.current=document.activeElement,()=>{removeDropdown?.(hintRef)}),[]),e.useLayoutEffect(()=>{if(!preventFocusSteal&&hintRef.current&&"click"===visibilityTrigger){const focusableEls=getKeyboardFocusableElements(hintRef.current);setFirstFocusableChild(focusableEls[0]),setLastFocusableChild(focusableEls[focusableEls.length-1]),focusableEls[0]?.focus()}},[visibilityTrigger,content,preventFocusSteal]),e.useImperativeHandle(ref,()=>hintRef.current),e.useLayoutEffect(()=>{const[listener,freeResources]=hideOnScrollResize?[hideHint,()=>{}]:throttle(()=>{startRecalculation({})},150);return addEventListener("resize",listener),addEventListener("scroll",listener),scrollableParents.forEach(el=>el.addEventListener("scroll",listener)),()=>{removeEventListener("resize",listener),removeEventListener("scroll",listener),scrollableParents.forEach(el=>el.removeEventListener("scroll",listener)),freeResources()}});return jsx(HintWrapper,{role:"tooltip",ref:hintRef,onKeyDown:event=>{event.stopPropagation();const code=keyboardKey.getCode(event);code===keyboardKey.Escape?(event.preventDefault(),previousFocusedElement.current.focus(),hideHint()):code===keyboardKey.Tab&&"click"===visibilityTrigger&&(code===keyboardKey.Shift?document.activeElement===firstFocusableChild&&(lastFocusableChild.focus(),event.preventDefault()):document.activeElement===lastFocusableChild&&(firstFocusableChild.focus(),event.preventDefault()))},children:jsxs(HintDialog,{...props,role:"dialog","aria-labelledby":anchorId,$dimension:dimension,$isMobile:isMobile,"data-trigger":visibilityTrigger,children:[jsx(HintContent,{children:content}),"click"===visibilityTrigger&&jsx(CloseButton,{dimension:"mSmall",highlightFocus:!1,"aria-label":closeBtnAriaLabel,onClick:event=>{event?.stopPropagation(),previousFocusedElement.current.focus(),hideHint()}})]})})});export{HintContainer};
//# sourceMappingURL=HintContainer.es.js.map
